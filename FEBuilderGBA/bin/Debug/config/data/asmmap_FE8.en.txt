//This data is made with aim of being readable by machine fast	
//
//address	name	RET=return	r0=arg0	//Argument Return value is not yet used and should not trust so much	
//address	@STRUCTNAME	name			//struct STRUCTNAME name;
//address	@STRUCTNAME@[size]	name	//struct STRUCTNAME name[size];
//address	:address2	name			//range data from address to address2
//
//@STRUCTNAME@OFFSET1	TYPE	name	//struct STRUCTNAME{   TYPE name
//@STRUCTNAME@OFFSET2	TYPE	name	//                     TYPE name      };
//
//	{J}		//for FE8J
//	{U}		//for FE8U
//
080B9DEC	Function for obtaining selling price	RET=Selling price	r0=Number << 8 + ITEM ID	{J}
080B5268	Function for obtaining selling price	RET=Selling price	r0=Number << 8 + ITEM ID	{U}
0800D340	CallMapEventEngine	void	r0=Event instruction pointer:POINTER_EVENT	r1=?1-3	{J}
0800D07C	CallMapEventEngine	void	r0=Event instruction pointer:POINTER_EVENT	r1=?1-3	{U}
080860A8	SetFlag	void	r0=Flags:FLAG	{J}
08083D80	SetFlag	void	r0=Flags:FLAG	{U}
080860D0	CheckFlag	RET=BOOL	r0=Flag to check:FLAG	{J}
08083DA8	CheckFlag	RET=BOOL	r0=Flag to check:FLAG	{U}
0800D548	CallBattleQuoteTextEvents	void	r0=String number:TEXT	{J}
0800D284	CallBattleQuoteTextEvents	void	r0=String number:TEXT	{U}
080D01FC	m4aSongNumStart	r0=music id:SOUND	{U}
0802cb70	FinishUp10ExpBattle	void	r0=A unit that gives experience values:UNIT	{J}
0802CC38	FinishUp10ExpBattle	void	r0=A unit that gives experience values:UNIT	{U}
08034520	GetChapterDefinition	r0=Address of map setting	r0=map ID you want to examine:MAPCHAPTER	{J}
08034618	GetChapterDefinition	r0=Address of map setting	r0=map ID you want to examine:MAPCHAPTER	{U}
080a8d94	RegisterChapterTimeAndTurnCount	void	r0=202bcec Fixed?	{J}
080A4350	RegisterChapterTimeAndTurnCount	void	r0=202bcec Fixed?	{U}
08002c30	ProcStartBlocking	void	r0=6C Struct	r1=Unknown	{J}
08002CE0	ProcStartBlocking	void	r0=6C Struct	r1=Unknown	{U}
08000d68	CopyToPaletteBuffer Copies palette to buffer and sets updated palette flag	void	r0=Palette Address:PAL	r1=destination offset	r2=size(0x20 full)	{J}
08000DB8	CopyToPaletteBuffer Copies palette to buffer and sets updated palette flag	void	r0=Palette Address:PAL	r1=destination offset	r2=size(0x20 full)	{U}
08013008	LZ77 Decompression of compressed data	void	r0=Compressed data	r1=Extracted location	{J}
08012f50	LZ77 Decompression of compressed data	void	r0=Compressed data	r1=Extracted location	{U}
080dc0dc	Uncompressed TSA reading	void	r0=Unknown	r1=Uncompressed TSA	r2=Unknown	r3=Unknown	{J}
080D7498	Uncompressed TSA reading	void	r0=Unknown	r1=Uncompressed TSA	r2=Unknown	r3=Unknown	{U}
08008914	Write numbers where you can refer to in conversation @0080@0005	void	r0=number you want to display	{J}
08008A18	Write numbers where you can refer to in conversation @0080@0005	void	r0=number you want to display	{U}
08002424	Switch BGM	void	r0=BGM Number:MUSIC	r1=Unknown	{J}
080024D4	Switch BGM	void	r0=BGM Number:MUSIC	r1=Unknown	{U}
080023C8	Switch BGM(Add current BGM)	void	r0=BGM Number:MUSIC	r1=Unknown	r2=Unknown	{J}
08002478	Switch BGM(Add current BGM)	void	r0=BGM Number:MUSIC	r1=Unknown	r2=Unknown	{U}
08002398	Switch BGM (Low layer)	void	r0=BGM Number:MUSIC	{J}
08002448	Switch BGM (Low layer)	void	r0=BGM Number:MUSIC	{U}
08002434 	Switch BGM (another command 1)	void	r0=BGM Number:MUSIC	{J}
080024E4	Switch BGM (another command 1)	void	r0=BGM Number:MUSIC	{U}
08073f38	Switch BGM (another command 2)	void	r0=BGM Number:MUSIC	{J}
08071A54	Switch BGM (another command 2)	void	r0=BGM Number:MUSIC	{U}
08002938	Switch BGM (another command 3)	void	r0=BGM Number:MUSIC	r1=Unknown	r2=Unknown	{J}
080029E8	Switch BGM (another command 3)	void	r0=BGM Number:MUSIC	r1=Unknown	r2=Unknown	{U}
080d6A4C	vsprintf	{J}
080D2F7C	vsprintf	{U}
08088830	Switch to EiLike edition (after appearance of Verni)	{J}
0808884c	Switch to Ephraum edition	{J}
02024CC2	Whether key is kept pressed  not pushed=0x0C   While being pressed Do you count up from 0x02? 	{J}
02024CC4	key code (bit) is stored while pressing key A:0x0100 B:0x0200 SELECT:0x0400 START:0x0800 RIGHT:0x1000 LEFT:0x2000 UP:0x4000 DOWN:0x8000 L:0x0001 R:0x0002	{J}
02024CC6	It is same as 02024CC4, but update cycle is short	{J}
02024CCA	While holding down key, store key code same as 02024CC4	{J}
02024CCC	key code last pressed is stored permanently	{J}
02029D8C	Cursor x coordinate x coordinate on screen	{J}
02029D8E	Cursor y coordinate y coordinate on screen	{J}
02024E5C	Memory Area of BGM Area	{J}
02024E60	BGM number	{J}
02024E62	BGM playback status flag	{J}
02024E63	BGM flag?	{J}
0202BCEC	Memory Area of stage	{J}
0202BCF4	GOLD	{J}
0202BCF9	Fog density	{J}
0202BCFA	MAP ID	{J}
0202BCFB	Phase 0=Your army,0x40=ally,0x80=Enemy	{J}
0202BCFC	Number of turns	{J}
0202BD00	Setting flag	{J}
0202BD07	Chapter specification beginning=0x1,EiLike=0x2,Ephraum edition=0x3	{J}
0202BD2C	CONFIG Cursor etc	{J}
0202BD2D	CONFIG Sound effect	{J}
0202BD2E	CONFIG Anime setting difficulty	{J}
0203A818	Contents of transport team	{J}
0203E89B	Number of wins Number of wins with ID0x1 (Lower 8 bits)	{J}
0203E89B	Number of wins + number of battles ID0x1 of Win or lose(Upper 2 bits)+Battle number << 2	{J}
0203E8A0	ID0x2 of Win or lose  Max ID 0x45	{J}
0203ECF0	Chapter number chapter and number of turns in introduction Turn << 7 + MAPID	{J}
0203ECF2	clear time clear time (seconds) of introduction is entered	{J}
0300007C	Numbers such as price Numbers that can be obtained with @0080@0005 in text	{J}
030004B0	MemorySlot00 Always be 0		{J}
030004B8	MemorySlot00 Always be 0		{U}
030004B4	MemorySlot01	{J}
030004BC	MemorySlot01	{U}
030004B8	MemorySlot02	{J}
030004C0	MemorySlot02	{U}
030004BC	MemorySlot03	{J}
030004C4	MemorySlot03	{U}
030004C0	MemorySlot04	{J}
030004C8	MemorySlot04	{U}
030004C4	MemorySlot05	{J}
030004CC	MemorySlot05	{U}
030004C8	MemorySlot06	{J}
030004D0	MemorySlot06	{U}
030004CC	MemorySlot07 It is often used as a temporary variable		{J}
030004D4	MemorySlot07 It is often used as a temporary variable		{U}
030004D0	MemorySlot08	{J}
030004D8	MemorySlot08	{U}
030004D4	MemorySlot09	{J}
030004DC	MemorySlot09	{U}
030004D8	MemorySlot0A	{J}
030004E0	MemorySlot0A	{U}
030004DC	MemorySlot0B It is mainly used for reading coordinates		{J}
030004E4	MemorySlot0B It is mainly used for reading coordinates		{U}
030004E0	MemorySlot0C results of processing are mainly returned		{J}
030004E8	MemorySlot0C results of processing are mainly returned		{U}
//030004E4	MemorySlot0D size of queue	{J}
//030004EC	MemorySlot0D size of queue	{U}
03005315	Road data to display on road data screen	{J}
03005260	Flags 0x01～0x28	{J}
03001C78	Event address being executed? (Excluding start events)	{J}
0202B6A8	last displayed string ID	{J}
0202B6AC	last displayed string ID	{U}

//thank you Tiki
//BIOS ARM(not thumb)
080D6364	ArcTan2	{J}
080D166C	ArcTan2	{U}
080D6368	BgAffineSet	{J}
080D1670	BgAffineSet	{U}
080D636C	CPUFastSet	{J}
080D1674	CPUFastSet	{U}
080D6370	CPUSet	{J}
080D1678	CPUSet	{U}
080D6374	Div	{J}
080D167C	Div	{U}
080D637C	Mod	{J}
080D1684	Mod	{U}
080D638C	HuffUnComp	{J}
080D168C	HuffUnComp	{U}
080D6390	LZ77UnCompVram	{J}
080D1690	LZ77UnCompVram	{U}
080D6394	LZ77UnCompWram	{J}
080D1694	LZ77UnCompWram	{U}
080D6398	MultiBoot	{J}
080D1698	MultiBoot	{U}
080D63A0	ObjAffineSet	{J}
080D16A0	ObjAffineSet	{U}
080D63A4	RLUnCompVram	{J}
080D16A4	RLUnCompVram	{U}
080D63A8	RLUnCompWram	{J}
080D16A8	RLUnCompWram	{U}
080D63C4	SoundBiasReset	{J}
080D16C8	SoundBiasReset	{U}
080D63CC	SoundBiasSet	{J}
080D16D0	SoundBiasSet	{U}
080D63D4	Sqrt	{J}
080D16D8	Sqrt	{U}
080D63D8	VBlankIntrWait	{J}
080D16DC	VBlankIntrWait	{U}

8012F94	OutputBitmapToVRAM	void	unsigned int *bitmap, void *dst	{J}
8012EDC	OutputBitmapToVRAM	void	unsigned int *bitmap, void *dst	{U}
8013008	AutoCopyOrDecompressImageToVRAM	void	_BYTE *src, int dst	{J}
8012F50	AutoCopyOrDecompressImageToVRAM	void	_BYTE *src, int dst	{U}
80131BC	writePlainTSA	void	u16 *TSABufferInWRAM, int tileIndexAndPaletteIndex, int height, int width	{J}
8013104	writePlainTSA	void	u16 *TSABufferInWRAM, int tileIndexAndPaletteIndex, int height, int width	{U}
80130AC	changeTiles	void	void *src, void *dst, int width, int height	{J}
8012FF4	changeTiles	void	void *src, void *dst, int width, int height	{U}
//	80C0C28	writeTemplateTSA	_WORD	_WORD *TSABufferInWRAM, _WORD *TSATemplate, __int16 TSABaseValue	{J}
8005330	AddSprite	void	int priorityInLinkedList, s16 x, s16 y, int templateAddr, s16 tileNo	{J}
8005428	AddSprite	void	int priorityInLinkedList, s16 x, s16 y, int templateAddr, s16 tileNo	{U}
//	8001D64	setBGnPosition	void	unsigned __int16 n, __int16 x, __int16 y	{J}


@Unit@00	pointer	UnitPointer
@Unit@04	pointer	ClassPointer
@Unit@08	byte	Level
@Unit@09	byte	EXP
@Unit@0A	byte	Recovery mode
@Unit@0B	byte	UnitTableID
@Unit@0C	byte	State	(+1=Hide,+2=acted,+4=death,+8=non sortie,+10=rescuing,+20=rescuing,+40=Cantoing,+80=Under a roof)
@Unit@0D	byte	State2	(+1=Waku +8 In ballista +10=Drop last item +20=Growth up +40=Solo animation 1 +80=Solo animation 2)
@Unit@0E	byte	State3	(+1=Escape +2= +4= +8=super arena(either +4,+2) +20=Was not deployed last chapter +80=2nd portrait)
@Unit@0F	byte	State4	(+2=Sortie is not allowed +8=Use link arena palette)
@Unit@10	byte	X	coordinate
@Unit@11	byte	Y	coordinate
@Unit@12	byte	MAX HP
@Unit@13	byte	Current HP
@Unit@14	byte	Power or Magic
@Unit@15	byte	Skill
@Unit@16	byte	Spd
@Unit@17	byte	Def
@Unit@18	byte	Ref
@Unit@19	byte	Luck
@Unit@1A	byte	Physique correction	(5bit)
@Unit@1B	byte	Trv Unit ID
@Unit@1C	byte	Unknown1C	(tmp?)
@Unit@1D	byte	Move correction	(5bit)
@Unit@1E	byte	ItemID1
@Unit@1F	byte	ItemStock1
@Unit@20	byte	ItemID2
@Unit@21	byte	ItemStock2
@Unit@22	byte	ItemID3
@Unit@23	byte	ItemStock3
@Unit@24	byte	ItemID4
@Unit@25	byte	ItemStock4
@Unit@26	byte	ItemID5
@Unit@27	byte	ItemStock5
@Unit@28	byte	Sword EXP
@Unit@29	byte	Lance EXP
@Unit@2A	byte	Axs EXP
@Unit@2B	byte	Bow EXP
@Unit@2C	byte	Staff EXP
@Unit@2D	byte	Rule EXP
@Unit@2E	byte	Light EXP
@Unit@2F	byte	Dark EXP
@Unit@30	byte	state and number of turns
@Unit@31	byte	PureWaterTourch
@Unit@32	byte	Support1
@Unit@33	byte	Support2
@Unit@34	byte	Support3
@Unit@35	byte	Support4
@Unit@36	byte	Support5
@Unit@37	byte	Support6
@Unit@38	byte	Support7
@Unit@39	byte	SupportFlag
@Unit@3A	byte	Unknown2	maybe blank
@Unit@3B	byte	Unknown3	maybe blank
@Unit@3C	pointer	MapSprite
@Unit@40	byte	AI 3
@Unit@41	byte	AI 4
@Unit@42	byte	AI 1
@Unit@43	byte	AI 1 Counter
@Unit@44	byte	AI 2
@Unit@45	byte	AI 2 Counter
@Unit@46	byte	Unknown8	(tmp)
@Unit@47	byte	Unknown9	(blank)

0202BE48	@Unit@[3E]	Player	{J}
0202CFB8	@Unit@[32]	Enemy	{J}
0202DDC8	@Unit@[14]	Ally	{J}

0202BE4C	@Unit@[3E]	Player	{U}
0202CFBC	@Unit@[32]	Enemy	{U}
0202DDCC	@Unit@[14]	Ally	{U}


@StatusMenuText@00	short	start tile index	(relative to Font root)
@StatusMenuText@02	byte	current local x cursor	(in pixels)
@StatusMenuText@03	byte	current text color id
@StatusMenuText@04	byte	Text tile width	(usually only half actual used tile amount!)
@StatusMenuText@05	bool	Uses Double Buffer
@StatusMenuText@06	byte	current buffer id	(0 or 1)
@StatusMenuText@07	byte	idk	(maybe unused? initialized to 0)
02003C34	@StatusMenuText	Skill	{J}
02003C3C	@StatusMenuText	Speed	{J}
02003C44	@StatusMenuText	Luck	{J}
02003C4C	@StatusMenuText	Def	{J}
02003C54	@StatusMenuText	Ref	{J}
02003C5C	@StatusMenuText	Mov	{J}
02003C64	@StatusMenuText	Con	{J}
02003C6C	@StatusMenuText	Aid	{J}
02003C74	@StatusMenuText	Trv	{J}
02003C7C	@StatusMenuText	Affin	{J}
02003C84	@StatusMenuText	Cond	{J}
02003CBC	@StatusMenuText	Atk	{J}
02003CC4	@StatusMenuText	Hit	{J}
02003CB4	@StatusMenuText	Rng	{J}
02003CCC	@StatusMenuText	Crit	{J}
02003CD4	@StatusMenuText	Avoid	{J}
02003CDC	@StatusMenuText	Weapon1	{J}
02003CE4	@StatusMenuText	Weapon2	{J}
02003CEC	@StatusMenuText	Weapon3	{J}
02003CF4	@StatusMenuText	Weapon4	{J}

02003C34	@StatusMenuText	Skill	{U}
02003C3C	@StatusMenuText	Speed	{U}
02003C44	@StatusMenuText	Luck	{U}
02003C4C	@StatusMenuText	Def	{U}
02003C54	@StatusMenuText	Ref	{U}
02003C5C	@StatusMenuText	Mov	{U}
02003C64	@StatusMenuText	Con	{U}
02003C6C	@StatusMenuText	Aid	{U}
02003C74	@StatusMenuText	Trv	{U}
02003C7C	@StatusMenuText	Affin	{U}
02003C84	@StatusMenuText	Cond	{U}
02003CBC	@StatusMenuText	Atk	{U}
02003CC4	@StatusMenuText	Hit	{U}
02003CB4	@StatusMenuText	Rng	{U}
02003CCC	@StatusMenuText	Crit	{U}
02003CD4	@StatusMenuText	Avoid	{U}
080860bc	Unset flag	r0=Declining flag: FLAG	{J}
08083D94	Unset flag	r0=Declining flag: FLAG	{U}
08080D68	Import Palette	r0=Palette address: PAL	r1=Forwarding destination	r2=Size (0x20 in all)	{J}
08080DB8	Import Palette	r0=Palette address: PAL	r1=Forwarding destination	r2=Size (0x20 in all)	{U}
0800290c	Switch BGM (another commandPart 4)	r0=BGM number: MUSIC	r1=Mystery	{J}
080029BC	Switch BGM (another commandPart 4)	r0=BGM number: MUSIC	r1=Mystery	{U}
08002af4	String handling(anti-huffman target 1)	{J}
08002BA4	String handling(anti-huffman target 1)	{U}
08003054	Process related to execution of 6CStruct	{J}
08003104	Process related to execution of 6CStruct	{U}
080040fa	Heart character of unknown character	{J}
08003f76	Heart character of unknown character	{J}
0800e9e0	Load images		r0=NAZO	r1=CG	r2=NAZO	{J}
0800E7D0	Load images		r0=NAZO	r1=CG	r2=NAZO	{U}
080bb17c	Load 10 divided CG	{J}
080B65F8	Load 10 divided CG	{U}
080bdcdc	Obtaining icon of world map tower and castle	{J}
080B8E14	Obtaining icon of world map tower and castle	{U}
08016dfc	Steal item determination	{J}
08017054	Steal item determination	{U}
080197f0	Reading map chips	{J}
08019B18	Reading map chips	{U}
08034548	Examine address of stage map	mapdata	{J}
08034640	Examine address of stage map	mapdata	{U}
0808b9c0	Read chapter title image	{J}
08025b44	Determining whether to steal a menu	{J}
08025BA0	Determining whether to steal a menu	{U}
080c9630	Eventstuffed roll	{J}
080C4878	Eventstuffed roll	{U}
080c9398	Loading ED illustrations1st sheet	{J}
080C45E0	Loading ED illustrations1st sheet	{U}
080c9a18	Subtitle of OPPart 1	{J}
080C4C60	Subtitle of OPPart 1	{U}
080c9b0c	Subtitle of OPPart 2	{J}
080C4D54	Subtitle of OPPart 2	{U}
080ca4c4	Read image of title screen	{J}
080C56F4	Read image of title screen	{U}
080ca69c	Directing title screen	{J}
080C58CC	Directing title screen	{U}
080d24ec	Acquire word of Trainee CC	{J}
080CD7FC	Acquire word of Trainee CC	{U}
0801729c	Load item informationNAZO	ITEMPACKr0 = Endurance count << 8 | Item IDExample: Iron swordDurability: 46==2e01	{J}
080174F4	Load item informationNAZO	ITEMPACKr0 = Endurance count << 8 | Item IDExample: Iron swordDurability: 46==2e01	{U}
080162e8	Acquire durability from item ID	ITEMPACKEndurance count << 8 | Item IDExample: Iron swordDurability: 46==2e01	r0=Item ID	{J}
08016540	Acquire durability from item ID	ITEMPACKEndurance count << 8 | Item IDExample: Iron swordDurability: 46==2e01	r0=Item ID	{U}
080319D0	Read information of opponent in stadium	{J}
08031abc	Armor decision routine at Arena	{J}
08031B70	Armor decision routine at Arena	{U}
08031800	Weapon correction at field?	{J}
080318B4	Weapon correction at field?	{U}
08031B0C	Rank up weapons in field	{J}
08031BC0	Rank up weapons in field	{U}
03007d7c	weapon of opponent in stadium (determined data)	{J}
0807ee68	Get character MISS at battle	{J}
0807eec4	NO at battleGet character DAMAGE	{J}
0807CB24	Get character MISS at battle	{J}
0807CB24	NO at battleGet character DAMAGE	{J}
0202BCF0	Area of ​​stage	{U}
0202BCF8	Possession money	{U}
0202BD01	Fog density	{U}
0202BD02	Map ID	{U}
0202BD02	Phase	 0=Your army, 0x40 = ally, 0x80 = enemy army	{U}
0202BD03	Number of turns	{U}
0202BD02	Map cursor X axis	{U}
0202BD03	Map cursor Y axis	{U}
0202BD04	Status of chapter	0x10=Prepare for attack0x40 = hard mode	{U}
0202BD05	Weather	{U}
0202BD0B	Specified edition	 1=Prologue-Ch8,2=Eirika,3=Ephraim
08031450	Pointer to contents of transport team	{J}
08031504	Pointer to contents of transport team	{U}
03001C80	Event address being executed? (Except start event)	{U}
03004df0	&Unit	Pointer to work memory of operation character	{J}
03004E50	&Unit	Pointer to work memory of operation character	{U}
0808941c	Status 1 parameter	{J}
08087184	Status 1 parameter	{U}
080896ec	Status 2 possessed item	{J}
08087484	Status 2 possessed item	{U}
08089ac4	Status 3 Weapon Level	{J}
0808784C	Status 3 Weapon Level	{U}
0808ac2c	R menu settings	{J}
080889A0	R menu settings	{U}
080890bc	Status screen character drawing	{J}
08086E00	Status screen character drawing	{U}
805D0F4	loadArrowOBJ	void	void *AIS	{J}
805C358	loadArrowOBJ	void	void *AIS	{U}
8055C78	loadSpellCast	void	{J}
8054FA8	loadSpellCast	void	{U}
8056220	reduceHPBar	void	void *targetAIS, bool ifMiss	{J}
8055278	reduceHPBar	void	void *targetAIS, bool ifMiss	{U}
80563C0	suckBloodAnimation	void	int a1, int ifMiss	{J}
8055424	suckBloodAnimation	void	int a1, int ifMiss	{U}
805AF2C	checkIfCritical	int	void *AIS	{J}
805A188	checkIfCritical	int	void *AIS	{U}
806ED0C	criticalAttackEffect	void	int a1	{J}
806C9E8	criticalAttackEffect	void	int a1	{U}
80100CC	eventCodeFunc_DF	int	struct context *parent	{J}
800FF68	eventCodeFunc_DF	int	struct context *parent	{U}
80AEFFC	loadIceCrystal	void	int a1	{J}
80AA518	loadIceCrystal	void	int a1	{U}
806063C	loadResireBG2	void	int a1	{J}
805D8B4	loadResireBG2	void	int a1	{U}
80605B0	loadResireBG	void	int a1, u8 ifMiss	{J}
805F4B0	loadResireBG	void	int a1, u8 ifMiss	{U}
805C1A4	loadResireRST5	context*	int a1, int a2, int a3, int a4, int a5	{J}
805B400	loadResireRST5	context*	int a1, int a2, int a3, int a4, int a5	{U}
8060938	loadResireRST3	void	int a1, struct context *a2, u16 a3	{J}
805F838	loadResireRST3	void	int a1, struct context *a2, u16 a3	{U}
805C5D8	loadRestWINH	void	int a1, int a2, u16 a3, u32 a4	{J}
805B828	loadRestWINH	void	int a1, int a2, u16 a3, u32 a4	{U}
805C6EC	loadRestWINH1	void	int a1, int a2, u32 a3	{J}
805B93C	loadRestWINH1	void	int a1, int a2, u32 a3	{U}
8061540	loadHazymoonBG1	void	void *AIS	{J}
8060440	loadHazymoonBG1	void	void *AIS	{U}
8060D90	loadHazymoonOBJ3	void	void *AIS	{J}
805FC90	loadHazymoonOBJ3	void	void *AIS	{U}
80615b0	loadHazymoonBG2	void	void *AIS	{J}
80604B0	loadHazymoonBG2	void	void *AIS	{U}
8061614	loadHazymoonBG3	void	void *AIS	{J}
8060514	loadHazymoonBG3	void	void *AIS	{U}
80616E8	loadHazymoonOBJ2	void	void *AIS	{J}
80605E8	loadHazymoonOBJ2	void	void *AIS	{U}
805B058	getTargetAIS	void	int a1	{J}
805A2B4	getTargetAIS	void	int a1	{U}
8054BF8	loadFlashBG	{J}
8053F10	loadFlashBG	{U}
804f954	Show menu	void	MENUDEF	mazo	{J}
8088798	Scenario Branch Selector Display	void	{J}
804ebc8	Show menu	void	MENUDEF	mazo	{U}
80864CD	Scenario Branch Selector Display	void	{U}
8037B64	Hero determination function	bool	{U}
8037bfc	Hero determination function	bool	{J}
804FA3C	NewMenu Constructs Menu	6C	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=geometry	r2=background BG index	r3=tile related thing? (stored to field 0x66)	{J}
804ECB0	NewMenu Constructs Menu	6C	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=geometry	r2=background BG index	r3=tile related thing? (stored to field 0x66)	{U}
804F970	NewMenu_Default Constructs Menu	6C, BG1 is background, BG0 is foreground, no parent 6C, default geometry, default everything	E_Menu 6C pointer	r0=pointer to Menu Definition	{J}
804EBE4	NewMenu_Default Constructs Menu	6C, BG1 is background, BG0 is foreground, no parent 6C, default geometry, default everything	E_Menu 6C pointer	r0=pointer to Menu Definition	{U}
804F924	NewMenu_DefaultAdjusted Same as NewMenu_Default, except default geometry is adjusted given parameters	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=some x screen position?	r2=X tile position of menu on left
r3=X tile position of menu of right	{J}
804EB98	NewMenu_DefaultAdjusted Same as NewMenu_Default, except default geometry is adjusted given parameters	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=some x screen position?	r2=X tile position of menu on left
r3=X tile position of menu of right	{U}
804F954	NewMenu_DefaultChild Same as NewMenu_Default, except E_Menu has a parent	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=Parent 6C	{J}
804EBC8	NewMenu_DefaultChild Same as NewMenu_Default, except E_Menu has a parent	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=Parent 6C	{U}
804FA24	NewMenu_BG0BG1 Constructs Menu 6C, BG1 is background, BG0 is foreground	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=geometry	r2=parent 6C	{J}
804EC98	NewMenu_BG0BG1 Constructs Menu 6C, BG1 is background, BG0 is foreground	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=geometry	r2=parent 6C	{U}
804FCAC	EndAllMenus Kills *all* E_Menus	void	{J}
804EF20	EndAllMenus Kills *all* E_Menus	void	{U}
080851FC	CheckForEvents Event Check Buffer Pointer for first callable event (0 if none)	r0=Initial Event Check Buffer	{J}
08082EC4	CheckForEvents Event Check Buffer Pointer for first callable event (0 if none)	r0=Initial Event Check Buffer	{U}
080851B8	CallEventsFromBuffer Will call events corresponding output of CheckForEvents	void	r0=Event Check Buffer, r1=Passed Argument to Event Engine Call	{J}
08082E80	CallEventsFromBuffer Will call events corresponding output of CheckForEvents	void	r0=Event Check Buffer, r1=Passed Argument to Event Engine Call	{U}
089E84F4	Event Check Table	{U}
080A7AA8	GetSaveDataLocation	{J}
080A3064	GetSaveDataLocation	{U}
080A7B74	SaveLocalEventIndexes	{J}
080A3130	SaveLocalEventIndexes	{U}
080A7B74	SaveGlobalEventIndexes	{J}
080A3150	SaveGlobalEventIndexes	{U}
080A7BB4	LoadLocalEventIds	{J}
080A3170	LoadLocalEventIds	{U}
080A7BDC	LoadGlobalEventIds	{J}
080A3198	LoadGlobalEventIds	{U}
080A7C28	SaveConvoyItems	{J}
080A31E4	SaveConvoyItems	{U}
080A7CB0	LoadConvoyItems	{J}
080A326C	LoadConvoyItems	{U}
080A9A28	SaveGame	{J}
080A5010	SaveGame	{U}
080A9B40	LoadGame	{J}
080A5128	LoadGame	{U}
080A9D54	SaveUnit     	void	r0=Unit	r1=Target SRAM	{J}
080A533C	SaveUnit     	void	r0=Unit	r1=Target SRAM	{U}
080AA1AC	LoadSavedUnit	void	r0=Source SRAM	r1=Unit	{J}
080A5794	LoadSavedUnit	void	r0=Source SRAM	r1=Unit	{U}
080A5A48	SAVE_MOTHEFUCKING_GAME	{U}
080DC1DC	:080DC3DB	Lookup Table for cos (0x100 -> 0 -> -0x100 -> 0 -> 0x100)	{J}
080D759C	:080D779B	Lookup Table for cos (0x100 -> 0 -> -0x100 -> 0 -> 0x100)	{U}
080DC15C	:080DC25B	Lookup Table for sin (0 -> 0x100 -> 0 -> -0x100 -> 0)	{J}
080D751C	:080D761B	Lookup Table for sin (0 -> 0x100 -> 0 -> -0x100 -> 0)	{U}
0800916C	TCS_New Creates a new TCS	TCS Pointer	r0=Source ROMTCS, r1=OAM Index? idk	{J}
0800927C	TCS_New Creates a new TCS	TCS Pointer	r0=Source ROMTCS, r1=OAM Index? idk	{U}
08009194	TCS_Free Frees/Deletes/Ends a TCS	void	r0=TCS	{J}
080092A4	TCS_Free Frees/Deletes/Ends a TCS	void	r0=TCS	{U}
080091AC	TCS_Update Updates TCS Logic and Graphics	bool	r0=TCS	r1=display x	r2=display y	{J}
080092BC	TCS_Update Updates TCS Logic and Graphics	bool	r0=TCS	r1=display x	r2=display y	{U}
08009408	TCS_SetAnim Sets Anim of TCS	void	r0=TCS	r1=Anim Index	{J}
08009518	TCS_SetAnim Sets Anim of TCS	void	r0=TCS	r1=Anim Index	{U}
08009438	TCS_SetROMTCS Sets (Changes) ROMTCS of TCS	void	r0=TCS, r1=ROMTCS	{J}
08009548	TCS_SetROMTCS Sets (Changes) ROMTCS of TCS	void	r0=TCS, r1=ROMTCS	{U}
08009150	TCS_ClearAll	{J}
08009260	TCS_ClearAll	{U}
080091D4	TCS_RegisterGraphics	{J}
080092E4	TCS_RegisterGraphics	{U}
08009230	TCS_Exec	{J}
08009340	TCS_Exec	{U}
08009320	TCS_QueueRotScaleData	{J}
08009430	TCS_QueueRotScaleData	{U}
08009458	TCS_QueueTileGfx	{J}
08009568	TCS_QueueTileGfx	{U}
08009564	TCS_Load	{J}
08009674	TCS_Load	{U}
08009588	TCS_ExecOneFrame	{J}
08009698	TCS_ExecOneFrame	{U}
080095A8	TCS_Init	{J}
080096B8	TCS_Init	{U}
080095E0	TCS_Alloc	{J}
080096F0	TCS_Alloc	{U}
0801D6FC	DisplayMoveRangeGraphics Creates relevant 6C and sets relevant stuff in game data	void	r0=type bitfield (see above)	{J}
0801DA98	DisplayMoveRangeGraphics Creates relevant 6C and sets relevant stuff in game data	void	r0=type bitfield (see above)	{U}
0801D730	HideMoveRangeGraphics Deletes relevant 6C and all that stuff	{J}
0801DACC	HideMoveRangeGraphics Deletes relevant 6C and all that stuff	{U}
@TrapEntry@00	byte	x pos
@TrapEntry@01	byte	y pos
@TrapEntry@02	byte	trap type id	0=Nothing (unused entry) 1=Ballista 2=Wall/Snag 3=Map Change (yes those are actually traps) 4=Fire Trap 5=Gas Trap 6=Map Change too? game supports them but idk where it might be used 7=Arrow Trap 8=? (used?) 9=? (used?) A=Light from Torch Staff B=Mine C=Gorgon Egg? (needs investigating as to in which circumstances) D=Light Rune
@TrapEntry@03	byte	ext1
@TrapEntry@04	byte	ext2
@TrapEntry@05	byte	ext3
@TrapEntry@06	byte	ext4
@TrapEntry@07	byte	ext5
0203A614	@TrapEntry@[40]	Traps	{U}
0203A610	@TrapEntry@[40]	Traps	{J}
0802E1F0	AddTrap	Adds/Creates new trap	RET=Pointer to Trap Entry Struct	r0=x	r1=y	r2=trap type	r3=extra byte 1	{J}
0802E2B8	AddTrap	Adds/Creates new trap	RET=Pointer to Trap Entry Struct	r0=x	r1=y	r2=trap type	r3=extra byte 1	{U}
0802E218	AddTrapExt	Adds/Creates new trap (with extra parameters) (used exclusively for fire/gas/arrow traps, trap 6 and gorgon eggs)	RET=Pointer to Trap Entry Struct	r0=x	r1=y	r2=trap type	 r3=ext1	 [sp+0]:ext2&4	[sp+4]:ext3	[sp+8]:ext5	{J}
0802E2E0	AddTrapExt	Adds/Creates new trap (with extra parameters) (used exclusively for fire/gas/arrow traps, trap 6 and gorgon eggs)	RET=Pointer to Trap Entry Struct	r0=x	r1=y	r2=trap type	 r3=ext1	 [sp+0]:ext2&4	[sp+4]:ext3	[sp+8]:ext5	{U}
0802E128	GetTrapAt	Looks for a trap at given position	RET=Pointer to Trap Entry Struct (0 if no trap at given pos)	r0=x, r1=y	{J}
0802E1F0	GetTrapAt	Looks for a trap at given position	RET=Pointer to Trap Entry Struct (0 if no trap at given pos)	r0=x, r1=y	{U}
0802E184	GetSpecificTrapAt	Looks for a trap at given position with given type	RET=Pointer to Trap Entry Struct (0 if none found)	r0=x	r1=y	r2=trap type	{J}
0802E24C	GetSpecificTrapAt	Looks for a trap at given position with given type	RET=Pointer to Trap Entry Struct (0 if none found)	r0=x	r1=y	r2=trap type	{U}
0802E100	ResetTraps	Resets Trap Array (Sets all trap ids to 0)	{J}
0802E1C8	ResetTraps	Resets Trap Array (Sets all trap ids to 0)	{U}
0802EAC4	GetTrap	Gets Trap Struct by Index	RET=Pointer to Trap Entry Struct (= pTrapArrayStart + 8*i)	r0=Trap index (0-indexed position in trap data array)	{J}
0802EB8C	GetTrap	Gets Trap Struct by Index	RET=Pointer to Trap Entry Struct (= pTrapArrayStart + 8*i)	r0=Trap index (0-indexed position in trap data array)	{U}
0802E234	RemoveTrap	Removes Trap Struct from array	void	r0=Trap Struct Entry Pointer	{J}
0802E2FC	RemoveTrap	Removes Trap Struct from array	void	r0=Trap Struct Entry Pointer	{U}
08037A9C	AddBallista	Adds/Creates Ballista	RET=Trap Struct Entry Pointer	r0=x, r1=y, r2=Ballista Item Index	{J}
08037A04	AddBallista	Adds/Creates Ballista	RET=Trap Struct Entry Pointer	r0=x, r1=y, r2=Ballista Item Index	{U}
0802E990	AddLightRune	Adds/Creates Light Rune (fixed 3 turn duration) (Handles Terrain Changes too)	RET=Trap Struct Entry Pointer	r0=x	r1=y	{J}
0802EA58	AddLightRune	Adds/Creates Light Rune (fixed 3 turn duration) (Handles Terrain Changes too)	RET=Trap Struct Entry Pointer	r0=x	r1=y	{U}
0802E9C8	RemoveLightRune	Removes Light Rune (Handles Terrain Changes too)	void	r0=Trap Struct Entry Pointer	{J}
0802EA90	RemoveLightRune	Removes Light Rune (Handles Terrain Changes too)	void	r0=Trap Struct Entry Pointer	{U}
0802E3A8	UpdateAllLightRunes	Goes through all light runes and changes terrain accordingly (used on load from suspend maybe?)	{J}
0802E470	UpdateAllLightRunes	Goes through all light runes and changes terrain accordingly (used on load from suspend maybe?)	{U}
0802E2E0	AddSnagsAndWalls	Goes through terrain map and adds all snag & wall traps where relevant	{J}
0802E3A8	AddSnagsAndWalls	Goes through terrain map and adds all snag & wall traps where relevant	{U}
0802E9F8	HandleTrapDecay	Handle Turn count down for Light Runes & Torch Lights	{J}
0802EAC0	HandleTrapDecay	Handle Turn count down for Light Runes & Torch Lights	{U}
0802E530	TriggerMapChange	Adds a map change trap	 /!\ it doesn't actually *apply* map change, just sets trigger on		void	r0=Map Change Id	{J}
0802E5F8	TriggerMapChange	Adds a map change trap	 /!\ it doesn't actually *apply* map change, just sets trigger on		void	r0=Map Change Id	{U}
0802E544	UntriggerMapChange	Removes a map change trap	 /!\ it doesn't actually *apply* map change, just sets trigger off		void	r0=Map Change Id	{J}
0802E60C	UntriggerMapChange	Removes a map change trap	 /!\ it doesn't actually *apply* map change, just sets trigger off		void	r0=Map Change Id	{U}
0802E368	ApplyTrapMapChanges	Applies all triggered map changes (used on suspend load maybe?)	{J}
0802E430	ApplyTrapMapChanges	Applies all triggered map changes (used on suspend load maybe?)	{U}
0802E288	AddArrowTrap Adds/Creates Arrow Trap	void	r0=x	r1=Initial Turn Countdown	r2=Reset Turn Countdown	{J}
0802E350	AddArrowTrap	Adds/Creates Arrow Trap	void	r0=x	r1=Initial Turn Countdown	r2=Reset Turn Countdown	{U}
0802E268	AddGasTrap	Adds/Creates Gas Trap	void	r0=x	r1=y	r2=direction	r3=Initial Turn Countdown	[sp+0]:Reset Turn Countdown	{J}
0802E330	AddGasTrap	Adds/Creates Gas Trap	void	r0=x	r1=y	r2=direction	r3=Initial Turn Countdown	[sp+0]:Reset Turn Countdown	{U}
0802E24C	AddFireTrap	Adds/Creates Fire Trap	void	r0=x	r1=y	r2=Initial Turn Countdown	r3=Reset Turn Countdown	{J}
0802E314	AddFireTrap	Adds/Creates Fire Trap	void	r0=x	r1=y	r2=Initial Turn Countdown	r3=Reset Turn Countdown	{U}
0802E4C4	ApplyMapChangesById	void	r0=Map Change Id	{J}
0802E58C	ApplyMapChangesById	void	r0=Map Change Id	{U}
08019FBC	RevertMapChangesById	r0=Map Change Id	{J}
0801A2EC	RevertMapChangesById	r0=Map Change Id	{U}
0801973C	FlushTerrainData	(You need to call that in order to have map changes properly applied?)	{J}
08019A64	FlushTerrainData	(You need to call that in order to have map changes properly applied?)	{U}
08050630	AddTarget	Adds Target to list	void	r0=x	r1=y	r2=Unit Index	r3=Extra/Trap Id?	{J}
0804F8BC	AddTarget	Adds Target to list	void	r0=x	r1=y	r2=Unit Index	r3=Extra/Trap Id?	{U}
08050A9C	GetTargetListSize	Gets list size (used to check for empty lists in usability routines)	Number of entries in list	{J}
0804FD28	GetTargetListSize	Gets list size (used to check for empty lists in usability routines)	Number of entries in list	{U}
08050AA8	GetTarget	Gets Target Struct by Index	Target Struct for given Index (= pTargetList + i*sizeof(TargetStruct))	r0=Target Index	{J}
0804FD34	GetTarget	Gets Target Struct by Index	Target Struct for given Index (= pTargetList + i*sizeof(TargetStruct))	r0=Target Index	{U}
08050618	InitTargets	Inits Target List (and clears it)	void	r0=x, r1=y (position is used internally for sorting later)	{J}
0804F8A4	InitTargets	Inits Target List (and clears it)	void	r0=x, r1=y (position is used internally for sorting later)	{U}
08024F20	ForEachAdjacentUnit	Goes through all units adjacent to position and calls routine with unit struct as argument	void	r0=x	r1=y	r2=Routine pointer (takes Unit Struct as argument)	{J}
08024F70	ForEachAdjacentUnit	Goes through all units adjacent to position and calls routine with unit struct as argument	void	r0=x	r1=y	r2=Routine pointer (takes Unit Struct as argument)	{U}
08024E5C	ForEachUnitInRange	Goes through all units that are on a non-null tile on Range Map and calls routine	void	r0=Routine pointer (takes Unit Struct as argument)	{J}
08024EAC	ForEachUnitInRange	Goes through all units that are on a non-null tile on Range Map and calls routine	void	r0=Routine pointer (takes Unit Struct as argument)	{U}
080507B0	NewTargetSelection	Creates a new target selection 6C and everything (target list must be setup)	Target Selection 6C	r0=pointer to routine list	{J}
0804FA3C	NewTargetSelection	Creates a new target selection 6C and everything (target list must be setup)	Target Selection 6C	r0=pointer to routine list	{U}
08050818	NewTargetSelection_Specialized	Same as above, but A Press routine from list gets overwritten by one given as arg	Target Selection 6C	r0=pointer to routine list	r1=routine to call on A Press	{J}
0804FAA4	NewTargetSelection_Specialized	Same as above, but A Press routine from list gets overwritten by one given as arg	Target Selection 6C	r0=pointer to routine list	r1=routine to call on A Press	{U}
08000E4C	FlushLCDControl DON'T CALL THIS YOURSELF (called on VBlank); Does magic	{J}
08000E9C	FlushLCDControl DON'T CALL THIS YOURSELF (called on VBlank); Does magic	{U}
08000EF4	GetBackgroundControlBufferPtr	{J}
08000F44	GetBackgroundControlBufferPtr	{U}
08000F3C	GetBackgroundTileDataOffset	{J}
08000F8C	GetBackgroundTileDataOffset	{U}
08000F8C	SetBackgroundTileDataOffset	{J}
08000FDC	SetBackgroundTileDataOffset	{U}
08000FB4	SetBackgroundMapDataOffset	{J}
08001004	SetBackgroundMapDataOffset	{U}
08000FFC	SetBackgroundScreenSize	{J}
0800104C	SetBackgroundScreenSize	{U}
08001448	SetupBackgroundPosition	void	r0=BG Index	r1=x	r2=y	{J}
0800148C	SetupBackgroundPosition	void	r0=BG Index	r1=x	r2=y	{U}
080011D0	FillBGMap Fills BG Map with given value	void	r0=BG Map (Buffer) Pointer	r1=value (word)	{J}
08001220	FillBGMap Fills BG Map with given value	void	r0=BG Map (Buffer) Pointer	r1=value (word)	{U}
08001BC0	GetBGMapBuffer Gets BG Map Buffer for given BG	BG Map Buffer pointer	r0=BG Index	{J}
08001C4C	GetBGMapBuffer Gets BG Map Buffer for given BG	BG Map Buffer pointer	r0=BG Index	{U}
08001EFC	EnableBackgroundByMask Sets BGs to be updated (Will not unset others)	void	r0=BG Mask (see 0300080D)	{J}
08001FAC	EnableBackgroundByMask Sets BGs to be updated (Will not unset others)	void	r0=BG Mask (see 0300080D)	{U}
08001F0C	EnableBackgroundById Sets BG to be updated	void	r0=BG Index	{J}
08001FBC	EnableBackgroundById Sets BG to be updated	void	r0=BG Index	{U}
080010FC	FlushBackgrounds DON'T CALL THIS YOURSELF (called on VBlank); Sends BG Maps to VRAM, and palettes to palette RAM	{J}
0800114C	FlushBackgrounds DON'T CALL THIS YOURSELF (called on VBlank); Sends BG Maps to VRAM, and palettes to palette RAM	{U}
08001F30	ClearTileRigistry Clears array	{J}
08001FE0	ClearTileRigistry Clears array	{U}
08001F64	RegisterTileGraphics Adds an entry to array	void	r0=Source gfx (uncompressed!)	r1=Destination pointer	r2=size (bytes)	{J}
08002014	RegisterTileGraphics Adds an entry to array	void	r0=Source gfx (uncompressed!)	r1=Destination pointer	r2=size (bytes)	{U}
08001FA4	RegisterFillTile Adds an entry to array (fill mode); Used mostly to clear tiles	void	r0=*word* to fill with	r1=Destination pointer	r2=size (bytes)	{J}
08002054	RegisterFillTile Adds an entry to array (fill mode); Used mostly to clear tiles	void	r0=*word* to fill with	r1=Destination pointer	r2=size (bytes)	{U}
080011F0	RegisterBlankTile	void	r0=Tile index	{J}
08001240	RegisterBlankTile	void	r0=Tile index	{U}
08001FD8	FlushTiles DON'T CALL THIS YOURSELF (called on VBlank); Sends tile data to VRAM/wherever you told it to	{J}
08002088	FlushTiles DON'T CALL THIS YOURSELF (called on VBlank); Sends tile data to VRAM/wherever you told it to	{U}
08029E64	NewTorchStaffSelection	{J}
08029ED8	NewTorchStaffSelection	{U}
08029D24	TorchTargetPosSelect_Init	{J}
08029D98	TorchTargetPosSelect_Init	{U}
08029D7C	TorchTargetSelection_Loop	{J}
08029DF0	TorchTargetSelection_Loop	{U}
08029E64	NewTorchStaffSelection	{J}
08029ED8	NewTorchStaffSelection	{U}
080040b8	draw_serif_text	{J}
08004504	draw_serif_text	{U}
08003e6c	strlen_serif_width	{J}
08004538	strlen_serif_width	{U}
08003f28	draw_item_text	{J}
080044C8	draw_item_text	{U}
08003e0c	strlen_item_width	{J}
08004568	strlen_item_width	{U}
08003f10	draw_text_nextline	{J}
080195e4	Map palette loading	{J}
0801990C	Map palette loading	{U}
0801965c	Map palette load 2	{J}
08019984	Map palette load 2	{U}
080D41B0	umul3232H32	{J}
080D41C0	SoundMain	{J}
080D4244	SoundMainRAM	{J}
080D45E8	SoundMainBTM	{J}
080D4600	RealClearChain	{J}
080D4620	ply_fine	{J}
080D4650	MPlayJumpTableCopy	{J}
080D4684	ld_r3_tp_adr_i	{J}
080D4690	ply_goto	{J}
080D46B0	ply_patt	{J}
080D46CC	ply_pend	{J}
080D46E0	ply_rept	{J}
080D4710	ply_prio	{J}
080D471C	ply_tempo	{J}
080D4730	ply_keysh	{J}
080D4744	ply_voice	{J}
080D4774	ply_vol	{J}
080D4788	ply_pan	{J}
080D479C	ply_bend	{J}
080D47B0	ply_bendr	{J}
080D47C4	ply_lfodl	{J}
080D47D0	ply_modt	{J}
080D47E8	ply_tune	{J}
080D47FC	ply_port	{J}
080D4814	m4aSoundVSync	{J}
080D4860	MPlayMain	{J}
080D4AC8	TrackStop	{J}
080D4B0C	ChnVolSetAsm	{J}
080D4B3C	ply_note	{J}
080D4D3C	ply_endtie	{J}
080D4D7C	clear_modM	{J}
080D4DA4	ply_lfos	{J}
080D4DB8	ply_mod	{J}
080D4DCC	MidiKeyToFreq	{J}
080D4E30	UnusedDummyFunc	{J}
080D4E34	MPlayContinue	{J}
080D4E50	MPlayFadeOut	{J}
080D4E70	m4aSoundInit	{J}
080D4EE8	m4aSoundMain	{J}
080D4EF4	m4aSongNumStart	r0=music id	{J}
080D4F20	m4aSongNumStartOrChange	{J}
080D4F20	m4aSongNumStartOrContinue	{J}
080D4FC0	m4aSongNumStop	{J}
080D4FC0	m4aSongNumContinue	{J}
080D5028	m4aMPlayAllStop	{J}
080D5054	m4aMPlayContinue	{J}
080D5028	m4aMPlayAllContinue	{J}
080D508C	m4aMPlayFadeOut	{J}
080D509C	m4aMPlayFadeOutTemporarily	{J}
080D50BC	m4aMPlayFadeIn	{J}
080D50E4	m4aMPlayImmInit	{J}
080D512C	MPlayExtender	{J}
080D5244	MusicPlayerJumpTableCopy	{J}
080D5248	ClearChain	{J}
080D5248	Clear64byte	{J}
080D5270	SoundInit	{J}
080D5368	SampleFreqSet	{J}
080D540C	m4aSoundMode	{J}
080D54A4	SoundClear	{J}
080D54F8	m4aSoundVSyncOff	{J}
080D5574	m4aSoundVSyncOn	{J}
080D55B0	MPlayOpen	{J}
080D5628	MPlayStart	{J}
080D570C	m4aMPlayStop	{J}
080D574C	FadeOutBody	{J}
080D5814	TrkVolPitSet	{J}
080D58C8	MidiKeyToCgbFreq	{J}
080D5970	CgbOscOff	{J}
080D5A28	CgbSound	{J}
080D5E74	m4aMPlayTempoControl	{J}
080D5E9C	m4aMPlayVolumeControl	{J}
080D5F04	m4aMPlayPitchControl	{J}
080D5F78	m4aMPlayPanpotControl	{J}
080D5FE0	ClearModM	{J}
080D6000	m4aMPlayModDepthSet	{J}
080D6074	m4aMPlayLFOSpeedSet	{J}
080D60E8	ply_memacc	{J}
080D6240	ply_xcmd	{J}
080D6274	ply_xwave	{J}
080D62BC	ply_xtype	{J}
080D62D0	ply_xatta	{J}
080D62E4	ply_xdeca	{J}
080D62F8	ply_xsust	{J}
080D630C	ply_xrele	{J}
080D6320	ply_xiecv	{J}
080D632C	ply_xiecl	{J}
080D6338	ply_xleng	{J}
080D634C	ply_xswee	{J}
080D6274	ply_xcmd_0D	{J}
080D63AC	SoftReset	{J}
080D65BC	_call_via_r0	{J}
080D65C0	_call_via_r1	{J}
080D65C4	_call_via_r2	{J}
080D65C8	_call_via_r3	{J}
080D65CC	_call_via_r4	{J}
080D65D0	_call_via_r5	{J}
080D65D4	_call_via_r6	{J}
080D65D8	_call_via_r7	{J}
080D65DC	_call_via_r8	{J}
080D65E0	_call_via_r9	{J}
080D65E4	_call_via_sl	{J}
080D65E8	_call_via_fp	{J}
080D65EC	_call_via_ip	{J}
080D65F0	_call_via_sp	{J}
080D65F4	_call_via_lr	{J}
080D65F8	__divsi3	{J}
0805601C	__fixunssfsi	{J}
080D6690	__modsi3	{J}
080D6760	__muldi3	{J}
0800A874	__udivdi3	{J}
080D67D0	__udivsi3	{J}
080D6848	__umodsi3	{J}
080DA9A0	__pack_d	{J}
080DAAE8	__unpack_d	{J}
080DAE2C	__adddf3	{J}
080DAE5C	__subdf3	{J}
080DAE94	__muldf3	{J}
080DB13C	__divdf3	{J}
080DB2C4	__fpcmp_parts_d	{J}
080DB3C4	__cmpdf2	{J}
080DB3F0	__eqdf2	{J}
080DB43C	__nedf2	{J}
080DB488	__gtdf2	{J}
080DB4D4	__gedf2	{J}
080DB520	__ltdf2	{J}
080DB56C	__ledf2	{J}
080DB5B8	__floatsidf	{J}
080DB634	__fixdfsi	{J}
080DB6A8	__negdf2	{J}
080DB6D0	__make_dp	{J}
080DB6F8	__truncdfsf2	{J}
080DB73C	__pack_f	{J}
080DB7F4	__unpack_f	{J}
080DB9EC	__addsf3	{J}
080DBA18	__subsf3	{J}
080DBA4C	__mulsf3	{J}
080DBBB0	__divsf3	{J}
080DBC9C	__fpcmp_parts_f	{J}
080DBD80	__cmpsf2	{J}
080DBDA8	__eqsf2	{J}
080DBDF0	__nesf2	{J}
080DBE38	__gtsf2	{J}
080DBE80	__gesf2	{J}
080DBEC8	__ltsf2	{J}
080DBF10	__lesf2	{J}
080DBF58	__floatsisf	{J}
080DBFB8	__fixsfsi	{J}
080DC020	__negsf2	{J}
080DC044	__make_fp	{J}
080DC05C	__extendsfdf2	{J}
080DC088	__lshrdi3	{J}
080DC0BC	__negdi2	{J}
080D6908	memcpy	{J}
080D6968	memset	{J}
080D6A08	strlen	{J}
080D6B14	vfprintf	{J}
080D6B28	_vfprintf_r	{J}
080D7BEC	__srefill	{J}
080D7BEC	__swsetup	{J}
080D7DF4	_dtoa_r	{J}
080D8BB8	__sfmoreglue	{J}
080D8BE8	__sfp	{J}
080D8C7C	__sinit	{J}
080D8CDC	_free_r	{J}
080D8E9C	_malloc_trim_r	{J}
080D8F5C	__sfvwrite	{J}
080D9188	_fwalk	{J}
080D91C8	_setlocale_r	{J}
080D9234	__smakebuf	{J}
080D946C	_malloc_r	{J}
080D982C	_mbtowc_r	{J}
080D9858	memchr	{J}
080D98D8	memmove	{J}
080D9968	_Balloc	{J}
080D99C0	_Bfree	{J}
080D99D8	_multadd	{J}
080D9A70	_s2b	{J}
080D9AF4	_hi0bits	{J}
080D9B4C	_lo0bits	{J}
080D9BD0	_i2b	{J}
080D9BE4	_multiply	{J}
080D9D50	_pow5mult	{J}
080D9DE8	_lshift	{J}
080D9E88	__mcmp	{J}
080D9EC8	__mdiff	{J}
080D9FB8	_ulp	{J}
080DA004	_b2d	{J}
080DA0C0	_d2b	{J}
080DA1A8	_ratio	{J}
080DA1F8	_mprec_log10	{J}
080DA238	isinf	{J}
080DA25C	isnan	{J}
080DA27C	_close_r	{J}
080DA27C	_sbrk_r	{J}
080DA2A8	__sread	{J}
080DA2DC	__swrite	{J}
080DA31C	__sseek	{J}
080DA36C	strcmp	{J}
080DA434	initialise_monitor_handles	{J}
080DA4E4	_swiread	{J}
080DA508	_read	{J}
080DA550	_swilseek	{J}
080DA5D4	_lseek	{J}
080DA5E0	_swiwrite	{J}
080DA604	_write	{J}
080DA650	_swiopen	{J}
080DA6F0	_open	{J}
080DA704	_swiclose	{J}
080DA738	_close	{J}
080DA744	_exit	{J}
080DA764	_kill	{J}
080DA784	_getpid	{J}
080DA788	_sbrk	{J}
080DA7C4	_fstat	{J}
080DA7D0	_unlink	{J}
080DA7D8	_raise	{J}
080DA7DC	_gettimeofday	{J}
080DA808	_times	{J}
080DA82C	_lseek_r	{J}
080DA82C	_open_r	{J}
080DA85C	_calloc_r	{J}
080DA8EC	_fstat_r	{J}
080DA8EC	_gettimeofday_r	{J}
080DA918	abort	{J}
080DA940	_read_r	{J}
080DA940	_write_r	{J}
08002AF4	&ARM	CallARM_DecompText	{J}
08002B08	&ARM	CallARM_PushToSecondaryOAM	{J}
080CF4B8	umul3232H32	{U}
080CF4C8	SoundMain	{U}
080CF54C	SoundMainRAM	{U}
080CF8F0	SoundMainBTM	{U}
080CF908	RealClearChain	{U}
080CF928	ply_fine	{U}
080CF958	MPlayJumpTableCopy	{U}
080CF98C	ld_r3_tp_adr_i	{U}
080CF998	ply_goto	{U}
080CF9B8	ply_patt	{U}
080CF9D4	ply_pend	{U}
080CF9E8	ply_rept	{U}
080CFA18	ply_prio	{U}
080CFA24	ply_tempo	{U}
080CFA38	ply_keysh	{U}
080CFA4C	ply_voice	{U}
080CFA7C	ply_vol	{U}
080CFA90	ply_pan	{U}
080CFAA4	ply_bend	{U}
080CFAB8	ply_bendr	{U}
080CFACC	ply_lfodl	{U}
080CFAD8	ply_modt	{U}
080CFAF0	ply_tune	{U}
080CFB04	ply_port	{U}
080CFB1C	m4aSoundVSync	{U}
080CFB68	MPlayMain	{U}
080CFDD0	TrackStop	{U}
080CFE14	ChnVolSetAsm	{U}
080CFE44	ply_note	{U}
080D0044	ply_endtie	{U}
080D0084	clear_modM	{U}
080D00AC	ply_lfos	{U}
080D00C0	ply_mod	{U}
080D00D4	MidiKeyToFreq	{U}
080D0138	UnusedDummyFunc	{U}
080D013C	MPlayContinue	{U}
080D0158	MPlayFadeOut	{U}
080D0178	m4aSoundInit	{U}
080D01F0	m4aSoundMain	{U}
080D0228	m4aSongNumStartOrChange	{U}
080D0228	m4aSongNumStartOrContinue	{U}
080D02C8	m4aSongNumStop	{U}
080D02C8	m4aSongNumContinue	{U}
080D0330	m4aMPlayAllStop	{U}
080D035C	m4aMPlayContinue	{U}
080D0330	m4aMPlayAllContinue	{U}
080D0394	m4aMPlayFadeOut	{U}
080D03A4	m4aMPlayFadeOutTemporarily	{U}
080D03C4	m4aMPlayFadeIn	{U}
080D03EC	m4aMPlayImmInit	{U}
080D0434	MPlayExtender	{U}
080D054C	MusicPlayerJumpTableCopy	{U}
080D0550	ClearChain	{U}
080D0550	Clear64byte	{U}
080D0578	SoundInit	{U}
080D0670	SampleFreqSet	{U}
080D0714	m4aSoundMode	{U}
080D07AC	SoundClear	{U}
080D0800	m4aSoundVSyncOff	{U}
080D087C	m4aSoundVSyncOn	{U}
080D08B8	MPlayOpen	{U}
080D0930	MPlayStart	{U}
080D0A14	m4aMPlayStop	{U}
080D0A54	FadeOutBody	{U}
080D0B1C	TrkVolPitSet	{U}
080D0BD0	MidiKeyToCgbFreq	{U}
080D0C78	CgbOscOff	{U}
080D0D30	CgbSound	{U}
080D117C	m4aMPlayTempoControl	{U}
080D11A4	m4aMPlayVolumeControl	{U}
080D120C	m4aMPlayPitchControl	{U}
080D1280	m4aMPlayPanpotControl	{U}
080D12E8	ClearModM	{U}
080D1308	m4aMPlayModDepthSet	{U}
080D137C	m4aMPlayLFOSpeedSet	{U}
080D13F0	ply_memacc	{U}
080D1548	ply_xcmd	{U}
080D157C	ply_xwave	{U}
080D15C4	ply_xtype	{U}
080D15D8	ply_xatta	{U}
080D15EC	ply_xdeca	{U}
080D1600	ply_xsust	{U}
080D1614	ply_xrele	{U}
080D1628	ply_xiecv	{U}
080D1634	ply_xiecl	{U}
080D1640	ply_xleng	{U}
080D1654	ply_xswee	{U}
080D157C	ply_xcmd_0D	{U}
080D16AC	RegisterRamReset	{U}
080D16B0	SoftReset	{U}
080D18C0	_call_via_r0	{U}
080D18C4	_call_via_r1	{U}
080D18C8	_call_via_r2	{U}
080D18CC	_call_via_r3	{U}
080D18D0	_call_via_r4	{U}
080D18D4	_call_via_r5	{U}
080D18D8	_call_via_r6	{U}
080D18DC	_call_via_r7	{U}
080D18E0	_call_via_r8	{U}
080D18E4	_call_via_r9	{U}
080D18E8	_call_via_sl	{U}
080D18EC	_call_via_fp	{U}
080D18F0	_call_via_ip	{U}
080D18F4	_call_via_sp	{U}
080D18F8	_call_via_lr	{U}
080D18FC	__divsi3	{U}
080D1994	__modsi3	{U}
080D1A64	__muldi3	{U}
0800A518	__udivdi3	{U}
080D1AD4	__udivsi3	{U}
080D1B4C	__umodsi3	{U}
080D5D64	__pack_d	{U}
080D5EAC	__unpack_d	{U}
080D61F0	__adddf3	{U}
080D6220	__subdf3	{U}
080D6258	__muldf3	{U}
080D6500	__divdf3	{U}
080D6688	__fpcmp_parts_d	{U}
080D6788	__cmpdf2	{U}
080D67B4	__eqdf2	{U}
080D6800	__nedf2	{U}
080D684C	__gtdf2	{U}
080D6898	__gedf2	{U}
080D68E4	__ltdf2	{U}
080D6930	__ledf2	{U}
080D697C	__floatsidf	{U}
080D69F8	__fixdfsi	{U}
080D6A6C	__negdf2	{U}
080D6A94	__make_dp	{U}
080D6ABC	__truncdfsf2	{U}
080D6B00	__pack_f	{U}
080D6BB8	__unpack_f	{U}
080D6DB0	__addsf3	{U}
080D6DDC	__subsf3	{U}
080D6E10	__mulsf3	{U}
080D6F74	__divsf3	{U}
080D7060	__fpcmp_parts_f	{U}
080D7144	__cmpsf2	{U}
080D716C	__eqsf2	{U}
080D71B4	__nesf2	{U}
080D71FC	__gtsf2	{U}
080D7244	__gesf2	{U}
080D728C	__ltsf2	{U}
080D72D4	__lesf2	{U}
080D731C	__floatsisf	{U}
080D737C	__fixsfsi	{U}
080D73E4	__negsf2	{U}
080D7408	__make_fp	{U}
080D7420	__extendsfdf2	{U}
080D744C	__lshrdi3	{U}
080D7480	__negdi2	{U}
080D1C0C	memcpy	{U}
080D1C6C	memset	{U}
080D1D88	strlen	{U}
080D1EA4	vfprintf	{U}
080D1EB8	_vfprintf_r	{U}
080D2FB0	__srefill	{U}
080D2FB0	__swsetup	{U}
080D31B8	_dtoa_r	{U}
080D3F7C	__sfmoreglue	{U}
080D3FAC	__sfp	{U}
080D4040	__sinit	{U}
080D40A0	_free_r	{U}
080D4260	_malloc_trim_r	{U}
080D4320	__sfvwrite	{U}
080D454C	_fwalk	{U}
080D458C	_setlocale_r	{U}
080D45F8	__smakebuf	{U}
080D4830	_malloc_r	{U}
080D4BF0	_mbtowc_r	{U}
080D4C1C	memchr	{U}
080D4C9C	memmove	{U}
080D4D2C	_Balloc	{U}
080D4D84	_Bfree	{U}
080D4D9C	_multadd	{U}
080D4E34	_s2b	{U}
080D4EB8	_hi0bits	{U}
080D4F10	_lo0bits	{U}
080D4F94	_i2b	{U}
080D4FA8	_multiply	{U}
080D5114	_pow5mult	{U}
080D51AC	_lshift	{U}
080D524C	__mcmp	{U}
080D528C	__mdiff	{U}
080D537C	_ulp	{U}
080D53C8	_b2d	{U}
080D5484	_d2b	{U}
080D556C	_ratio	{U}
080D55BC	_mprec_log10	{U}
080D55FC	isinf	{U}
080D5620	isnan	{U}
080D5640	_close_r	{U}
080D5640	_sbrk_r	{U}
080D566C	__sread	{U}
080D56A0	__swrite	{U}
080D56E0	__sseek	{U}
080D5730	strcmp	{U}
080D57F8	initialise_monitor_handles	{U}
080D58A8	_swiread	{U}
080D58CC	_read	{U}
080D5914	_swilseek	{U}
080D5998	_lseek	{U}
080D59A4	_swiwrite	{U}
080D59C8	_write	{U}
080D5A14	_swiopen	{U}
080D5AB4	_open	{U}
080D5AC8	_swiclose	{U}
080D5AFC	_close	{U}
080D5B08	_exit	{U}
080D5B28	_kill	{U}
080D5B48	_getpid	{U}
080D5B4C	_sbrk	{U}
080D5B88	_fstat	{U}
080D5B94	_unlink	{U}
080D5B9C	_raise	{U}
080D5BA0	_gettimeofday	{U}
080D5BCC	_times	{U}
080D5BF0	_lseek_r	{U}
080D5BF0	_open_r	{U}
080D5C20	_calloc_r	{U}
080D5CB0	_fstat_r	{U}
080D5CB0	_gettimeofday_r	{U}
080D5CDC	abort	{U}
080D5D04	_read_r	{U}
080D5D04	_write_r	{U}
08017294	Durability << 8 | Weapons\u0026Get Weapon ID with 0xFF	{J}
080174EC	Durability << 8 | Weapons\u0026Get Weapon ID with 0xFF	{U}
080730E4	Mamukut transforms and changes class	{J}
08070B3C	Mamukut transforms and changes class	{U}
0807308C	Animation to release Mamukuto's transformation	{J}
08070AE4	Animation to release Mamukuto's transformation	{U}
08072FBC	Process to execute Mamukuto's transformation animation	{J}
08070A14	Process to execute Mamukuto's transformation animation	{U}
08072F14	Processing to sound start and finish by Mamukuto transformation	{J}
0807096C	Processing to sound start and finish by Mamukuto transformation	{U}
08072EA4	process that Mumukut transforms and "attacks"	{J}
080708FC	process that Mumukut transforms and "attacks"	{U}
0807D634	Determine data to be called	{J}
0807B2B4	Determine data to be called	{U}
08017A5C	Adding an enemy unit	void	r1=POINTERWork memory for enemy unit to be added	r0=Enemy data UNITID CLASSID	{J}
08017D3C	Adding an enemy unit	void	r1=POINTERWork memory for enemy unit to be added	r0=Enemy data UNITID CLASSID	{U}
@DrawFont@00	pointer	root output VRAM pointer
@DrawFont@04	pointer	pointer to glyphs
@DrawFont@08	pointer	pointer to glyph drawing routine (ex: 08004218+1, 08004268+1)
@DrawFont@0C	pointer	pointer to current VRAM tile offset getter (ex: 080041E8+1)
@DrawFont@10	short	base value for text tiles (containing base tile index & palette mask)
@DrawFont@12	short	current tile index (local/relative to root)
@DrawFont@14	short	palette index
@DrawFont@16	byte	idk	 (set from byte at 02028E74, which is initialized at 1 at start of game and never changed again	 My guess is that it denotes whenever to use Japanses (Shift-JS, 0) or English (ascii, 1) string format, since it is checked in various routines related to strings and glyphs)
@DrawFont@17	byte	idk
02028E58	@DrawFont	Default font struct	{U}
02028E58	@DrawFont	Default font struct	{J}
08003D38	SetFont	Sets which font to use for subsequent Text compuations & drawings	r0=Font Struct pointer (0 for default)	{U}
08003CF4	SetFontGlyphSet	Sets Glyph set for current font	r0=0 for UI Font, 1 for Dialogue font	{U}
080043A8	Font_LoadForUI	Loads Palette & sets glyph set for UI Font	{U}
080043E8	Font_LoadForDialogue	Loads Palette & sets glyph set for Dialogue Font	{U}
08003CB8	Font_InitForUI	Inits font for UI drawing, and sets font as current	r0=Font Struct (0 for default), r1=VRAM Root pointer	r2=VRAM Root Index	r3=Palette Index	{U}
08003C94	Font_InitDefault	Inits default font with default parameters (UI, VRAM Root 0x6001000, palette id 0)	{U}
08003D5C	Text_Init	Inits Text for current font (and clears it)	r0=Text Struct	r1=Text Tile Width	{U}
08003D84	Text_Allocate	Same as Text_Init, but doesn't clear (faster, but beware of leftover garbage graphics)	r0=Text Struct	r1=Text Tile Width	{U}
08003DAC	InitTextBatch	calls Text_Init for a bunch of text structs	r0=pointer to batch definition (see below)	{U}
08003DC8	Text_Clear	clears text (clears previously drawn tile graphics & resets x cursor & color)	r0=Text Struct	{U}
08003E50	Text_GetXCursor	{U}
08003E54	Text_SetXCursor	{U}
08003E58	Text_Advance	Advances x cursor/appends space/whatever	{U}
08003E60	Text_SetColorId	{U}
08003E64	Text_GetColorId	{U}
08003E68	Text_SetParameters	r0=Text Struct	r1=cursor	r2=color id	{U}
08003E70	Text_Draw	Draws text on backgroud tile data, switches buffers when applicable	r0=Text Struct	r1=Output Tile Root	{U}
08003EBC	Text_DrawBlank	Draws a blank rect on background tile data, where given text would have been drawn	r0=Text Struct	r1=Output Tile Root	{U}
08004004	Text_AppendString	Appends String to Text graphics	r0=Text Struct, r1=String pointer	{U}
08004074	Text_AppendDecNumber	Appends Number as decimal to Text graphics	r0=Text Struct	r1=Number	{U}
08004144	Text_AppendNumberOr2Dashes	Same as above, except 0xFF will display "--"	r0=Text Struct	r1=Number (or 0xFF for "--")	{U}
08004480	Text_InsertString	Inserts String on Text	r0=Text Struct	r1=Cursor Start to insert to	r2=Color Id	r3=String pointer	{U}
080044A4	Text_InsertNumberOr2Dashes	Inserts Dec Number or 2 dashes on Text	r0=Text Struct, r1=Cursor Start to insert to	r2=Color Id	r3=Number (or 0xFF for "--")	{U}
08003EDC	GetStringTextWidth	Returns length of given string as drawn text given current font	r0=String pointer (null terminated ofc)	{U}
08003F90	GetStringTextCenteredPos	Returns pos of Text for given string to be center given arg length	r0=tile width	r1=String pointer	{U}
0800443C	DrawTextInline	Draws text on screen without *needing* a text struct	r0=Text Struct (0 for temporary), r1=Output tile pointer root	r2=color id	r3=local x start	[sp]=tile width	[sp+4]=String pointer	{U}
08003C68	SetFont	Sets which font to use for subsequent Text compuations & drawings	r0=Font Struct pointer (0 for default)	{J}
080042E0	Font_LoadForUI	Loads Palette & sets glyph set for UI Font	{J}
08004320	Font_LoadForDialogue	Loads Palette & sets glyph set for Dialogue Font	{J}
08003BE8	Font_InitForUI	Inits font for UI drawing, and sets font as current	r0=Font Struct (0 for default), r1=VRAM Root pointer	r2=VRAM Root Index	r3=Palette Index	{J}
08003BC4	Font_InitDefault	Inits default font with default parameters (UI, VRAM Root 0x6001000, palette id 0)	{J}
08003C8C	Text_Init	Inits Text for current font (and clears it)	r0=Text Struct	r1=Text Tile Width	{J}
08003CB4	Text_Allocate	Same as Text_Init, but doesn't clear (faster, but beware of leftover garbage graphics)	r0=Text Struct	r1=Text Tile Width	{J}
08003CDC	InitTextBatch	calls Text_Init for a bunch of text structs	r0=pointer to batch definition (see below)	{J}
08003CF8	Text_Clear	clears text (clears previously drawn tile graphics & resets x cursor & color)	r0=Text Struct	{J}
08003D80	Text_GetXCursor	{J}
08003D84	Text_SetXCursor	{J}
08003D88	Text_Advance	Advances x cursor/appends space/whatever	{J}
08003D90	Text_SetColorId	{J}
08003D94	Text_GetColorId	{J}
08003D98	Text_SetParameters	r0=Text Struct	r1=cursor	r2=color id	{J}
08003DA0	Text_Draw	Draws text on backgroud tile data, switches buffers when applicable	r0=Text Struct	r1=Output Tile Root	{J}
08003DEC	Text_DrawBlank	Draws a blank rect on background tile data, where given text would have been drawn	r0=Text Struct	r1=Output Tile Root	{J}
08003F28	Text_AppendString	Appends String to Text graphics	r0=Text Struct, r1=String pointer	{J}
0800407C	Text_AppendNumberOr2Dashes	Same as above, except 0xFF will display "--"	r0=Text Struct	r1=Number (or 0xFF for "--")	{J}
080043B8	Text_InsertString	Inserts String on Text	r0=Text Struct	r1=Cursor Start to insert to	r2=Color Id	r3=String pointer	{J}
080043DC	Text_InsertNumberOr2Dashes	Inserts Dec Number or 2 dashes on Text	r0=Text Struct, r1=Cursor Start to insert to	r2=Color Id	r3=Number (or 0xFF for "--")	{J}
08003E0C	GetStringTextWidth	Returns length of given string as drawn text given current font	r0=String pointer (null terminated ofc)	{J}
08003EAC	GetStringTextCenteredPos	Returns pos of Text for given string to be center given arg length	r0=tile width	r1=String pointer	{J}
08004374	DrawTextInline	Draws text on screen without *needing* a text struct	r0=Text Struct (0 for temporary), r1=Output tile pointer root	r2=color id	r3=local x start	[sp]=tile width	[sp+4]=String pointer	{J}

@AiDecision@00	byte	decisionType;
@AiDecision@01	byte	unitIndex
@AiDecision@02	byte	xMovement
@AiDecision@03	byte	yMovement
@AiDecision@04	byte	pad_04
@AiDecision@05	byte	pad_06
@AiDecision@06	byte	unitTargetIndex
@AiDecision@07	byte	usedItemSlot
@AiDecision@08	byte	xOther
@AiDecision@09	byte	yOther
@AiDecision@0A	byte	decisionTaken

@AiData@00	byte	aiUnits
@AiData@74	byte	aiUnitIt
@AiData@78	byte	cpOrderNext
@AiData@79	byte	cpDecideNext
@AiData@7A	byte	dangerMapActive
@AiData@7B	byte	aiConfig
@AiData@7C	byte	Unk7C
@AiData@7D	byte	Unk7D
@AiData@7E	byte	Unk7E
@AiData@7F	byte	_pad7F
@AiData@80	word	someFlag80
@AiData@84	byte	Unk84
@AiData@85	byte	highestBlueMov
@AiData@86	byte	AI Result1
@AiData@87	byte	AI Result2
@AiData@88	byte	AI Result3
@AiData@89	byte	AI Result4
@AiData@8A	byte	AI Result5
@AiData@8B	byte	_pad8B
@AiData@8C	byte	_pad8C
@AiData@8D	byte	_pad8D
@AiData@8E	byte	_pad8E
@AiData@8F	byte	_pad8F
@AiData@90	byte	decisionType;
@AiData@91	byte	unitIndex
@AiData@92	byte	xMovement
@AiData@93	byte	yMovement
@AiData@94	byte	pad_04
@AiData@95	byte	pad_05
@AiData@96	byte	unitTargetIndex
@AiData@97	byte	usedItemSlot
@AiData@98	byte	xOther
@AiData@99	byte	yOther
@AiData@9A	byte	decisionTaken
@AiData@9B	byte	decisionType

@ActionData@00	short	Unknown0
@ActionData@02	short	Unknown2
@ActionData@04	short	Unknown4
@ActionData@06	short	Unknown6
@ActionData@08	short	Unknown8
@ActionData@0A	short	UnknownA
@ActionData@0C	byte	subjectIndex
@ActionData@0D	byte	targetIndex
@ActionData@0E	byte	xMove
@ActionData@0F	byte	xMove
@ActionData@10	byte	moveCount
@ActionData@11	byte	unitActionType
@ActionData@12	byte	itemSlotIndex
@ActionData@13	byte	xOther
@ActionData@14	byte	yOther
@ActionData@15	byte	trapType
@ActionData@16	byte	suspendPointType
@ActionData@17	byte	_pad17
@ActionData@18	word	scriptedBattleHits
@ActionData@1C	word	_Unknown1C

@Vec2@00	short	x
@Vec2@02	short	y
@Vec2l@00	word	x
@Vec2l@04	word	y
@Vec2u@00	short	x_unsigned
@Vec2u@02	short	y_unsigned
@Vec2lu@00	word	x_unsigned
@Vec2lu@04	word	y_unsigned

@BattleMapState@00	byte	boolMainLoopEnded
@BattleMapState@01	byte	proc2LockCount
@BattleMapState@02	byte	gfxLockCount
@BattleMapState@03	byte	_Unknown03
@BattleMapState@04	byte	statebits
@BattleMapState@06	short	savedVCount
@BattleMapState@08	word	_Unknown08
@BattleMapState@08	@Vec2u	cameraRealPos
@BattleMapState@0C	@Vec2u	cameraRealPos
@BattleMapState@10	@Vec2u	_Unknown10
@BattleMapState@14	@Vec2u	cursorMapPos
@BattleMapState@18	@Vec2u	cursorMapPosPrev
@BattleMapState@1C	@Vec2u	_Unknown1C
@BattleMapState@20	@Vec2u	cursorDisplayRealPos
@BattleMapState@24	@Vec2u	_Unknown24
@BattleMapState@28	byte	_pad28
@BattleMapState@3c	byte	_pad3c
@BattleMapState@3d	byte	partialActionTaken

@KeyStatusBuffer@00	byte	FirstTickDelay
@KeyStatusBuffer@01	byte	NextTickDelay
@KeyStatusBuffer@02	byte	TickDownCounter	(decreased by one each frame, reset to FirstTickDelay when Presses change and NextTickDelay when reaches 0)
@KeyStatusBuffer@03	byte	unused
@KeyStatusBuffer@04	short	Current
@KeyStatusBuffer@06	short	TickPresses	 1 For Press|Tick&Pressed, 0 Otherwise
@KeyStatusBuffer@08	short	NewPresses:  1 For Press, 0 Otherwise
@KeyStatusBuffer@0A	short	Previous
@KeyStatusBuffer@0C	short	LastPressState: Current, but set only if NewPresses is not null
@KeyStatusBuffer@0E	short	Release	1 for Release (A B L R Only), 0 Otherwise
@KeyStatusBuffer@10	short	Another NewPresses?
@KeyStatusBuffer@12	short	Time since last	Non-Start Non-Select Button was pressed
02024CC0	@KeyStatusBuffer	KeyStatusBuffer	{U}
02024CC0	@KeyStatusBuffer	KeyStatusBuffer	{J}
0858791C	KeyStatusBuffer Pointer	{U}
085775CC	KeyStatusBuffer Pointer	{J}


//https://www	dropbox	com/sh/zymc1h221nnxpm9/AAA1sHR4hvxFxZYqOF3zqkG6a/Stan/_Notes?dl=0&preview=World+Map+Notes	txt
@GmapMUsData@00	byte	some bitfield (&1=set when linked Gmap MU prim is used?, &2=Use class (char otherwise))
@GmapMUsData@01	byte	Current WM Location Index?
@GmapMUsData@02	short	Char/Class ID
03005290	@GmapMUsData	GmapMUsData	{U}

//http://ngmansion	xyz/wiki/hackfe/index	php?%E8%A7%A3%E8%AA%AC/%E7%B5%82%E7%AB%A0%E3%81%B8%E3%81%AE%E9%81%93%E3%81%8C%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%81%AA%E3%81%8F%E3%81%AA%E3%82%8B%E7%8F%BE%E8%B1%A1%E3%81%AE%E8%80%83%E5%AF%9F
03005314	Worldmap Show RoadID 00	{J}
03005315	Worldmap Show RoadID 01	{J}
03005316	Worldmap Show RoadID 02	{J}
03005317	Worldmap Show RoadID 03	{J}
03005318	Worldmap Show RoadID 04	{J}
03005319	Worldmap Show RoadID 05	{J}
0300531A	Worldmap Show RoadID 06	{J}
0300531B	Worldmap Show RoadID 07	{J}
0300531C	Worldmap Show RoadID 08	{J}
0300531D	Worldmap Show RoadID 09	{J}
0300531F	Worldmap Show RoadID 0A	{J}
03005320	Worldmap Show RoadID 0B	{J}
03005321	Worldmap Show RoadID 0C	{J}
03005322	Worldmap Show RoadID 0D	{J}
03005323	Worldmap Show RoadID 0E	{J}
03005324	Worldmap Show RoadID 0F	{J}
03005325	Worldmap Show RoadID 10	{J}
03005326	Worldmap Show RoadID 11	{J}
03005327	Worldmap Show RoadID 12	{J}
03005328	Worldmap Show RoadID 13	{J}
03005329	Worldmap Show RoadID 14	{J}
0300532A	Worldmap Show RoadID 15	{J}
0300532B	Worldmap Show RoadID 16	{J}
0300532C	Worldmap Show RoadID 17	{J}
0300532D	Worldmap Show RoadID 18	{J}
0300532E	Worldmap Show RoadID 19	{J}
0300532F	Worldmap Show RoadID 1A	{J}
03005330	Worldmap Show RoadID 1B	{J}
03005331	Worldmap Show RoadID 1C	{J}
03005332	Worldmap Show RoadID 1D	{J}
03005333	Worldmap Show RoadID 1E	{J}
03005334	Worldmap Road Count	{J}
03005324	Worldmap Show RoadID 00	{U}
03005325	Worldmap Show RoadID 01	{U}
03005326	Worldmap Show RoadID 02	{U}
03005327	Worldmap Show RoadID 03	{U}
03005328	Worldmap Show RoadID 04	{U}
03005329	Worldmap Show RoadID 05	{U}
0300532A	Worldmap Show RoadID 06	{U}
0300532B	Worldmap Show RoadID 07	{U}
0300532C	Worldmap Show RoadID 08	{U}
0300532D	Worldmap Show RoadID 09	{U}
0300532F	Worldmap Show RoadID 0A	{U}
03005330	Worldmap Show RoadID 0B	{U}
03005331	Worldmap Show RoadID 0C	{U}
03005332	Worldmap Show RoadID 0D	{U}
03005333	Worldmap Show RoadID 0E	{U}
03005334	Worldmap Show RoadID 0F	{U}
03005335	Worldmap Show RoadID 10	{U}
03005336	Worldmap Show RoadID 11	{U}
03005337	Worldmap Show RoadID 12	{U}
03005338	Worldmap Show RoadID 13	{U}
03005339	Worldmap Show RoadID 14	{U}
0300533A	Worldmap Show RoadID 15	{U}
0300533B	Worldmap Show RoadID 16	{U}
0300533C	Worldmap Show RoadID 17	{U}
0300533D	Worldmap Show RoadID 18	{U}
0300533E	Worldmap Show RoadID 19	{U}
0300533F	Worldmap Show RoadID 1A	{U}
03005340	Worldmap Show RoadID 1B	{U}
03005341	Worldmap Show RoadID 1C	{U}
03005342	Worldmap Show RoadID 1D	{U}
03005343	Worldmap Show RoadID 1E	{U}
03005344	Worldmap Road Count	{U}

030052A0	Worldmap Node00	Border Mulan	{J}
030052A4	Worldmap Node01	Castle Frelia	{J}
030052A8	Worldmap Node02	Ide	{J}
030052AC	Worldmap Node03	Borgo Ridge	{J}
030052B0	Worldmap Node04	Zaha Woods	{J}
030052B4	Worldmap Node05	Serafew	{J}
030052B8	Worldmap Node06	Adlas Plains	{J}
030052BC	Worldmap Node07	Renvall	{J}
030052C0	Worldmap Node08	Renvall	{J}
030052C4	Worldmap Node09	Port Kiris	{J}
030052C8	Worldmap Node0A	Teraz Plateau	{J}
030052CC	Worldmap Node0B	Caer Pelyn	{J}
030052D0	Worldmap Node0C	Hamill Canyon	{J}
030052D4	Worldmap Node0D	Jehanna Hall	{J}
030052D8	Worldmap Node0E	Fort Rigwald	{J}
030052DC	Worldmap Node0F	Bethroen	{J}
030052E0	Worldmap Node10	Taizel	{J}
030052E4	Worldmap Node11	Zaalbul Marsh	{J}
030052E8	Worldmap Node12	Grado Keep	{J}
030052EC	Worldmap Node13	Jehanna Hall	{J}
030052F0	Worldmap Node14	Renais Castle	{J}
030052F4	Worldmap Node15	Narube River	{J}
030052F8	Worldmap Node16	Neleras Peak	{J}
030052FC	Worldmap Node17	Rausten Court	{J}
03005300	Worldmap Node18	Darkling Woods	{J}
03005304	Worldmap Node19	Black Temple	{J}
03005308	Worldmap Node1A	Tower of Valni	{J}
0300530C	Worldmap Node1B	Lagdou Ruins	{J}
03005310	Worldmap Node1C	Melkaen Coast	{J}

030052B0	Worldmap Node00	Border Mulan	{U}
030052B4	Worldmap Node01	Castle Frelia	{U}
030052B8	Worldmap Node02	Ide	{U}
030052BC	Worldmap Node03	Borgo Ridge	{U}
030052C0	Worldmap Node04	Zaha Woods	{U}
030052C4	Worldmap Node05	Serafew	{U}
030052C8	Worldmap Node06	Adlas Plains	{U}
030052CC	Worldmap Node07	Renvall	{U}
030052D0	Worldmap Node08	Renvall	{U}
030052D4	Worldmap Node09	Port Kiris	{U}
030052D8	Worldmap Node0A	Teraz Plateau	{U}
030052DC	Worldmap Node0B	Caer Pelyn	{U}
030052E0	Worldmap Node0C	Hamill Canyon	{U}
030052E4	Worldmap Node0D	Jehanna Hall	{U}
030052E8	Worldmap Node0E	Fort Rigwald	{U}
030052EC	Worldmap Node0F	Bethroen	{U}
030052F0	Worldmap Node10	Taizel	{U}
030052F4	Worldmap Node11	Zaalbul Marsh	{U}
030052F8	Worldmap Node12	Grado Keep	{U}
030052FC	Worldmap Node13	Jehanna Hall	{U}
03005300	Worldmap Node14	Renais Castle	{U}
03005304	Worldmap Node15	Narube River	{U}
03005308	Worldmap Node16	Neleras Peak	{U}
0300530C	Worldmap Node17	Rausten Court	{U}
03005310	Worldmap Node18	Darkling Woods	{U}
03005314	Worldmap Node19	Black Temple	{U}
03005318	Worldmap Node1A	Tower of Valni	{U}
0300531C	Worldmap Node1B	Lagdou Ruins	{U}
03005320	Worldmap Node1C	Melkaen Coast	{U}

@MapSize@0	short	Width
@MapSize@2	short	Height
0202E4D4	@MapSize	MapSize	{U}
0202E4D0	@MapSize	MapSize	{J}
@BattleStats@00	short	bitfield	(0x2='battle hasn't started yet', 0x20=arena, 0x80=Promotion)
@BattleStats@02	short	Type of animation?	No idea, really	 -Appears to be range
@BattleStats@04	short	Damage	(Attack - defense)
@BattleStats@06	short	Attack
@BattleStats@08	short	Defense
@BattleStats@0A	short	Battle hit
@BattleStats@0C	short	Battle crit
@BattleStats@0E	short	Lethality chance
@BattleStats@10	&Unit	taUnitA
@BattleStats@14	&Unit	taUnitB
0203A4D4	@BattleStats	BattleStats	{U}
0203A4D0	@BattleStats	BattleStats	{J}
@BattleRound@00	byte	Option1	0x01=Critical 0x02=Miss 0x04=? 0x08=? 0x10=Brave 0x20=? 0x40=Poison 0x80=Devil
@BattleRound@01	byte	Option2	0x01=Steal HP 0x02=? 0x04=Triangle attack 0x08=Lethality 0x10=? 0x20=Petrified 0x40=Sure Shot 0x80=Great Shield
@BattleRound@02	byte	Option3	0x01=Pierce 0x02=? 0x04=? 0x08=End Battle 0x10=?
@BattleRound@03	byte	Damage
@ActionBattleStruct@06	byte	Apparently sometimes has item id
@ActionBattleStruct@0C	byte	Current character's allegiance
@ActionBattleStruct@0D	byte	Target's allegiance	Target's allegiance byte (once selected)
@ActionBattleStruct@0E	byte	moved-to X	Current character's moved-to x coordinate
@ActionBattleStruct@0F	byte	moved-to Y	Current character's moved-to y coordinate
@ActionBattleStruct@10	byte	Squares moved this turn
@ActionBattleStruct@11	byte	Action taken this turn	0x01=Wait 0x02=Combat (Attack) 0x03=Staff 0x04=Dance/Play 0x05=Unused? 0x06=Steal 0x07=Summon 0x08=DK Summoning (I think) 0x09=Rescue 0x0A=Drop 0x0B=Take 0x0C=Give 0x0D=Unused? (I use this for auto-promotions) 0x0E=Talk 0x0F=Support 0x10=Visit 0x11=Seize 0x12=Door 0x13=Unused? 0x14=Chest 0x15=Pick 0x16=Unused? 0x17=Bought something from shop/armory/(presumably) secret shop 0x18=Unused? 0x19=Arena 0x1A=Use item 0x1B=Unused? (stored at 2D774) 0x1C=Unused? (stored at 9E3BA/9E8F2) 0x1D=Trade/Supply 0x1E=Wait due to finding an enemy in fog 0x1F=Backing out of an action, under certain circumstances 0x20=? 0x21=Ride (ballista) 0x22=Exit (ballista)
@ActionBattleStruct@12	Inventory slot number (0-4)
0203A958	@ActionBattleStruct	ActionBattleStruct	{U}
0203A954	@ActionBattleStruct	ActionBattleStruct	{J}
@ChapterData@00	word	TurnStartClock
@ChapterData@04	word	ChapterStartClock
@ChapterData@08	word	Money
@ChapterData@0C	byte	saveSlotIndex
@ChapterData@0D	byte	Vision Range	(0 if there's no fog)
@ChapterData@0E	byte	Chapter ID
@ChapterData@0F	byte	Phase	(0x0=player, 0x40=allied, 0x80=enemy)
@ChapterData@10	short	Turn number
@ChapterData@12	byte	Cursor x position	(only when displaying a menu?)
@ChapterData@13	byte	Cursor y position	(only when displaying a menu?)
@ChapterData@14	byte	Chapter Stuff	&01=Stat screen page 1 (Inventory) (0=stats) (these are set after backing out of stat menu)	&02=Stat screen page 2 (Difficulty)	&10=Set when on prep screen	&40=Set for hard mode	&80=Don't gain weapon exp (not sure what this is for)
@ChapterData@15	byte	Weather	(0=clear, 1=snow, 2=snowstorm, 4=rain) (funnily enough, if non-zero, arena battles take support bonuses into account)
@ChapterData@16	short	Support Gain Total
@ChapterData@18	byte	playthroughId
@ChapterData@19	byte	_pad19
@ChapterData@1A	byte	lastUnitListSortType
@ChapterData@1B	byte	Mode	(1=prologue-8, 2=Eirika 3=Ephraim)
@ChapterData@1C	word	Weapon type lookup by weapon specifying which character ids may bypass the unusable bit?????
@ChapterData@20	byte	tactician name(0x20-0x2B)
@ChapterData@2B	word	tactician name term 0x00
@ChapterData@2C	word	Unknown2C
@ChapterData@30	word	fundsTotalDifference
@ChapterData@34	word	Unknown34
@ChapterData@38	short	padding_38
@ChapterData@40	byte	Option1	 &01=Controller(unused) &02=Terrain window (set=off, not set=on)  &04=Unit window (set=burst, not set=panel) &08=Unit window (set=off, not set=panel)  &10=Autocursor (set=off, not set=on)
&20=Text speed (set=normal, not set=slow)  &40=Text speed (set=fast, not set=slow, set + 0x20 also set=max)  &80=Game speed (set=fast, not set=normal)
@ChapterData@41	byte	Option2	&01=Music (set=off, not set=on) &02=Sound effects (set=off, not set=on) &04=Window color (set=orange, not set=blue) &08=Window color (set=green, not set=blue, set + 0x08 also set=black) &10=Something about displaying B/W/L on stat screen &40=Autoend turns (set=off, not set=on) &80=Subtitle help (set=off, not set=on)
@ChapterData@42	byte	Option3	&01=Show objective (set=off, not set=on) &02=Combat animations off (if both 2 and 4 are set, combat animations are on with backgrounds on) &04=Combat animations solo (if both 2 and 4 are not set, combat animations are on with backgrounds off) &08=Combat info window (set=detail, not set=strat) &10=Combat info window (set=off, not set=strat) &20=RankDisplay(unused)
@ChapterData@43	byte	Unknown43
@ChapterData@44	word	Unknown44
@ChapterData@48	short	Unknown48
@ChapterData@4A	short	Unknown4A
0202BCF0	@ChapterData	gChapterData	{U}
0202BCEC	@ChapterData	gChapterData	{J}

@CharacterBattleStatistic@00	byte	Losses
@CharacterBattleStatistic@01	short	Number of times a unit performs an action (seems to increase by 2) (non-aligned halfword)
@CharacterBattleStatistic@03	byte	Number of times selected (caps at 199)
@CharacterBattleStatistic@04	byte	Number of times viewed in stat screen (caps at 199)
@CharacterBattleStatistic@05	short	Lower 4 bits are (most recent) chapter number they died on, upper 4 bits (along with byte 0x6) are turn number they died on
@CharacterBattleStatistic@09	short	Top 4 bits, along with 0xA, is exp gained this chapter
@CharacterBattleStatistic@0B	byte	Along with bottom 2 bits of 0xC, wins
@CharacterBattleStatistic@0C	short	Bottom 2 bits are wins, top 6 bits, along with bottom 6 bits of 0xD, are battles
@CharacterBattleStatistic@0E	byte	Character number of most recent killer
@CharacterBattleStatistic@0F	byte	Unknown F

0203E894	@CharacterBattleStatistic@[46]	Unit	{U}
0203E890	@CharacterBattleStatistic@[46]	Unit	{J}

@ClearTurn@00	short	Chapter ID and number of turns	Number of turns<<7+Chapter ID
@ClearTurn@02	short	Clear time seconds
0203ECF0	@ClearTurn@[24]	Chapter Clear Turn	{J}
0203ECF4	@ClearTurn@[24]	Chapter Clear Turn	{U}

@ITEMSTOCK@00	byte	Item ID
@ITEMSTOCK@01	byte	Number of items
0203A818	@ITEMSTOCK@[64]	Storage	{J}
0203A81C	@ITEMSTOCK@[64]	Storage	{U}

03005261	flag0x09 - 0x10	{J}
03005262	flag0x11 - 0x18	{J}
03005263	flag0x19 - 0x20	{J}
03005264	flag0x21 - 0x 28	{J}
03005240	flag0x65 - 0x6C	{J}
03005241	flag0x6D - 0x74	{J}
03005242	flag0x75 - 0x7C	{J}
03005243	flag0x7D - 0x84	{J}
03005244	flag0x85 - 0x8C	{J}
03005245	flag0x8D - 0x94	{J}
03005246	flag0x95 - 0x9C	{J}
03005247	flag0x9D - 0xA4	{J}
03005248	flag0xA5 - 0xAC	{J}
03005249	flag0xAD - 0xB4	{J}
0300524A	flag0xB5 - 0xBC	{J}
0300524B	flag0xBD - 0xC4	{J}
0300524C	flag0xC5 - 0xCC	{J}
0300524D	flag0xCD - 0xD4	{J}
0300524E	flag0xD5 - 0xDC	{J}
0300524F	flag0xDD - 0xE4	{J}
03005250	flag0xE5 - 0xEC	{J}
03005251	flag0xED - 0xF4	{J}
03005252	flag0xF5 - 0xFC	{J}
03005253	flag0xFD - 0x104	{J}
03005254	flag0x105 - 0x10C	{J}
03005255	flag0x10D - 0x114	{J}
03005256	flag0x115 - 0x11C	{J}
03005257	flag0x11D - 0x124	{J}
03005258	flag0x125 - 0x12C	{J}
03005270	flag0x01 - 0x8	{U}
03005271	flag0x09 - 0x10	{U}
03005272	flag0x11 - 0x18	{U}
03005273	flag0x19 - 0x20	{U}
03005274	flag0x21 - 0x28	{U}
03005250	flag0x65 - 0x6C	{U}
03005251	flag0x6D - 0x74	{U}
03005252	flag0x75 - 0x7C	{U}
03005253	flag0x7D - 0x84	{U}
03005254	flag0x85 - 0x8C	{U}
03005255	flag0x8D - 0x94	{U}
03005256	flag0x95 - 0x9C	{U}
03005257	flag0x9D - 0xA4	{U}
03005258	flag0xA5 - 0xAC	{U}
03005259	flag0xAD - 0xB4	{U}
0300525A	flag0xB5 - 0xBC	{U}
0300525B	flag0xBD - 0xC4	{U}
0300525C	flag0xC5 - 0xCC	{U}
0300525D	flag0xCD - 0xD4	{U}
0300525E	flag0xD5 - 0xDC	{U}
0300525F	flag0xDD - 0xE4	{U}
03005261	flag0xED - 0xF4	{U}
03005262	flag0xF5 - 0xFC	{U}
03005263	flag0xFD - 0x104	{U}
03005264	flag0x105 - 0x10C	{U}
03005265	flag0x10D - 0x114	{U}
03005266	flag0x115 - 0x11C	{U}
03005267	flag0x11D - 0x124	{U}
03005268	flag0x125 - 0x12C	{U}

020228A8	Palette wram buffer
02022CA8	gBG0TilemapBuffer	BG 0 wram buffer
020234A8	gBG1TilemapBuffer	BG 1 wram buffer
02023CA8	gBG2TilemapBuffer	BG 2 wram buffer
020244A8	gBG3TilemapBuffer	BG 3 wram buffer

0203EFB8	Unit data loaded from events	{U}
0203EFB4	Unit data loaded from events	{J}

02003BFC	Stat screen data	{U}
02003BFC	Stat screen data	{J}

//https://www	dropbox	com/sh/zymc1h221nnxpm9/AACrgal3LFRvbDKL-5qDxF3-a/Tequila/Teq%20Doq?dl=0&preview=Useful+functions	txt
0801A4CC	Copies movement	cost entry (0x40 bytes long) from rom to 3004BB0, for use in calculating which squares can be moved to		r0=movement cost entry pointer	{U}
0801A198	Copies movement	cost entry (0x40 bytes long) from rom to 3004BB0, for use in calculating which squares can be moved to		r0=movement cost entry pointer	{J}

08019430	Get_Char_Data	Given allegiance byte (0xB in unit data), returns beginning of said data	 Used for looping through units		RET=RAM character data pointer	r0=allegiance byte	{U}
08019108	Get_Char_Data	Given allegiance byte (0xB in unit data), returns beginning of said data	 Used for looping through units		RET=RAM character data pointer	r0=allegiance byte	{J}

08018D4C	checks if character is riding a ballista and what weather is	Usually called before calling 1A4CC, this function checks if character is riding a ballista and what weather is		movement cost table entry	r0=ram char data ptr	{U}
08018A60	checks if character is riding a ballista and what weather is	Usually called , this function checks if character is riding a ballista and what weather is		movement cost table entry	r0=ram char data ptr	{J}


08019150	Current_HP_Getter	RET=Gets current hp, adds equipped weapon bonus, checks to make sure current hp <= max hp		Character's current hp	r0=ram char data ptr	{U}
08018E64	Current_HP_Getter	RET=Gets current hp, adds equipped weapon bonus, checks to make sure current hp <= max hp		Character's current hp	r0=ram char data ptr	{J}

08019190	Max_HP_Getter	RET=Character's max hp	r0=ram char data ptr	{U}
08018EA4	Max_HP_Getter	RET=Character's max hp	r0=ram char data ptr	{J}
080191B0	Str_Getter	RET=Character's strength	r0=ram char data ptr	{U}
08018EC4	Str_Getter	RET=Character's strength	r0=ram char data ptr	{J}

080191D0	Skl_Getter		RET=Character's skill	r0=ram char data ptr	{U}
08018EE4	Skl_Getter		RET=Character's skill	r0=ram char data ptr	{J}

08019210	Spd_Getter		RET=Character's speed	r0=ram char data ptr	{U}
08018F24	Spd_Getter		RET=Character's speed	r0=ram char data ptr	{J}

08019250	Def_Getter	RET=Character's defense	r0=ram char data ptr	{U}
08018F64	Def_Getter	RET=Character's defense	r0=ram char data ptr	{J}

08019270	Res_Getter	RET=Character's resistance	r0=ram char data ptr	{U}
08018F84	Res_Getter	RET=Character's resistance	r0=ram char data ptr	{J}

08019298	Luk_Getter	RET=Character's luck	r0=ram char data ptr	{U}
08018FAC	Luk_Getter	RET=Character's luck	r0=ram char data ptr	{J}

080189B8	Aid_Getter	RET=Character's aid	r0=ram char data ptr	{U}
080186CC	Aid_Getter	RET=Character's aid	r0=ram char data ptr	{J}

08016B28	Get_Equipped_Weapon	RET=equipped weapon id/uses halfword	r0=ram char data ptr	{U}
080168D0	Get_Equipped_Weapon	RET=equipped weapon id/uses halfword	r0=ram char data ptr	{J}

0801834C	Write_Rescue_Data	Sets appropriate bits in turn words, writes allegiance bytes to 0x1B, and sets coordinates	r0=rescuer char data ptr, r1=rescuee char data ptr	{U}
08018060	Write_Rescue_Data	Sets appropriate bits in turn words, writes allegiance bytes to 0x1B, and sets coordinates	r0=rescuer char data ptr, r1=rescuee char data ptr	{J}

08024DA4	Compare_Allegiance_Func1	True if both units are of same allegiance	r0=allegiance bytes (0xB of RAM char data ptr)	r1=same	{U}
08024D54	Compare_Allegiance_Func1	True if both units are of same allegiance	r0=allegiance bytes (0xB of RAM char data ptr)	r1=same	{J}

08024D8C	Compare_Allegiance_Func2	RET=True if both units are either both enemies or are both blue/green	r0=allegiance bytes (0xB of RAM char data ptr)	r1=same	{U}
08024D3C	Compare_Allegiance_Func2	RET=True if both units are either both enemies or are both blue/green	r0=allegiance bytes (0xB of RAM char data ptr)	r1=same	{J}

0803C818	AI_Compare_Allegiance_Func	Checks current unit's allegiance	RET=True if not on same team	r0=allegiance byte of target	{U}
0803C7A8	AI_Compare_Allegiance_Func	Checks current unit's allegiance	RET=True if not on same team	r0=allegiance byte of target	{J}

080192B8	Get_Portrait	Either short 0x6 of char data or (if character doesn't have a character portrait) short 0x8 of class data	RET=index of character's portrait	r0=char data ptr	{U}

08017548	Get_Weapon_Type	RET=Item's weapon type	r0=item id	{U}
080172F0	Get_Weapon_Type	RET=Item's weapon type	r0=item id	{J}

0800D07C	Call_Event_Engine	Can be used to run events whenever	r0=pointer to events, r1=0 (something to do with fading?)	{U}
0800D340	Call_Event_Engine	Can be used to run events whenever	r0=pointer to events, r1=0 (something to do with fading?)	{J}

080346B0	Get_Chapter_Events	RET=Pointer to that chapter's events	r0=chapter number	{U}
080345B8	Get_Chapter_Events	RET=Pointer to that chapter's events	r0=chapter number	{J}

08019464	Get_Rom_Character_Data	RET=beginning of character data, or 0 if passed 0	r0=character number	{U}
0801913C	Get_Rom_Character_Data	RET=beginning of character data, or 0 if passed 0	r0=character number	{J}
0801829C	Find_Character	Useful for supports, I guess		RET=Ram char data ptr	r0=character number (rom character, that is)	{U}
08017FB0	Find_Character	Useful for supports, I guess		RET=Ram char data ptr	r0=character number (rom character, that is)	{J}


08016FB8	Heal_Amount_Getter	RET=Amount to heal	r0=ram char data ptr	r1=item id/uses	{U}
08016D60	Heal_Amount_Getter	RET=Amount to heal	r0=ram char data ptr	r1=item id/uses	{J}


080178D8	Set_Character_Status	Orr's status nibble with 0x50 (duration) and stores to char data+0x30 if nonzero; stores 0 otherwise	r0=ram char data ptr, r1=status id	{U}
08017680	Set_Character_Status	Orr's status nibble with 0x50 (duration) and stores to char data+0x30 if nonzero; stores 0 otherwise	r0=ram char data ptr, r1=status id	{J}

08000DB8	Write_Palette CopyToPaletteBuffer	r0=pointer to palette	r1=destination offset	r2=size (0x20 per full palette)	{U}
08000D68	Write_Palette CopyToPaletteBuffer	r0=pointer to palette	r1=destination offset	r2=size (0x20 per full palette)	{J}


08037A04	Add_Ballista_Data	r0=x	r1=y	r2=ballista item index	{U}
08037A9C	Add_Ballista_Data	r0=x	r1=y	r2=ballista item index	{J}

080179D8	Get_Open_Inventory_Space	RET=Slot of next open inventory space (0-4, 5 = full)	r0=char data ptr	{U}
08017780	Get_Open_Inventory_Space	RET=Slot of next open inventory space (0-4, 5 = full)	r0=char data ptr	{J}
08031570	Count_Items_In_Convoy	RET=Number of items in convoy	{U}
080314BC	Count_Items_In_Convoy	RET=Number of items in convoy	{J}

08024E20	Add_Gold_To_Cashpile	r0=amount of gold	{U}
08024DD0	Add_Gold_To_Cashpile	r0=amount of gold	{J}

080177B0	Get_Item_Data	This function is (at least, in fe8) literally never used	RET=Pointer to item data	r0=item id/uses short	{U}
08017558	Get_Item_Data	This function is (at least, in fe8) literally never used	RET=Pointer to item data	r0=item id/uses short	{J}


08017A34	Create_Unit	Creates a unit with given characteristics	RET=number of units made	r0=pointer to list of UNIT data	{U}
080177DC	Create_Unit	Creates a unit with given characteristics	RET=number of units made	r0=pointer to list of UNIT data	{J}
08016BC0	Shuffle_Used_Item	r0=char data ptr	r1=invetory slot	{U}
08016968	Shuffle_Used_Item	r0=char data ptr	r1=invetory slot	{J}


080197E4	Fill_Map	Used for clearing maps (unit, range, movement, fog, etc)	 Also stores r0 to 30049A0	void	r0=map's row pointer table, r1=byte to fill with	{U}
080194BC	Fill_Map	Used for clearing maps (unit, range, movement, fog, etc)	 Also stores r0 to 30049A0	void	r0=map's row pointer table, r1=byte to fill with	{J}
08024D50	Count_Faction_With_Criteria		RET=number of units in a faction that do NOT have any of those bits set	r0=faction bit (0 for player, 80 for enemy, 40 for npc), r1 = word to AND with unit's turn status word (+0xC)	{U}
08024D00	Count_Faction_With_Criteria		RET=number of units in a faction that do NOT have any of those bits set	r0=faction bit (0 for player, 80 for enemy, 40 for npc), r1 = word to AND with unit's turn status word (+0xC)	{J}

0801702C	Unit_Has_Item		RET=inventory slot, or -1 if unit doesn't have said item	r0=char data ptr, r1=item id to search for	{U}
08016DD4	Unit_Has_Item		RET=inventory slot, or -1 if unit doesn't have said item	r0=char data ptr, r1=item id to search for	{J}

08803D30	UnitsID:0	{U}
08858288	UnitsID:0	{J}


//from https://doc	feuniverse	us/static/stan/GraphicsBuffersEtc	txt
08000E4C	FlushLCDControl DON'T CALL THIS YOURSELF (called on VBlank); Does magic	{J}
08000E9C	FlushLCDControl DON'T CALL THIS YOURSELF (called on VBlank); Does magic	{U}
08000EF4	GetBackgroundControlBufferPtr	{J}
08000F44	GetBackgroundControlBufferPtr	{U}
08000F3C	GetBackgroundTileDataOffset	{J}
08000F8C	GetBackgroundTileDataOffset	{U}
08000F8C	SetBackgroundTileDataOffset	{J}
08000FDC	SetBackgroundTileDataOffset	{U}
08000FB4	SetBackgroundMapDataOffset	{J}
08001004	SetBackgroundMapDataOffset	{U}
08000FFC	SetBackgroundScreenSize	{J}
0800104C	SetBackgroundScreenSize	{U}
08001448	SetupBackgroundPosition	void	r0=BG Index	r1=x	r2=y	{J}
0800148C	SetupBackgroundPosition	void	r0=BG Index	r1=x	r2=y	{U}
080011D0	FillBGMap	Fills BG Map with given value	void	r0=BG Map (Buffer) Pointer	r1=value (word)	{J}
08001220	FillBGMap	Fills BG Map with given value	void	r0=BG Map (Buffer) Pointer	r1=value (word)	{U}

08001BC0	GetBGMapBuffer Gets BG Map Buffer for given BG	BG Map Buffer pointer	r0=BG Index	{J}
08001C4C	GetBGMapBuffer Gets BG Map Buffer for given BG	BG Map Buffer pointer	r0=BG Index	{U}
08001EFC	EnableBackgroundByMask Sets BGs to be updated (Will not unset others)	void	r0=BG Mask (see 0300080D)	{J}
08001FAC	EnableBackgroundByMask Sets BGs to be updated (Will not unset others)	void	r0=BG Mask (see 0300080D)	{U}
08001F0C	EnableBackgroundById Sets BG to be updated	void	r0=BG Index	{J}
08001FBC	EnableBackgroundById Sets BG to be updated	void	r0=BG Index	{U}
080010FC	FlushBackgrounds DON'T CALL THIS YOURSELF (called on VBlank); Sends BG Maps to VRAM, and palettes to palette RAM	{J}
0800114C	FlushBackgrounds DON'T CALL THIS YOURSELF (called on VBlank); Sends BG Maps to VRAM, and palettes to palette RAM	{U}
08001F30	ClearTileRigistry Clears array	{J}
08001FE0	ClearTileRigistry Clears array	{U}
08001F64	RegisterTileGraphics Adds an entry to array	void	r0=Source gfx (uncompressed!)	r1=Destination pointer	r2=size (bytes)	{J}
08002014	RegisterTileGraphics Adds an entry to array	void	r0=Source gfx (uncompressed!)	r1=Destination pointer	r2=size (bytes)	{U}
08001FA4	RegisterFillTile Adds an entry to array (fill mode); Used mostly to clear tiles	void	r0=*word* to fill with	r1=Destination pointer	r2=size (bytes)	{J}
08002054	RegisterFillTile Adds an entry to array (fill mode); Used mostly to clear tiles	void	r0=*word* to fill with	r1=Destination pointer	r2=size (bytes)	{U}
080011F0	RegisterBlankTile	void	r0=Tile index	{J}
08001240	RegisterBlankTile	void	r0=Tile index	{U}
08001FD8	FlushTiles	DON'T CALL THIS YOURSELF (called on VBlank); Sends tile data to VRAM/wherever you told it to	{J}
08002088	FlushTiles	DON'T CALL THIS YOURSELF (called on VBlank); Sends tile data to VRAM/wherever you told it to	{U}

@IORegisters@00	short	To 04000000 (DISPCNT / LCD Control)
@IORegisters@04	short	To 04000004 (DISPSTAT/ General LCD Status)
@IORegisters@0C	short	To 04000008 (BG0CNT / BG0 Control)
@IORegisters@10	short	To 0400000A (BG1CNT / BG1 Control)
@IORegisters@14	short	To 0400000C (BG2CNT / BG2 Control)
@IORegisters@18	short	To 0400000E (BG3CNT / BG3 Control)
@IORegisters@1C	vec2*	To 04000010 (BG0HOFS / BG0 X-Offset; BG0VOFS  / BG0 Y-Offset)
@IORegisters@20	vec2 	To 04000014 (BG1HOFS / BG1 X-Offset; BG1VOFS  / BG1 Y-Offset)
@IORegisters@24	vec2 	To 04000018 (BG2HOFS / BG2 X-Offset; BG2VOFS  / BG2 Y-Offset)
@IORegisters@28	vec2 	To 0400001C (BG3HOFS / BG3 X-Offset; BG3VOFS  / BG3 Y-Offset)
@IORegisters@2C	short	To 04000040 (WIN0H / Window 0 Horizontal Dimensions)
@IORegisters@2E	short	To 04000042 (WIN1H / Window 1 Horizontal Dimensions)
@IORegisters@30	short	To 04000044 (WIN0V / Window 0 Vertical Dimensions)
@IORegisters@32	short	To 04000046 (WIN1V / Window 1 Vertical Dimensions)
@IORegisters@34	short	To 04000048 (WININ / Inside of Window 0 and 1)
@IORegisters@36	short	To 0400004A (WINOUT / Inside of OBJ Window & Outside of Windows)
@IORegisters@38	short	To 0400004C (MOSAIC / Mosaic Size)
@IORegisters@3C	short	To 04000050 (BLDCNT / Color Special Effects Selection)
@IORegisters@44	short	To 04000052 (BLDALPHA / Alpha Blending Coefficients)
@IORegisters@46	short	To 04000054 (BLDY / Brightness (Fade-In/Out) Coefficient)
@IORegisters@48	short	To 04000020 (BG2PA / BG2 Rotation/Scaling Parameter A (dx))
@IORegisters@4A	short	To 04000022 (BG2PB / BG2 Rotation/Scaling Parameter B (dmx))
@IORegisters@4C	short	To 04000024 (BG2PC / BG2 Rotation/Scaling Parameter C (dy))
@IORegisters@4E	short	To 04000026 (BG2PD / BG2 Rotation/Scaling Parameter D (dmy))
@IORegisters@50	word 	To 04000028 (BG2X / BG2 Reference Point X-Coordinate)
@IORegisters@54	word 	To 0400002C (BG2Y / BG2 Reference Point Y-Coordinate)
@IORegisters@58	short	To 04000030 (BG3PA / BG3 Rotation/Scaling Parameter A (dx))
@IORegisters@5A	short	To 04000032 (BG3PB / BG3 Rotation/Scaling Parameter B (dmx))
@IORegisters@5C	short	To 04000034 (BG3PC / BG3 Rotation/Scaling Parameter C (dy))
@IORegisters@5E	short	To 04000036 (BG3PD / BG3 Rotation/Scaling Parameter D (dmy))
@IORegisters@60	word 	To 04000038 (BG3X / BG3 Reference Point X-Coordinate)
@IORegisters@64	word 	To 0400003C (BG3Y / BG3 Reference Point Y-Coordinate)

03003080	@IORegisters	IORegisters	{U}
03003020	@IORegisters	IORegisters	{J}

02022CA8	BG0 Map Buffer	{U}
02022CA8	BG0 Map Buffer	{J}
020234A8	BG1 Map Buffer	{U}
020234A8	BG1 Map Buffer	{J}
02023CA8	BG2 Map Buffer	{U}
02023CA8	BG2 Map Buffer	{J}
020244A8	BG3 Map Buffer	{U}
020244A8	BG3 Map Buffer	{J}
0300000D	BG Update Flag 		bit 0 | (bool) BG0 Map to be updated	bit 1 | (bool) BG1 Map to be updated	bit 2 | (bool) BG2 Map to be updated	bit 3 | (bool) BG3 Map to be updated	{U}
0300000C	BG Update Flag 		bit 0 | (bool) BG0 Map to be updated	bit 1 | (bool) BG1 Map to be updated	bit 2 | (bool) BG2 Map to be updated	bit 3 | (bool) BG3 Map to be updated	{J}

@TileRegistry@00	word	source pointer / fill value
@TileRegistry@04	word	destination (VRAM) pointer
@TileRegistry@08	short	size of graphics (bytes)
@TileRegistry@0A	short	mode?	is 0 when size isn't a multiple of 0x20, is 2 for fill (not copy)
02024CDC	@TileRegistry@[20]	TileRegistries	{U}
02024CDC	@TileRegistry@[20]	TileRegistries	{J}

020228A8	palette buffer	{U}
020228A8	palette buffer	{J}

0300000E	flag palette RAM needs to be updated	is a byte (bool) that tells game	{U}
0300000D	flag palette RAM needs to be updated	is a byte (bool) that tells game	{J}
030030E8	byte that contains a color value difference	Essentially, when non null, it will map *all* colors in *all* palettes following way	(r, g, b) => (r + x, g + x, b + x); With values being kept in [0, 31] range of course,It's probably used for fading in/out	{U}

03003140	whole OAM buffer	{U}
03000020	pointer to start of secondary buffer	{U}
03000024	pointer to target VRAM/OAM for secondary buffer	{U}
03000028	starting index for secondary OAM (aka primary OAM size) (seems to be never read?)	{U}
0300002A	size (in number of entries) of secondary OAM buffer (0x80 - start)	{U}
03000030	pointer to start of primary buffer (0x03003140)	{U}
03000034	pointer to target VRAM/OAM for primary buffer (0x07000000)	{U}
03000038	starting index for primary OAM (0) (seems to be never read?)	{U}
0300003A	size (in number of entries) of primary OAM buffer (can be 0!)	{U}
03003070	pointer to next free entry in primary OAM buffer	(can overflow into secondary!)	{U}
03003744	pointer to next free entry in secondary OAM buffer	(can overflow into unsafe memory!)	{U}
03004158	pointer for writing Rotation/Scale data to OAM buffer	(only used by AIS afaik)	{U}
0300312C	current Rotation/Scale data index(type:short)	(used in conjonction with above)	{U}

0800217C	FlushPrimaryOAM	DON'T CALL THIS YOURSELF (called on VBlank); Sends primary OAM buffer data to actual OAM	{U}
08002138	FlushSecondaryOAM	DON'T CALL THIS YOURSELF (called on VBlank); Sends secondary OAM buffer data to actual OAM	{U}
08002BCC	PushToPrimaryOAM	Pushes data to primary OAM	   Actually calls routine stored in IWRAM (pointed by 03004154, originally at 08000534, ARM)	r0=base x coord	r1=base y coord	r2=pointer to OAM Data	r3=base OAM2 (tile/palette index)	{U}
08002BB8	PushToSecondaryOAM	Pushes data to secondary OAM	Actually calls routine stored in IWRAM (pointed by 03003130, originally at 08000494, ARM)	r0=base x coord	r1=base y coord	r2=pointer to OAM Data	r3=base OAM2 (tile/palette index)	{U}
080021B0	WriteOAMRotScaleData	Writes Rotation/Scale data for a fixed index	r0=index	r1=PA	r2=PB	r3=PC	[sp+0]=PD	{U}
080020FC	SetupOAMBufferSplice	Sets up OAM buffers	r0=Size (in number of entries) of Primary buffer	{U}


030030E0	whole OAM buffer	{J}
03000018	pointer to start of secondary buffer	{J}
03000028	pointer to start of primary buffer	{J}
03003010	pointer to next free entry in primary OAM buffer	(can overflow into secondary!)	{J}
030036E4	pointer to next free entry in secondary OAM buffer	(can overflow into unsafe memory!)	{J}
030040F8	pointer for writing Rotation/Scale data to OAM buffer	(only used by AIS afaik)	{J}
030030CC	current Rotation/Scale data index(type:short)	(used in conjonction with above)	{J}

080020CC	FlushPrimaryOAM	DON'T CALL THIS YOURSELF (called on VBlank); Sends primary OAM buffer data to actual OAM	{J}
08002088	FlushSecondaryOAM	DON'T CALL THIS YOURSELF (called on VBlank); Sends secondary OAM buffer data to actual OAM	{J}
08002B1C	PushToPrimaryOAM	Pushes data to primary OAM	   Actually calls routine stored in IWRAM (pointed by 03004154, originally at 08000534, ARM)	r0=base x coord	r1=base y coord	r2=pointer to OAM Data	r3=base OAM2 (tile/palette index)	{J}
08002B08	PushToSecondaryOAM	Pushes data to secondary OAM	Actually calls routine stored in IWRAM (pointed by 03003130, originally at 08000494, ARM)	r0=base x coord	r1=base y coord	r2=pointer to OAM Data	r3=base OAM2 (tile/palette index)	{J}
08002100	WriteOAMRotScaleData	Writes Rotation/Scale data for a fixed index	r0=index	r1=PA	r2=PB	r3=PC	[sp+0]=PD	{J}
0800204C	SetupOAMBufferSplice	Sets up OAM buffers	r0=Size (in number of entries) of Primary buffer	{J}


@IntermediateOAMEntry@00	word	Next Entry	(yes this is linked list)
@IntermediateOAMEntry@04	short	base x coordinate
@IntermediateOAMEntry@06	short	base y coordinate
@IntermediateOAMEntry@08	short	base OAM2 data	(tile index & palette index)
@IntermediateOAMEntry@0C	word	pointer to ROM OAM Data	(see above, "Object Attributes (raw buffers)" section)
02029D8C	@IntermediateOAMEntry@[40]	oam	{U}
0202A58C	@IntermediateOAMEntry@[F]	oam root node	{U}

02029D88	@IntermediateOAMEntry@[40]	oam	{J}
0202A588	@IntermediateOAMEntry@[F]	oam root node	{J}

08005458	FlushIntermediateOAMBuffer	DON'T CALL THIS YOURSELF (called in main loop); push to secondary raw OAM buffer	{U}
08005428	RegisterObject	(ye idk names anymore) Registers object attributes to intermediate buffers	r0=root node index	r1=base x coord	r2=base y coord	r3=ROM OAM Data pointer	[sp+0]=base OAM2 data	{U}
080053E8	RegisterObjectSafe	I don't see any difference with above, except that x & y are truncated properly (it's "Safe")	r0=root node index	r1=base x coord	r2=base y coord	r3=ROM OAM Data pointer	[sp+0]=base OAM2 data	{U}
080053A4	ClearIntermediateOAMBuffer	DON'T CALL THIS YOURSELF (called in main loop); resets buffers	{U}


08005360	FlushIntermediateOAMBuffer	DON'T CALL THIS YOURSELF (called in main loop); push to secondary raw OAM buffer	{J}
08005330	RegisterObject	(ye idk names anymore) Registers object attributes to intermediate buffers	r0=root node index	r1=base x coord	r2=base y coord	r3=ROM OAM Data pointer	[sp+0]=base OAM2 data	{J}
080052F0	RegisterObjectSafe	I don't see any difference with above, except that x & y are truncated properly (it's "Safe")	r0=root node index	r1=base x coord	r2=base y coord	r3=ROM OAM Data pointer	[sp+0]=base OAM2 data	{J}
080052AC	ClearIntermediateOAMBuffer	DON'T CALL THIS YOURSELF (called in main loop); resets buffers	{J}


//DEBUG STUFF NOTES	txt
0801C090	Debug Startup routine	following EA code will replace standard one	{U}
0801BD20	Debug Startup routine	following EA code will replace standard one	{J}

0800378C	Loads Debug Font (BG)	r0=BG Index (2)	r1=Tile Offset(0 for default)	{U}
080036D8	Loads Debug Font (BG)	r0=BG Index (2)	r1=Tile Offset(0 for default)	{J}
08003804	Displays String to BG	r0=Output Tile Root	r1=String pointer	{U}
08003750	Displays String to BG	r0=Output Tile Root	r1=String pointer	{J}
0800394C	Prints Dec Number to DBG	r0=Number	r1=Digit count to display	{U}
08003898	Prints Dec Number to DBG	r0=Number	r1=Digit count to display	{J}
080039B4	Prints Hex Number to DBG	r0=Number	r1=Digit count to display	{U}
08003900	Prints Hex Number to DBG	r0=Number	r1=Digit count to display	{J}
080039D0	Prints String to DBG	r0=String pointer(will understand newlines!)	{U}
0800391C	Prints String to DBG	r0=String pointer(will understand newlines!)	{J}
08003A3C	Displays DBG text on BG2	{U}
08003988	Displays DBG text on BG2	{J}
08003ABC	Displaus DBG text on BG2 and handles V-Scroll	r0=current key presses	r1=new key presses	{U}
08003A08	Displaus DBG text on BG2 and handles V-Scroll	r0=current key presses	r1=new key presses	{J}
08003B24	Loads Debug Font (OBJ)	r0=OBJ Tile Offset (negative => default)	r1=OBJ Palette Index	{U}
08003A70	Loads Debug Font (OBJ)	r0=OBJ Tile Offset (negative => default)	r1=OBJ Palette Index	{J}
08003BB0	Prints String as OBJ	r0=x	r1=y	r2=String pointer	{U}
08003AFC	Prints String as OBJ	r0=x	r1=y	r2=String pointer	{J}
08003BFC	Prints Dec Number as OBJ	r0=x	r1=y	r2=Number	r3=Digit count to display	{U}
08003B48	Prints Dec Number as OBJ	r0=x	r1=y	r2=Number	r3=Digit count to display	{J}
08003C20	Prints Hex Number as OBJ	r0=x	r1=y	r2=Number	r3=Digit count to display	{U}
08003B6C	Prints Hex Number as OBJ	r0=x	r1=y	r2=Number	r3=Digit count to display	{J}
08003C44	Another Print idk	{U}


//BWLEntry	txt
080A481C	BWL_AddTilesMoved	r0=Char Id	r1=Tiles moved	{U}
080A9260	BWL_AddTilesMoved	r0=Char Id	r1=Tiles moved	{J}
080A4A34	BWL_AddFavoritismValue	r0=Char Id	r1=Value	{U}
080A9478	BWL_AddFavoritismValue	r0=Char Id	r1=Value	{J}


//6CNotes	txt
@6CStructHeader@00	word	Pointer to start of code	(I used to misrefer this as "struct type")
@6CStructHeader@04	word	Pointer to code cursor
@6CStructHeader@08	word	Pointer to Destructor routine	(called when struct is destroyed)
@6CStructHeader@0C	word	Pointer to Loop Routine	(this is called instead of code when it is not null)
@6CStructHeader@10	word	Pointer to name	(Probably for debug purpose	 Still set in FE8	 /!\ Never cleared)
@6CStructHeader@14	word	Pointer to Parent 6C	(If Struct is Main 6C, Main 6C Array Index instead)
@6CStructHeader@18	word	Pointer to First Child Struct (0 if none)
@6CStructHeader@1C	word	Pointer to Previous Struct (0 if first)
@6CStructHeader@20	word	Pointer to Next Struct (0 if last)
@6CStructHeader@24	short	Sleep Timer	(each call to sleep loop decrements it, sleep loop will clear itself when this reaches 0)
@6CStructHeader@26	byte	Mark	(Code 000F stores sarg to this byte, used by various routines)
@6CStructHeader@27	byte	Some kind of bitfield	(see below for known bits)
@6CStructHeader@28	byte	Block Counter (Won't exec self if not 0)
@6CStructHeader@2C	word	userspace0
@6CStructHeader@30	word	userspace1
@6CStructHeader@34	word	userspace2
@6CStructHeader@38	word	userspace3
@6CStructHeader@3C	word	userspace4
@6CStructHeader@40	word	userspace5
@6CStructHeader@44	word	userspace6
@6CStructHeader@48	word	userspace7
@6CStructHeader@4C	word	userspace8
@6CStructHeader@50	word	userspace9
@6CStructHeader@54	word	userspace10
@6CStructHeader@58	word	userspace11
@6CStructHeader@5C	word	userspace12
@6CStructHeader@60	word	userspace13
@6CStructHeader@64	word	userspace14
@6CStructHeader@68	word	userspace15

08002E84	Exec6C Routine Locations	Arguments: r0 = Struct Pointer; Returns: nothing	{U}
08002DD4	Exec6C Routine Locations	Arguments: r0 = Struct Pointer; Returns: nothing	{J}
08002E88	Exec6C Routine Locations(wraps)	{U}
08002DD8	Exec6C Routine Locations(wraps)	{J}

08003394	Run6CCode Routine Locations	r0=Struct Pointer; Returns: nothing	{U}
080032E0	Run6CCode Routine Locations	r0=Struct Pointer; Returns: nothing	{J}

080152F4	a main update routine 6C Exec Order	{U}
08015318	a main update routine 6C Exec Order	{J}


@6CPointer@0	word	pointer

02024E68	@6CStructHeader@[40]	ProcAllocList	{U}
02026968	@6CPointer@[40]	ProcAllocListHead	{U}
02026A6C	ProcAllocListHead	Pointer to next available slot in ProcAllocListHead table	{U}
02026A70	@6CPointer@[8]	ProcTreeRootArray	{U}

08002C08	Initialize6CEngine	{U}
08002C7C	New6C	{U}
08002CE0	NewBlocking6C	{U}
08002D10	Delete6CInternal	{U}
08002D6C	Delete6C	{U}
08002D84	Allocate6C	{U}
08002D94	Free6C	Wierd, but I assume it frees 6C (A:r0)	{U}
08002DA4	InsertMain6C	{U}
08002DC8	InsertChild6C	{U}
08002DE0	Isolate6C	{U}
08002E84	Exec6C (Wrapper)	{U}
08002E28	Exec6C	{U}
08002E94	Break6CLoop	{U}
08002E9C	Find6C	{U}
08002EC4	Find6CRunning	{U}
08002EF4	Find6CByMark	{U}
08002F24	Goto6CLabel	Sets 6C (A:r0) code cursor (field 0x04) to after first label (code 0x0B:sarg) matching argument (A:r1) (*)	{U}
08002F5C	Goto6CPointer	{U}
08002F64	Set6CMark	{U}
08002F6C	Set6CDestructor	{U}
08002F70	ForAll6C	Executes routine (A:r0) for each existing 6C (r0 passes 6C pointer)	{U}
08002F98	ForEach6C	Executes routine (A:r0) for each 6C whose code pointer matches argument (A:r1) (r0 passes 6C pointer)	{U}
08002FC0	ForEach6CMarked	Included for sake of completeness	 Doesn't seem to be ever used (at least in FE8U)	{U}
08002FEC	BlockEach6CMarked	{U}
08003014	UnblockEach6CMarked	{U}
08003040	DeleteEach6CMarked	{U}
0800306C	Delete6C (Wrapper)	{U}
08003078	DeleteEach6C	{U}
08003088	Clear6CLoopWrapper	{U}
08003094	ClearEach6CLoop	{U}
080030A4	ForAll6CFollowing	{U}


02024E68	@6CStructHeader@[40]	ProcAllocList	{J}
02026968	@6CPointer@[40]	ProcAllocListHead	{J}
02026A6C	ProcAllocListHead	Pointer to next available slot in ProcAllocListHead table	{J}
02026A70	@6CPointer@[8]	ProcTreeRootArray	{J}

08002B58	Initialize6CEngine	{J}
08002BCC	New6C	{J}
08002C30	NewBlocking6C	{J}
08002C60	Delete6CInternal	{J}
08002CBC	Delete6C	{J}
08002CD4	Allocate6C	{J}
08002CE4	Free6C	Wierd, but I assume it frees 6C (A:r0)	{J}
08002CF4	InsertMain6C	{J}
08002D18	InsertChild6C	{J}
08002D30	Isolate6C	{J}
08002DD4	Exec6C (Wrapper)	{J}
08002D78	Exec6C	{J}
08002DE4	Break6CLoop	{J}
08002DEC	Find6C	{J}
08002E14	Find6CRunning	{J}
08002E44	Find6CByMark	{J}
08002E74	Goto6CLabel	Sets 6C (A:r0) code cursor (field 0x04) to after first label (code 0x0B:sarg) matching argument (A:r1) (*)	{J}
08002EAC	Goto6CPointer	{J}
08002EB4	Set6CMark	{J}
08002EBC	Set6CDestructor	{J}
08002EC0	ForAll6C	Executes routine (A:r0) for each existing 6C (r0 passes 6C pointer)	{J}
08002EE8	ForEach6C	Executes routine (A:r0) for each 6C whose code pointer matches argument (A:r1) (r0 passes 6C pointer)	{J}
08002F10	ForEach6CMarked	Included for sake of completeness	 Doesn't seem to be ever used (at least in FE8U)	{J}
08002F3C	BlockEach6CMarked	{J}
08002F64)	UnblockEach6CMarked	{J}
08002F90	DeleteEach6CMarked	{J}
08002FBC	Delete6C	{J}
08002FC8	DeleteEach6C	{J}
08002FD8	Clear6CLoopWrapper	{J}
08002FE4	ClearEach6CLoop	{J}
08002FF4	ForAll6CFollowing	{J}


//https://doc	feuniverse	us/static/stan/HiddenMapFlags	txt
0202E4EC	maps to each tile a set of flags	&0x01 <=> A unit is hidden here	&0x02 <=> A trap is hidden here?	{U}
0202E4E8	maps to each tile a set of flags	&0x01 <=> A unit is hidden here	&0x02 <=> A trap is hidden here?	{J}

//https://doc	feuniverse	us/static/stan/HardcodedChecks	txt
08078D6C	Hardcoded Class checks for lots of stuff	{U}
08078D86	Hardcoded Class checks for lots of stuff	{U}
080347D4	Hardcoded Class check for Demon King & Manakete2	{U}
08034810	Hardcoded Class check for Demon King & Manakete2	{U}
080180CC	Gorgon Egg Checks	{U}
080183FC	Phantom Check	{U}
0802A730	Item checks for Magic Swords(SetupBattleWeaponData)	{U}
0802A872	Item checks for Magic Swords	{U}
08016B8C	IsItemCoveringRange	Item Table is read directly for range	{U}
0802AABC	Hardcoded check for legendary weapons(BattleLoadAttack)	{U}
0802AB18	Hardcoded check for legendary weapons	{U}
0802B62C	Donkey Kong Check (Item HP Halving & Poison)	{U}
080812D8	Dancer Class Id Check	{U}

0807B180	Hardcoded Class checks for lots of stuff	{J}
0807B19A	Hardcoded Class checks for lots of stuff	{J}
080346DC	Hardcoded Class check for Demon King & Manakete2	{J}
08034718	Hardcoded Class check for Demon King & Manakete2	{J}
08017DE8	Gorgon Egg Checks	{J}
08018110	Phantom Check	{J}
0802A69C	Item checks for Magic Swords(SetupBattleWeaponData)	{J}
0802A7DE	Item checks for Magic Swords	{J}
08016934	IsItemCoveringRange	Item Table is read directly for range	{J}
0802AA28	Hardcoded check for legendary weapons(BattleLoadAttack)	{J}
0802AA88	Hardcoded check for legendary weapons	{J}
0802B580	Donkey Kong Check (Item HP Halving & Poison)	{J}
08083618	Dancer Class Id Check	{J}
0802FFAC	Read map tile animation	{J}
0803005C	Read map tile animation	{U}
0802FFF4	Read Map Tile Animation 2 (Palette Animation)		{J}
080300A4	Read Map Tile Animation 2 (Palette Animation)		{U}
0203E188	RAM pointer to unit data to attacker (0203a568(Left) or 0203a4e8(Right))	{J}
0203E18C	RAM pointer to unit data to attacker (0203A56C(Left) or 0203A4EC(Right))	{U}
0203E184	RAM pointer to unit data to defenser (0203a568(Left) or 0203a4e8(Right))	{J}
0203E188	RAM pointer to unit data to defenser (0203A56C(Left) or 0203A4EC(Right))	{U}

@BattleUnit@00	@Unit	CopyUnit
@BattleUnit@48	short	weapon
@BattleUnit@4A	short	weaponBefore
@BattleUnit@4C	word	weaponAttributes
@BattleUnit@50	byte	weaponType
@BattleUnit@51	byte	weaponSlotIndex
@BattleUnit@52	byte	canCounter
@BattleUnit@53	byte	wTriangleHitBonus
@BattleUnit@54	byte	wTriangleDmgBonus
@BattleUnit@55	byte	terrainId
@BattleUnit@56	byte	terrainDefense
@BattleUnit@57	byte	terrainAvoid
@BattleUnit@58	byte	terrainResistance
@BattleUnit@59	byte	pad59
@BattleUnit@5a	short	battleAttack
@BattleUnit@5c	short	battleDefense
@BattleUnit@5e	short	battleSpeed
@BattleUnit@60	short	battleHitRate
@BattleUnit@62	short	battleAvoidRate
@BattleUnit@64	short	battleEffectiveHitRate
@BattleUnit@66	short	battleCritRate
@BattleUnit@68	short	battleDodgeRate
@BattleUnit@6a	short	battleEffectiveCritRate
@BattleUnit@6c	short	battleSilencerRate
@BattleUnit@6e	byte	expGain
@BattleUnit@6f	byte	statusOut
@BattleUnit@70	byte	levelPrevious
@BattleUnit@71	byte	expPrevious
@BattleUnit@72	byte	hpInitial
@BattleUnit@73	byte	changeHP
@BattleUnit@74	byte	changePow
@BattleUnit@75	byte	changeSkl
@BattleUnit@76	byte	changeSpd
@BattleUnit@77	byte	changeDef
@BattleUnit@78	byte	changeRes
@BattleUnit@79	byte	changeLck
@BattleUnit@7a	byte	changeCon
@BattleUnit@7b	byte	wexpMultiplier
@BattleUnit@7c	byte	nonZeroDamage
@BattleUnit@7d	byte	weaponBroke
@BattleUnit@7e	byte	hasItemEffectTarget
@BattleUnit@7f	byte	pad7f

0203a4e8	@BattleUnit	gBattleActor	Copy unit data of Right	{J}
0203A4EC	@BattleUnit	gBattleActor	Copy unit data of Right	{U}
0203a568	@BattleUnit	gBattleTarget	Copy unit data of Left	{J}
0203A56C	@BattleUnit	gBattleTarget	Copy unit data of Left	{U}

//Circles\ASM\Modular Stat Screens\mss_defs	s
080870BC	Stat Screens DrawBar	{U}
08089354	Stat Screens DrawBar	{J}
02003c2c	Stat Screens TileBufferBase	{U}
//none
08018A58	Stat Screens MagCheck	{U}
0801876C	Stat Screens MagCheck	{J}
080036BC	Stat Screens DrawIcon	{U}
08003608	Stat Screens DrawIcon	{J}
080193E8	Stat Screens WriteTrvText	{U}
080190C0	Stat Screens WriteTrvText	{J}
08019414	Stat Screens WriteStatusText	{U}
080190EC	Stat Screens WriteStatusText	{J}
08004480	Stat Screens AppendText	{U}
080043B8	Stat Screens AppendText	{J}
080286BC	Stat Screens AffinityGetter	{U}
08028650	Stat Screens AffinityGetter	{J}
08016B28	Stat Screens EquippedWeaponGetter	{U}
080168D0	Stat Screens EquippedWeaponGetter	{J}
08086FAC	Stat Screens DrawBWLNumbers	{U}
08089A00	Stat Screens DrawWeaponRank	{J}
08087788	Stat Screens DrawWeaponRank	{U}
08089910	Stat Screens DrawSupports	{J}
08087698	Stat Screens DrawSupports	{U}
02003BFC	Stat Screens StatScreenStruct	{U}
02003BFC	Stat Screens StatScreenStruct	{J}
02003c94	Stat Screens tile_origin	{U}
//none






0806EFB8	Battle animation scriptC26 (throw shield) / C27 (throw sword) command judgment	{J}
0806CC94	Battle animation scriptC26 (throw shield) / C27 (throw sword) command judgment	{U}
080564F0	PrepAIS	Special movement of tiles Called from C26 / C27	r0=ParentProcs	r1=FrameDataMeleeLeft	r2=FrameDataMeleeRight	r3=FrameDataRangedLeft	[sp+0]=FrameDataRangedRight	{J}
08055554	PrepAIS	Special movement of tiles Called from C26 / C27	r0=ParentProcs	r1=FrameDataMeleeLeft	r2=FrameDataMeleeRight	r3=FrameDataRangedLeft	[sp+0]=FrameDataRangedRight	{U}
081B16E0	:081B1878	Japanese notation of terrain	{J}
081B1878	:081B258C	Terrain and character names are entered in ASCII	{J}
081B2C80	:081B2D84	String of MAPIDNot used	{J}
081C1D28	:081C1EC0	Japanese notation of terrain	{U}
081C1EC0	:081C2BD4	terrain and name of character are entered in ASCII	{U}
081C2BD4	:081C32C8	staff role is entered in ASCIINot used	{U}
081C32C8	:081C33CC	String of MAPIDNot used	{U}
08A5A720	:08A5A75C	Tutorial Pointer Introduction	{J}
08A613E8	:08A61960	Introduction of an event called from tutorial	{J}
08A5A884	:08A5A8BC	Tutorial pointer 1 chapter	{J}
08A61DD4	:08A623BC	Events called from tutorial 1 chapter	{J}
08A5A9DC	:08A5AA54	Tutorial pointer 2	{J}
08A6293C	:08A63288	Events called from tutorial Chapter 2	{J}
089E85FC	:089E8638	Tutorial Pointer Introduction	{U}
089E8760	:089E8798	Introduction of an event called from tutorial	{U}
089EF2B0	:089EF828	Tutorial pointer 1 chapter	{U}
089EFC9C	:089F0284	Events called from tutorial 1 chapter	{U}
089E88B8	:089E8930	Tutorial pointer 2	{U}
089F0808	:089F1154	Events called from tutorial Chapter 2	{U}
0802AB1C	Avoid ratea formula	{J}
0802ABAC	Avoid ratea formula	{U}
08004EB4	Parsing battle animation frame data	{J}
08004FAC	Parsing battle animation frame data	{U}
0804E884	ClearBG0BG1	{U}
0804F610	ClearBG0BG1	{J}
0804EB68	LoadNewUIGraphics	{U}
0804F8F4	LoadNewUIGraphics	{J}
0800D1F8	SetEventSlotC	{U}
0800D4BC	SetEventSlotC	{J}
080d4f0C	Sound effect playback (discovered when tracking sound effects playback)	{J}
080D0214	Sound effect playback (discovered when tracking sound effects playback)	{U}
0803144c	Base address of transporter	{J}
08031500	Base address of transporter	{U}
08016848	DrawItemMenuCommand	Drawing a sale item column in a store	{U}
080165F0	DrawItemMenuCommand	Drawing a sale item column in a store	{J}
0802e42c	Obtain address of designated map change	r0=Map Change Id	{J}
080B3984	Show list of songs in sound room	{J}
080AED64	Show list of songs in sound room	{U}
08058E44	Get indirect effect animation of weapons	{J}
08057FF8	Get indirect effect animation of weapons	{U}
0808E688	Routine to display BAD status statusStatusTextWriter	{J}
0808C388	Routine to display BAD status statusStatusTextWriter	{U}

080D6360	_malloc_unlock_14	{J}
080D6AA0	_sbprintf	{J}
080D7A88	cvt	{J}
080D7B7C	exponent	{J}
080D9204	_localeconv_r	{J}
080D1668	_malloc_unlock_14	{U}
080D1CFC	sprintf	{U}
080D1E30	_sbprintf	{U}
080D2E18	cvt	{U}
080D2F0C	exponent	{U}
080D45C8	_localeconv_r	{U}

@ROMTCS@00	short	Relative Offset to Frame Data Ref Array
@ROMTCS@02	short	Relative Offset to Anim Data Ref Array
	
@ROMTCSRefArrays@00	short	Arrays of shorts that are relative offsets (relative *to array*) to relevant data
@ROMTCSAnimData@00	short	cycle time of this anim frame
@ROMTCSAnimData@02	short	data	if (cycle time is non 0){ Frame index of this anim frame}else{ 0 = Error, 1 = End/Free Anim/TCS, FFFF = Loop back to start of Anim, other = same as with std cycle }

@ROMTCSFrameData@00	short	alpha
@ROMTCSFrameData@02	short	xScale
@ROMTCSFrameData@04	short	yScale

@APHandle@00	&ROMTCS	Pointer to ROMTCS
@APHandle@04	&ROMTCSFrameData	Pointer to Frame Data Ref (from ROMTCS)
@APHandle@08	&ROMTCSAnimData	Pointer to Current Anim Data (Start, where you go back on loop)
@APHandle@0C	&ROMTCSAnimData	Pointer to Current Anim Data (Cursor)
@APHandle@10	&ROMTCSFrameData	Pointer to Current Frame/OAM Data
@APHandle@14	pointer	Pointer Current Rot/Scale Data
@APHandle@18	short	Cycle Timer
@APHandle@1A	short	Cycle Time Step (0x100 is one frame)
@APHandle@1C	short	Sub frame time offset or something
@APHandle@1E	short	OAM Index?
@APHandle@20	byte	bool defining whether gfx needs update
@APHandle@21	byte	Rotation/Scale OAM Index
@APHandle@22	short	OAM Extra Data (Tile Index Root & OAM2 Stuff)
@APHandle@24	pointer	Gfx Pointer

03000108	@APHandle	gApPool	{U}
03000100	@APHandle	gApPool	{J}

//AISStruct
@AnimationInterpreter@00	short	state
@AnimationInterpreter@02	short	xPosition
@AnimationInterpreter@04	short	yPosition
@AnimationInterpreter@06	short	delayTimer
@AnimationInterpreter@08	short	oam2base
@AnimationInterpreter@0a	short	drawLayerPriority
@AnimationInterpreter@0c	short	state2
@AnimationInterpreter@0e	short	nextRoundId
@AnimationInterpreter@10	short	state3
@AnimationInterpreter@12	byte	currentRoundType
@AnimationInterpreter@13	byte	frameIndex
@AnimationInterpreter@14	byte	queuedCommandCount
@AnimationInterpreter@15	byte	commandQueue
@AnimationInterpreter@20	word	pCurrentFrame
@AnimationInterpreter@24	word	pStartFrame
@AnimationInterpreter@28	word	pUnknown28
@AnimationInterpreter@2c	word	pUnknown2C
@AnimationInterpreter@30	word	pStartObjData
@AnimationInterpreter@34	&AnimationInterpreter	pPrev
@AnimationInterpreter@38	&AnimationInterpreter	pNext
@AnimationInterpreter@40	&AnimationInterpreter	pUnknown40
@AnimationInterpreter@44	&AnimationInterpreter	pUnknown44

@WaveData@00	short	type
@WaveData@02	short	status
@WaveData@04	word	freq
@WaveData@08	word	loopStart
@WaveData@0c	word	size
@WaveData@10	byte	data_array

@INSTRUMENT_TONEDATA@00	byte	type
@INSTRUMENT_TONEDATA@01	byte	key
@INSTRUMENT_TONEDATA@02	byte	length
@INSTRUMENT_TONEDATA@03	byte	pan_sweep
@INSTRUMENT_TONEDATA@04	&WaveData	wav
@INSTRUMENT_TONEDATA@0c	byte	attack
@INSTRUMENT_TONEDATA@0d	byte	decay
@INSTRUMENT_TONEDATA@0e	byte	sustain
@INSTRUMENT_TONEDATA@0f	byte	release

@SoundChannel@00	byte	status
@SoundChannel@01	byte	type
@SoundChannel@02	byte	rightVolume
@SoundChannel@03	byte	leftVolume
@SoundChannel@04	byte	attack
@SoundChannel@05	byte	decay
@SoundChannel@06	byte	sustain
@SoundChannel@07	byte	release
@SoundChannel@08	byte	ky
@SoundChannel@09	byte	ev
@SoundChannel@0a	byte	er
@SoundChannel@0b	byte	el
@SoundChannel@0c	byte	echoVolume
@SoundChannel@0d	byte	echoLength
@SoundChannel@0e	byte	d1
@SoundChannel@0f	byte	d2
@SoundChannel@10	byte	gt
@SoundChannel@11	byte	mk
@SoundChannel@12	byte	ve
@SoundChannel@13	byte	pr
@SoundChannel@14	byte	rp
@SoundChannel@15	byte	d3_0
@SoundChannel@16	byte	d3_1
@SoundChannel@17	byte	d3_2
@SoundChannel@18	word	ct
@SoundChannel@1C	word	fw
@SoundChannel@20	word	freq
@SoundChannel@24	&WaveData	wav
@SoundChannel@28	word	cp
@SoundChannel@2c	&MusicPlayerTrack track
@SoundChannel@30	word	pp
@SoundChannel@34	word	np
@SoundChannel@38	word	d4
@SoundChannel@3C	word	xpi
@SoundChannel@40	word	xpc

@MusicPlayerTrack@00	byte	flags
@MusicPlayerTrack@01	byte	wait
@MusicPlayerTrack@02	byte	patternLevel
@MusicPlayerTrack@03	byte	repN
@MusicPlayerTrack@04	byte	gateTime
@MusicPlayerTrack@05	byte	key
@MusicPlayerTrack@06	byte	velocity
@MusicPlayerTrack@07	byte	runningStatus
@MusicPlayerTrack@08	byte	keyM
@MusicPlayerTrack@09	byte	pitM
@MusicPlayerTrack@0a	byte	keyShift
@MusicPlayerTrack@0b	byte	keyShiftX
@MusicPlayerTrack@0c	byte	tune
@MusicPlayerTrack@0d	byte	pitX
@MusicPlayerTrack@0e	byte	bend
@MusicPlayerTrack@0f	byte	bendRange
@MusicPlayerTrack@10	byte	volMR
@MusicPlayerTrack@11	byte	volML
@MusicPlayerTrack@12	byte	vol
@MusicPlayerTrack@13	byte	volX
@MusicPlayerTrack@14	byte	pan
@MusicPlayerTrack@15	byte	panX
@MusicPlayerTrack@16	byte	modM
@MusicPlayerTrack@17	byte	mod
@MusicPlayerTrack@18	byte	modT
@MusicPlayerTrack@19	byte	lfoSpeed
@MusicPlayerTrack@1a	byte	lfoSpeedC
@MusicPlayerTrack@1b	byte	lfoDelay
@MusicPlayerTrack@1c	byte	lfoDelayC
@MusicPlayerTrack@1d	byte	priority
@MusicPlayerTrack@1e	byte	echoVolume
@MusicPlayerTrack@1f	byte	echoLength
@MusicPlayerTrack@20	&SoundChannel	chan
@MusicPlayerTrack@24	@INSTRUMENT_TONEDATA	instrument_tonedata
@MusicPlayerTrack@34	byte	_gap34
@MusicPlayerTrack@3a	short	_unk_3A
@MusicPlayerTrack@3c	short	_unk_3C
@MusicPlayerTrack@40	word	cmdPtr
@MusicPlayerTrack@44	byte	patternStack0
@MusicPlayerTrack@45	byte	patternStack1
@MusicPlayerTrack@46	byte	patternStack2
@MusicPlayerTrack@47	byte	_pad47

@SongHeader@00	byte	trackCount
@SongHeader@01	byte	blockCount
@SongHeader@02	byte	priority
@SongHeader@03	byte	reverb
@SongHeader@04	&INSTRUMENT_TONEDATA	instrument_tonedata
@SongHeader@08	byte	part_array

@MusicPlayerInfo@00	&SongHeader	songHeader
@MusicPlayerInfo@04	word	status
@MusicPlayerInfo@08	byte	trackCount
@MusicPlayerInfo@09	byte	priority
@MusicPlayerInfo@0a	byte	cmd
@MusicPlayerInfo@0b	byte	unk_B
@MusicPlayerInfo@0c	word	clock
@MusicPlayerInfo@10	byte	gap	//[8]
@MusicPlayerInfo@18	word	memAccAreaPtr
@MusicPlayerInfo@1c	short	tempoD
@MusicPlayerInfo@1e	short	tempoU
@MusicPlayerInfo@20	short	tempoI
@MusicPlayerInfo@22	short	tempoC
@MusicPlayerInfo@24	short	fadeOI
@MusicPlayerInfo@26	short	fadeOC
@MusicPlayerInfo@28	short	fadeOV
@MusicPlayerInfo@2a	short	_pad2A
@MusicPlayerInfo@2c	&MusicPlayerTrack	tracksArray
@MusicPlayerInfo@30	&INSTRUMENT_TONEDATA	instrument_tonedata
@MusicPlayerInfo@34	word	ident
@MusicPlayerInfo@38	word	func
@MusicPlayerInfo@3c	word	intp

@MusicPlayer@00	&MusicPlayerInfo	info
@MusicPlayer@04	&MusicPlayerTrack	track
@MusicPlayer@08	byte	_unk_8
@MusicPlayer@09	byte	_pad09
@MusicPlayer@0a	byte	_unk_A

@Song@00	&SongHeader	header
@Song@04	short	ms
@Song@06	short	me

03000008	Call blah and put value??	{U}
030000E8	render_info: for cutscenes		{U}
030000F0	When dialogue is displayed	{U}
030004E8	0xC slot of setval??	{U}
030004EC	indicates how many words are stored	 stored with SAVETOQUEUE		{U}
030004F0	Queue00 Stores word located at MemorySlot with SAVETOQUEUE		{U}
030004F4	Queue01 Stores word located at MemorySlot	{U}
030004F8	Queue02 Stores word located at MemorySlot	{U}
030004FC	Queue03 Stores word located at MemorySlot	{U}
03000500	Queue04 Stores word located at MemorySlot	{U}
03000504	Queue05 Stores word located at MemorySlot	{U}
03000508	Queue06 Stores word located at MemorySlot	{U}
0300050C	Queue07 Stores word located at MemorySlot	{U}
03000510	Queue08 Stores word located at MemorySlot(It is unknown how many are there	)	{U}
03000570	Allocated stack for event code branch returns	{U}
030005F0	&UNIT	PopUP Dialog 6C / pointer to relevant Unit Struct	{U}
030005F4	PopUP Dialog 6C / item short / weapon type index	{U}
030005F8	PopUP Dialog 6C / number word	{U}
02020140	Popup 6C pointers seem to be stored	{U}

030000E8	When dialogue is displayed	{J}
030004E4	indicates how many words are stored	 stored with SAVETOQUEUE		{J}
030004E8	Queue00 Stores word located at MemorySlot	stored with SAVETOQUEUE		{J}
030004EC	Queue01 Stores word located at MemorySlot		{J}
030004F0	Queue02 Stores word located at MemorySlot		{J}
030004F4	Queue03 Stores word located at MemorySlot		{J}
030005F8	Queue04 Stores word located at MemorySlot		{J}
030005FC	Queue05 Stores word located at MemorySlot		{J}
03000600	Queue06 Stores word located at MemorySlot		{J}
03000604	Queue07 Stores word located at MemorySlot		{J}
03000608	Queue08 Stores word located at MemorySlot	(It is unknown how many are there	)	{J}
0300060C	Allocated stack for event code branch returns	{J}
02020140	Popup 6C pointers seem to be stored	{J}


//Zane's Stuff\Doc\Master MMB Doc	txt
02024CA8	an array of 4 pointers (one for each BG) that contain where in VRAM will BG Maps be written to		{U}
0808CCC8	MMBSetup	This is main routine for setting up minimug box	 It determines where to put box and things on it		{U}
0202E4D8	BaseRowPointer	This is part of a system for getting elements on map	  It begins with two shorts that go 0xXX 0xXX 0xYY 0xYY  followed by a pointer to first 'row pointer'	 	set value above is this pointer to first row pointer	 I think an example would demonstrate better		{U}
08A01828	Table of bytes, either 0x00, 0x01, or 0xFF for determining position of windows such as  minimug box, goal window, or terrain window	{U}
08A018AC	MMBStructType	This is type of 0x6C struct used when drawing box		{U}
0859A5D0	:0859A9D8	RAMSlotTable	This is a table of pointers, with one for every deployment slot in RAM	{U}
0808BBCC	WindowPosCheck	This returns 0-3 based on cursor position	 Uses same misc	 RAM data	 This function is used by all window elements	 here (goal, terrain, minimug), so don't edit it		{U}
0808BBAC	WindowType	'Type' is inaccurate, it's still position but for label purposes I'm calling it type This routine returns 0-3 depending	 on whether r0 and r1 are negative, positive, or zero, from box control table	 Used when determining where to draw terrain, goal, and minimug windows		{U}
0808C5D0	MMBBuilder	This is routine that handles parts on box, such as unit's name and minimug along with tilemap for box itself		{U}
02003D2C		gBG0TilemapBuffer	This is BG buffer dedicated to window  tilemaps, such as tilemaps for terrain window, goal window, and minimug box	{U}
02003E36	MMBBarRAMBuffer	This is buffer area for HP bar	{U}
0200422C	MMBTilemapRAMBuffer	This is where box's tilemap is written to to accomplish scrolling effect	{U}
08A17484	MMBTilemap	This is where rilemap for minimug box is		{U}
0202A6AC	TextBufferOffset	This is buffer text is written to		{U}
03004150	WRAMRoutinePointer	{U}
08003F90	TexCenterer	his routine takes a given amount of space nd tries to center a given text string n that space		RET=r0  distance in pixels to center by	r0=Space in pixels available	r1=Text string, usually text buffer	{U}
02028E70	CurrentFont	TextParams	{U}
08003DC8	TextVRAMClearer	This function gets a space in VRAM and prepares it for new text to be written to		{U}
08004218	DefaultTextDraw	This is default drawing routine There's a pointer to it at 2028E60	{U}
02028E60	DefaultTextDrawPointer	{U}
08004208	TextPalSelecter	{U}
08002B90	WRAMRoutineGetter	This routine grabs and branches to a routine written in WRAM	 This one draws text		{U}
03003740	WRAMPointer	There's a pointer to routine here	{U}
03003A8C	TextImageWriter	This is an ARM routine in WRAM that draws text	 It's hard to follow, so you might want to skip it	 I'll have plenty of notes here	 	r0=font	r1=location to write to	r2=character image	r3=overlap with last character	{U}
08588240	:08588273	FontColorTable	Shape Data Pointer table	{U}
08577EF0	:08577F23	FontColorTable	Shape Data Pointer table	{J}
08000540	CharSizeTable	{U}
080192F4	MinimugGetter	Determines a unit's minimug	{U}
08005988	CreateMinimug	This routine draws minimug to VRAM and writes its tilemap	{U}
08005924	MinimugWriter	{U}
08005F9C	GenericMMGetter	{U}
08005F9C	GenericMMPalGetter	{U}
08005514	GetPortraitStructPointer	{U}
08005894	TilemapWriter	Writes a tilemap	r0=destination	r1=tile table	r2=base tile	r3=flag for flipping	{U}
0808C45C	DrawHPNumbers	This routine draws HP numbers to minimug box	 It handles displaying statuses, too	 Warning: This routine is called every frame by another routine in order to keep displaying OAM	{U}
08590F44	:08591153	OAMTable	This is a table of size/shape	data and number of sprites to draw	{U}
06002DE0	StatusVRAM	{U}
08016574	EquippableCheck:	returns 0 or 1 if a unit can equip and use an item checks for silenced units	{U}
080174AC	UnusableItem	For when an item has ability 2, unusable set	{U}
080163F0	StatBonusGetter	Gets stat bonus pointer of an item returns 0 if none	{U}
080038E0	NumBufferWriter	{U}
08019190	AnotherHPBonus	Another getter for bonus hp added to max	{U}
03003130	:03003743	OAMWriterOffset(OAMRoutineGetter)	{U}
030039BC	OAMWriter	{U}
03003744	OAMBufferEnd	{U}
0808BC10	HPBarLeftEnd	{U}
0808BC2C	HPBarMiddle	{U}
0808BC68	HPBarRightEnd	{U}
0800043C	&ARM	ARM_BgMapApplyTsa	This is an ARM routine	 that draws a tilemap	 For some reason, this isn't run from RAM	r0=destination	r1=tilemap	r2=base tile	{U}
0808C2CC	MMBPalSelect	Routine selects a palette and  writes it based on unit's allegiance after ANDing unit's number with 0xF0 you'll get 0x00, 0x40, 0x80 which are ally, npc, and enemy, respectively	{U}

08A1738C	:08A173AB	MMBAllyPalette	{U}
08A173AC	:08A173CB	MMBEnemyPalette	{U}
08A173CC	:08A173EB	MMBNPCPal	{U}
0802713C	ChapterMapSpritePal	Map sprite palette routine Called to determine map sprite palettes  in chapter maps	 World map uses a  different routine	 Called whenever a map sprite changes state, i	e	 moving, being selected	 Used every frame in unit menu	RET=r0 0x0B-0x0F 0x0B is light rune 0x0C is blue 0x0D is red 0x0E is green 0x0F is gray	r0=character in ram	{U}
08027168	CMSPAllegianceCheck	Allegiance check is pretty much an extension of above routine	 You could call it to get palette of a unit		{U}

080271A0	MSUnk1Start	following routine comes directly after, andmore research is needed on it	 It's called when a sprite is updated	 i	e	 moving or something	{U}
0203A4C8	UnkEntryPtr	{U}
0203A018	UnkOAMTablePtr	{U}

02002774	When in item menu	{U}
0203E794	HelpTextHandles	{U}
030000F0	When dialogue is displayed	{U}
02000920	Main Menu	{U}
02004BC4	Status screen	{U}
02013648	Supply	{U}
02017648	In battles	{U}
0203DB64	Link Arena	{U}
02000C60	Link Arena point assignment	{U}
0201F148	Sound Room	{U}
0203E7E8	Tutorial Text	{U}
0201AFC0	World Map menu	{U}

080B04F8	Cleared Japanese menu loading routine	{U}

088B0638	:088B0890	Cleared FE6 credit pointers	{U}
081C1EC0	:081C2BD4	Cleared beta class list	{U}
081C2BD4	:081C32C8	Cleared FE6 credits	{U}
085B544C	:085B5888	Cleared Japanese text image	{U}
08A29A88	:08A2B1E4	Cleared Japanese text image	{U}
08A2B1E4	:08A2C838	Cleared Japanese text image	{U}





03000008	Call blah and put value??	{U}
030000E8	render_info: for cutscenes		{U}
030000F0(00006840->030000E8	When dialogue is displayed	{U}
030004E8(000109B8->030004E0	0xC slot of setval??	{U}
030004EC	indicates how many words are stored	 stored with SAVETOQUEUE		{U}
030004F0(00010B5C->030004E8	Stores word located at MemorySlot00	stored with SAVETOQUEUE		{U}
030004F4	Stores word located at MemorySlot01		{U}
030004F8	Stores word located at MemorySlot02		{U}
030004FC	Stores word located at MemorySlot03		{U}
03000500	Stores word located at MemorySlot04		{U}
03000504	Stores word located at MemorySlot05		{U}
03000508	Stores word located at MemorySlot06		{U}
0300050C	Stores word located at MemorySlot07		{U}
03000510	Stores word located at MemorySlot08	(It is unknown how many are there	)	{U}
03000570	Allocated stack for event code branch returns	{U}
030005F0	&UNIT	PopUP Dialog 6C / pointer to relevant Unit Struct	{U}
030005F4	PopUP Dialog 6C / item short / weapon type index	{U}
030005F8	PopUP Dialog 6C / number word	{U}
02020140(00077F88->02020140	Popup 6C pointers seem to be stored	{U}


//Zane's Stuff\Doc\Master MMB Doc	txt
02024CA8	an array of 4 pointers (one for each BG) that contain where in VRAM will BG Maps be written to		{J}
0808EFC4	MMBSetup	This is main routine for setting up minimug box	 It determines where to put box and things on it		{J}
0202BCAC	MiscRAMData	This section of memory has information on cursor position,  phases, chapter number, gold, and a bunch of other things	{J}
0202E4D4	BaseRowPointer	This is part of a system for getting elements on map	  It begins with two shorts that go 0xXX 0xXX 0xYY 0xYY  followed by a pointer to first 'row pointer'	 	set value above is this pointer to first row pointer	 I think an example would demonstrate better		{J}
08A738E0	Table of bytes, either 0x00, 0x01, or 0xFF for determining position of windows such as  minimug box, goal window, or terrain window	{J}
08A73964	MMBStructType	This is type of 0x6C struct used when drawing box		{J}
085C2A50	:085C2E58	RAMSlotTable	This is a table of pointers, with one for every deployment slot in RAM	{J}
0808DEDC	WindowPosCheck	This returns 0-3 based on cursor position	 Uses same misc	 RAM data	 This function is used by all window elements	 here (goal, terrain, minimug), so don't edit it		{J}
0808DEBC	WindowType	'Type' is inaccurate, it's still position but for label purposes I'm calling it type This routine returns 0-3 depending	 on whether r0 and r1 are negative, positive, or zero, from box control table	 Used when determining where to draw terrain, goal, and minimug windows		{J}
0808E8CC	MMBBuilder	This is routine that handles parts on box, such as unit's name and minimug along with tilemap for box itself		{J}
02003D2C		gBG0TilemapBuffer	This is BG buffer dedicated to window  tilemaps, such as tilemaps for terrain window, goal window, and minimug box	{J}
0200422C	MMBTilemapRAMBuffer	This is where box's tilemap is written to to accomplish scrolling effect	{J}
08A931D0	MMBTilemap	This is where rilemap for minimug box is		{J}
0202A6A8	TextBufferOffset	This is buffer text is written to		{J}
030040F0	WRAMRoutinePointer	{J}
08003EAC	TexCenterer	his routine takes a given amount of space nd tries to center a given text string n that space		RET=r0  distance in pixels to center by	r0=Space in pixels available	r1=Text string, usually text buffer	{J}
02028E70	CurrentFont	TextParams	{J}
08003CF8	TextVRAMClearer	This function gets a space in VRAM and prepares it for new text to be written to		{J}
08004150	DefaultTextDraw	This is default drawing routine There's a pointer to it at 2028E60	{J}
08004140	TextPalSelecter	{J}
08002AE0	WRAMRoutineGetter	This routine grabs and branches to a routine written in WRAM	 This one draws text		{J}
030036E0	WRAMPointer	There's a pointer to routine here	{J}
08000540	CharSizeTable	{J}
08018FEC	MinimugGetter	Determines a unit's minimug	{J}
0800582C	MinimugWriter	{J}
08005EA0	GenericMMGetter	{J}
08005EA0	GenericMMPalGetter	{J}
0800541C	GetPortraitStructPointer	{J}
0800579CTilemapWriter	Writes a tilemap	r0=destination	r1=tile table	r2=base tile	r3=flag for flipping	{J}
0808E75E	DrawHPNumbers	This routine draws HP numbers to minimug box	 It handles displaying statuses, too	 Warning: This routine is called every frame by another routine in order to keep displaying OAM	{J}
085B8CDC	:085B8EEB	OAMTable	This is a table of size/shape	data and number of sprites to draw	{J}
0801631C	EquippableCheck:	returns 0 or 1 if a unit can equip and use an item checks for silenced units	{J}
08017254	UnusableItem	For when an item has ability 2, unusable set	{J}
08016198	StatBonusGetter	Gets stat bonus pointer of an item returns 0 if none	{J}
0800382C	NumBufferWriter	{J}
08018EA4	AnotherHPBonus	Another getter for bonus hp added to max	{J}
030036E0	:03003CF3	OAMWriterOffset(OAMRoutineGetter)	{J}
030039BC	OAMWriter	{J}
030036E4	OAMBufferEnd	{J}
0808BC10	HPBarLeftEnd	{J}
0808DF38	HPBarMiddle	{J}
0808BC68	HPBarRightEnd	{J}
0800043C	&ARM	ARM_BgMapApplyTsa	This is an ARM routine	 that draws a tilemap	 For some reason, this isn't run from RAM	r0=destination	r1=tilemap	r2=base tile	{J}
0808E5CC	MMBPalSelect	Routine selects a palette and  writes it based on unit's allegiance after ANDing unit's number with 0xF0 you'll get 0x00, 0x40, 0x80 which are ally, npc, and enemy, respectively	{J}

08A930D8	:08A930F7	MMBAllyPalette	{J}
08A930F8	:08A93117	MMBEnemyPalette	{J}
08A93118	:08A93137	MMBNPCPal	{J}
080270E0	ChapterMapSpritePal	Map sprite palette routine Called to determine map sprite palettes  in chapter maps	 World map uses a  different routine	 Called whenever a map sprite changes state, i	e	 moving, being selected	 Used every frame in unit menu	RET=r0 0x0B-0x0F 0x0B is light rune 0x0C is blue 0x0D is red 0x0E is green 0x0F is gray	r0=character in ram	{J}
0802710C	CMSPAllegianceCheck	Allegiance check is pretty much an extension of above routine	 You could call it to get palette of a unit		{J}

08027144	MSUnk1Start	following routine comes directly after, andmore research is needed on it	 It's called when a sprite is updated	 i	e	 moving or something	{J}
0203A4C4	UnkEntryPtr	{J}
0203A014	UnkOAMTablePtr	{J}

02002774	When in item menu	{J}
0203E790	HelpTextHandles	{J}
030000E8	When dialogue is displayed	{J}
02000920	Main Menu	{J}
02004BC4	Status screen	{J}
02013640	Supply	{J}
02017648	In battles	{J}
0203DB60	Link Arena	{J}
02000C60	Link Arena point assignment	{J}
0201F148	Sound Room	{J}
0203E7E4	Tutorial Text	{J}
0201AFC0	World Map menu	{J}

080B5110	Cleared Japanese menu loading routine	{J}

02022AA8	:02022CA7	start of OAM palette buffer
08048198	Name input event	{J}
08048280	Name input event	{U}


080000fc	&ARM	intr_main		{U}
08000304	&ARM	ARM_ClearOAMBuffer		{U}
080003a8	&ARM	ARM_FillRect		{U}
08000494	&ARM	IRAMARM_CopyToSecondaryOAM		{U}
08000534	&ARM	IRAMARM_CopyToPrimaryOAM		{U}
08000564	&ARM	IRAM3_DrawGlyph		{U}
080006e4	&ARM	IRAMARM_DecompText		{U}
08000784	&ARM	IRAM5		{U}
08000874	&ARM	IRAMARM_FillMovementMap			{U}
08000a20	AgbMain	{U}
08000b34	StoreIRQToIRAM	{U}
08000b74	DummyIRQRoutine	{U}
08000b78	SetIRQHandler	{U}
08000b88	NextRN	{U}
08000c34	LoadRNState	{U}
08000c4c	StoreRNState	{U}
08000c64	NextRN_100	{U}
08000c80	NextRN_N	{U}
08000ca0	Roll1RN	{U}
08000cb8	Roll2RN	{U}
08000cdc	SetOtherRNState	{U}
08000ce8	GetOtherRN	{U}
08000d34	SetGlobalClock	{U}
08000d40	IncrementGlobalClock	{U}
08000db8	CopyToPaletteBuffer	{U}
08000e9c	FlushLCDControl	{U}
08000f44	GetBackgroundControlBuffer	{U}
08000f8c	GetBackgroundTileDataOffset	{U}
08000fa4	GetTileIndex	{U}
08000fdc	SetBackgroundTileDataOffset	{U}
08001004	SetBackgroundMapDataOffset	{U}
0800104c	SetBackgroundScreenSize	{U}
08001094	FlushPalettesAdditive	{U}
080010f0	FlushPalettesSubstractive	{U}
0800114c	FlushBackgrounds	{U}
08001220	BG_Fill	{U}
08001240	RegisterBlankTile	{U}
08001258	SetInterrupt_LCDVBlank	{U}
080012ac	SetInterrupt_LCDVCountMatch	{U}
0800131c	SetLCDVCountSetting	{U}
08001328	SetMainUpdateRoutine	{U}
08001334	ExecMainUpdate	{U}
0800134c	_UpdateKeyStatus	{U}
080013e0	UpdateKeyStatus	{U}
08001420	ResetKeyStatus	{U}
08001440	SetKeyStatus_IgnoreMask	{U}
0800144c	GetKeyStatus_IgnoreMask	{U}
08001458	KeyStatusSetter_Set	{U}
08001470	NewKeyStatusSetter	{U}
0800148c	BG_SetPosition	{U}
08001b58	SetupBackgrounds	{U}
08001c4c	BG_GetMapBuffer	{U}
08001c68	ShouldSkipHSScreen	{U}
08001d28	UpdateHBlankHandlerState	{U}
08001dd8	SetPrimaryHBlankHandler	{U}
08001dec	SetSecondaryHBlankHandler	{U}
08001e00	GetBackgroundFromBufferPointer	{U}
08001e6c	BG_SetDepth	{U}
08001e8c	BG_GetDepth	{U}
08001ea0	SetSpecialColorEffectsParameters	{U}
08001f80	SetDefaultColorEffects	{U}
08001f94	EnablePaletteSync	{U}
08001fa0	DisablePaletteSync	{U}
08001fac	BG_EnableSyncByMask	{U}
08001fbc	BG_EnableSync	{U}
08001fe0	ClearTileRigistry	{U}
08002014	RegisterTileGraphics	{U}
08002054	RegisterFillTile	{U}
08002088	FlushTiles	{U}
080020fc	SetupOAMBufferSplice	{U}
08002138	FlushSecondaryOAM	{U}
0800217c	FlushPrimaryOAM	{U}
080021b0	WriteOAMRotScaleData	{U}
0800224c	GetPrimaryOAMSize	{U}
08002274	SomethingSoundRelated_8002274	{U}
080022ec	SomethingSoundRelated_80022EC	{U}
0800231c	SoundStuff_800231C	{U}
080023e0	FadeOutChannelForSoundSE	{U}
0800281c	Some6CMusicRelatedWaitCallback	{U}
08002858	Exec6CSomeWaitIfMusicOn	{U}
08002ab8	DeleteAll6CWaitMusicRelated	{U}
08002af8	StoreRoutinesToIRAM	{U}
08002ba4	&ARM	CallARM_DecompText	{U}
08002bb8	&ARM	CallARM_PushToSecondaryOAM	{U}
08002bcc	&ARM	CallARM_PushToPrimaryOAM	{U}
08002be0	&ARM	Call5	{U}
08002bf4	&ARM	CallARM_FillMovementMap	{U}
08002c08	Initialize6CEngine	{U}
08002c7c	New6C	{U}
08002ce0	NewBlocking6C	{U}
08002d10	Delete6CInternal	{U}
08002d6c	Delete6C	{U}
08002d84	Allocate6C	{U}
08002d94	Free6C	{U}
08002da4	InsertMain6C	{U}
08002dc8	InsertChild6C	{U}
08002de0	Isolate6C	{U}
08002e28	Exec6C_	{U}
08002e84	Exec6C	{U}
08002e94	Break6CLoop	{U}
08002e9c	Find6C	{U}
08002f24	Goto6CLabel	{U}
08002f5c	Goto6CPointer	{U}
08002f64	Set6CMark	{U}
08002f6c	Set6CDestructor	{U}
08002f70	ForAll6C	{U}
08002f98	ForEach6C	{U}
08002fec	BlockEach6CMarked	{U}
08003014	UnblockEach6CMarked	{U}
08003040	DeleteEach6CMarked	{U}
0800306c	Delete6C_	{U}
08003078	DeleteEach6C	{U}
08003088	Clear6CLoopWrapper	{U}
08003094	ClearCallbackAll6CMatch	{U}
080030a4	ForAllFollowing6C	{U}
080030e8	Call6C_00Delete	{U}
080030f4	Call6C_01Name	{U}
08003104	Call6C_02CallAndContinue	{U}
08003118	Call6C_16Call	{U}
08003130	Call6C_18CallWithArg	{U}
08003150	Call6C_14While	{U}
0800317c	Call6C_03SetLoop	{U}
0800318c	Call6C_04SetDestructor	{U}
080031a8	Call6C_05AddChild	{U}
080031c4	Call6C_06AddBlockingChild	{U}
080031e0	Call6C_07AddGlobal_BuggedMaybe	{U}
08003200	Call6C_08WhileExists	{U}
08003228	Call6C_09DeleteEach6C	{U}
08003244	Call6C_0AClearLoopForEach6C	{U}
08003260	Call6C_0BOr19Label	{U}
0800326c	Call6C_0DJump	{U}
0800327c	Call6C_0CGotoLabel	{U}
08003290	_6CSleepLoop	{U}
080032ac	Call6C_0ESleep	{U}
080032d4	Call6C_0FMark	{U}
080032e8	Call6C_13Blank	{U}
080032f4	Call6C_10Block	{U}
080032f8	Call6C_11DeleteIfDuplicate	{U}
08003338	Call6C_17DeleteOtherDuplicates	{U}
08003370	Call6C_15Blank	{U}
0800337c	Call6C_12SetBit4	{U}
08003394	Call6CCode	{U}
080033e0	ForEach6CDoNothing	{U}
08003450	Set6CLoop	{U}
0800346c	Find6C_	{U}
08003578	ResetIconGraphics_	{U}
08003584	ResetIconGraphics	{U}
080035bc	LoadIconPalettes	{U}
080035d4	LoadIconPalette	{U}
08003610	GetIconGfxTileIndex	{U}
08003624	GetIconGfxIndex	{U}
08003650	GetIconTileIndex	{U}
080036bc	DrawIcon	{U}
0800370c	ClearIconGfx	{U}
0800372c	LoadIconObjectGraphics	{U}
0800378c	SetupDebugFontForBG	{U}
08003804	PrintDebugStringToBG	{U}
080038c8	ClearSmallStringBuffer	{U}
0800391c	StoreNumberStringOrDashesToSmallBuffer	{U}
08003968	StoreNumberHexStringToSmallBuffer	{U}
080039d0	PrintStringToDBG	{U}
08003a3c	FlushDBGToBG2	{U}
08003b24	SetupDebugFontForOBJ	{U}
08003bb0	PrintDebugStringAsOBJ	{U}
08003c7c	GetLang	{U}
08003c88	SetLang	{U}
08003c94	Font_InitForUIDefault	{U}
08003cb8	Font_InitForUI	{U}
08003cf4	SetFontGlyphSet	{U}
08003d38	SetFont	{U}
08003d5c	Text_Init	{U}
08003d84	Text_Allocate	{U}
08003dac	InitTextBatch	{U}
08003e50	Text_GetXCursor	{U}
08003e54	Text_SetXCursor	{U}
08003e58	Text_Advance	{U}
08003e60	Text_SetColorId	{U}
08003e64	Text_GetColorId	{U}
08003e68	Text_SetParameters	{U}
08003e70	Text_Draw	{U}
08003ebc	Text_DrawBlank	{U}
08003edc	GetStringTextWidth	{U}
08003f3c	GetCharTextWidth	{U}
08003f90	GetStringTextCenteredPos	{U}
08003ff4	String_GetEnd	{U}
08004004	Text_AppendString	{U}
08004074	Text_AppendDecNumber	{U}
08004144	Text_AppendNumberOr2Dashes	{U}
08004180	Text_AppendChar	{U}
080041e8	GetVRAMPointerForTextMaybe	{U}
08004268	Font_SpecializedGlyphDrawer	{U}
08004428	Font_SetSomeSpecialDrawingRoutine	{U}
0800443c	DrawTextInline	{U}
08004480	Text_InsertString	{U}
080044a4	Text_InsertNumberOr2Dashes	{U}
080044c8	Text_AppendStringSimple	{U}
08004504	Text_AppendCharSimple	{U}
08004538	GetCharTextWidthSimple	{U}
08004568	GetStringTextWidthSimple	{U}
0800459c	InitSomeOtherGraphicsRelatedStruct	{U}
080045d8	Text_Init3	{U}
080046b4	Text_MeasureString	{U}
080049ac	NewGreenTextColorManager	{U}
080049d0	EndGreenTextColorManager	{U}
08004b94	DrawDecNumber	{U}
08004e40	AIS_ExecAll	{U}
08004eb8	ClearAISArray	{U}
08004f48	AIS_New	RET=@AnimationInterpreter	{U}
08004fac	AISArray_Sort	{U}
08005004	AIS_Free	r0=@AnimationInterpreter	{U}
08005034	AIS_Display	r0=@AnimationInterpreter	{U}
08005040	HandleNextAISFrame	{U}
080051c0	LinkAIS	{U}
08005208	_AIS_Display	r0=@AnimationInterpreter	{U}
08005458	FlushIntermediateOAMBuffer	{U}
08005514	GetPortraitStructPointer	{U}
08005528	ResetFaces	{U}
08005544	SetupFaceGfxData	{U}
08005594	Load6CFACEGraphics	{U}
0800563c	NewFace	{U}
08005738	DeleteE_FACEByPointer	{U}
08005758	DeleteFaceByIndex	{U}
08005c24	ShouldPortraitBeSmol	{U}
08007c28	_Loop6CBlockingTimer	{U}
080089e8	Face6CExists	{U}
08008f18	GetZero	{U}
08009718	TCSWrapper_New	{U}
08009760	TCSWrapper_OnUpdate	{U}
0800978c	TCSWrapper_OnDelete	{U}
08009798	TCSWrapper_SetParameters	{U}
080097b4	TCSWrapper_Delete	{U}
080097c0	DeleteAllTCSWrappers	{U}
080097d0	DoesTCSWrapperExist	{U}
08009a00	Goto6CLabel12IfSomething	{U}
08009a60	Null6CCallback	{U}
08009a6c	Delete6CIfNotMarkedB	{U}
08009b88	GAMECTRL_MasterSwitch	{U}
08009de0	CallActualSaveMenu	{U}
08009edc	GetChapterIdTo6C	{U}
08009eec	SetChapterIdFrom6C	{U}
08009f08	NewGameControl	{U}
08009f40	GetGameControl6C	{U}
08009f50	SetNextGameActionId	{U}
08009f64	SetNextChapterId	{U}
08009f8c	RestartGameAndGoto8	{U}
08009fb0	RestartGameAndGoto12	{U}
08009fdc	ForceEnableSoundEffects	{U}
0800a1c8	SomethingRelatedToText	{U}
0800a240	GetStringFromIndex	{U}
0800a280	GetStringFromIndexInBuffer	{U}
0800a3b8	FilterSomeTextFromStandardBuffer	{U}
0800ba5c	SetSomeRealCamPos	{U}
0800baf8	TriggerMapChanges	{U}
0800bc1c	HideAllUnits	{U}
0800bc50	GetUnitStructFromEventParameter	{U}
0800bdcc	Event80_	{U}
0800bde8	Event81_	{U}
0800be2c	Event82_EndWM	{U}
0800be38	Event83_WM_SETCAM	{U}
0800be4c	Event84_WM_SETCAMONLOC	{U}
0800be8c	Event85_WM_SETCAMONSPRITE	{U}
0800bed4	Event86_WM_MOVECAM	{U}
0800bf38	Event87_	{U}
0800bfd8	Event88_	{U}
0800c084	Event89_	{U}
0800c0b8	Event8A_	{U}
0800c0c8	Event8B_	{U}
0800c0d4	Event8C_	{U}
0800c0f0	Event8D_	{U}
0800c108	Event8E_	{U}
0800c120	Event8F_	{U}
0800c138	Event90_WM_DRAWPATH	{U}
0800c164	Event91_WM_DRAWPATH_Silent	{U}
0800c198	Event92_REMOVEPATH	{U}
0800c1cc	Event93_	{U}
0800c1e8	Event94_	{U}
0800c204	Event95_	{U}
0800c254	Event96_	{U}
0800c2dc	Event97_	{U}
0800c36c	Event98_	{U}
0800c434	Event99_	{U}
0800c468	Event9A_	{U}
0800c4c8	Event9B_	{U}
0800c4e4	Event9C_	{U}
0800c528	Event9D_	{U}
0800c55c	Event9E_PUTSPRITE	{U}
0800c574	Event9F_	{U}
0800c58c	EventA0_REMSPRITE	{U}
0800c59c	EventA1_	{U}
0800c5ac	EventA2_	{U}
0800c5bc	EventA3_	{U}
0800c5f8	EventA4_	{U}
0800c634	EventA5_	{U}
0800c65c	EventA6_	{U}
0800c68c	EventA7_	{U}
0800c6c0	EventA8_	{U}
0800c754	EventA9_	{U}
0800c7b4	EventAA_	{U}
0800c7e4	EventAB_	{U}
0800c814	EventAC_	{U}
0800c85c	EventAD_	{U}
0800c884	EventAE_	{U}
0800c8b0	EventAF_	{U}
0800c8d4	EventB0_	{U}
0800c8f8	EventB1_	{U}
0800c924	EventB2_	{U}
0800c938	EventB3_	{U}
0800c950	EventB4_	{U}
0800c980	EventB5_	{U}
0800c9a0	EventB6_	{U}
0800c9f0	EventB7_	{U}
0800ca18	EventB8_	{U}
0800ca38	EventB9_	{U}
0800ca60	EventBA_	{U}
0800ca9c	EventBB_	{U}
0800cadc	EventBC_	{U}
0800cb48	EventBD_	{U}
0800cb70	EventBE_	{U}
0800cbac	EventBF_	{U}
0800cbd8	EventC0_	{U}
0800cbf0	EventC1_SKIPWM	{U}
0800cc04	EventC2_	{U}
0800cc18	EventC3_	{U}
0800cc5c	EventCE_	{U}
0800cc74	EventCF_	{U}
0800cc8c	EventC4_	{U}
0800ccf0	EventC5_	{U}
0800cd50	EventC6_	{U}
0800cd88	EventC7_	{U}
0800cda8	EventC8_	{U}
0800cdc8	EventC9_	{U}
0800cdec	__malloc_unlock	{U}
0800cdf0	EventCA_	{U}
0800cdf4	EventCB_	{U}
0800cdf8	EventCC_	{U}
0800ce28	EventCD_	{U}
0800ce40	_MarkSomethingInMenu	{U}
0800ce4c	EventEngine_Loop	{U}
0800cf5c	EventEngine_Destructor	{U}
0800d00c	EqueueEventEngineCall	{U}
0800d044	HandleNextEventEngineCall	{U}
0800d0b0	NewMapEventEngine	{U}
0800d140	NewBattleEventEngine	{U}
0800d198	MapEventEngineExists	{U}
0800d1b0	BattleEventEngineExists	{U}
0800d1c8	DeleteEventEngines	{U}
0800d2d0	CallSomeOtherEvents	{U}
0800d4b8	CheckEventId_	{U}
0800d528	SlotQueuePush	{U}
0800d544	SlotQueuePop	{U}
0800d588	SetEventCounter	{U}
0800d5a0	Event00_NULL	{U}
0800d5a4	Event01_End	{U}
0800d670	Event02_EvBitAndIdMod	{U}
0800d6e4	Event03_CheckEvBitOrId	{U}
0800d754	Event04_CheckRandom	{U}
0800d77c	Event05_SetSlot	{U}
0800d794	Event06_SlotOperation	{U}
0800d918	Event07_SlotQueueOperations	{U}
0800d97c	Event08_Label	{U}
0800d980	Event09_Goto	{U}
0800d9b8	Event0A_Call	{U}
0800da2c	Event0B_	{U}
0800da78	Event0C_Branch	{U}
0800db00	Event0D_AsmCall	{U}
0800db38	Event0E_STAL	{U}
0800dbe0	Event0F_	{U}
0800dc98	Event10_ModifyEvBit	{U}
0800dd58	Event11_SetIgnoredKeys	{U}
0800dd74	Event12_	{U}
0800ddb0	Event13_	{U}
0800de14	Event14_	{U}
0800de74	Event15_	{U}
0800ded4	Event16_	{U}
0800df20	Event17_	{U}
0800dfbc	Event18_	{U}
0800e070	Event19_	{U}
0800e188	Event1A_TEXTSTART	{U}
0800e3c8	Event1B_TEXTSHOW	{U}
0800e51c	Event1C_TEXTCONT	{U}
0800e560	Event1D_TEXTEND	{U}
0800e698	_WhileFace6CExists	{U}
0800e6b4	Event1E_	{U}
0800e77c	Event1F_	{U}
0800e7c4	Event20_	{U}
0800e8cc	Event21_	{U}
0800f0c8	Event22_	{U}
0800f124	Event23_	{U}
0800f150	Event24_	{U}
0800f17c	Event25_	{U}
0800f20c	Event26_CameraControlMaybe	{U}
0800f2d4	Event27_MapChange	{U}
0800f3ec	Event28_ChangeWeather	{U}
0800f3fc	Event29_SetFogVision	{U}
0800f42c	Event2A_MoveToChapter	{U}
0800f528	ShouldUNITBeLoaded	{U}
0800f704	LoadUnit_800F704	{U}
0800fb18	Event2B_	{U}
0800fb84	Event2C_LoadUnits	{U}
0800fc90	TryPrepareEventUnitMovement	{U}
0800fcd8	GetSomeEventEngineMoveRelatedBitfield	{U}
0800fd0c	Event2D_	{U}
0800fd28	Event2E_CheckAt	{U}
0800fd8c	Event2F_MoveUnit	{U}
0800ff24	Event30_ENUN	{U}
0800ff68	Event31_DisplayEffectRange	{U}
0800fff8	Event32_SpawnSingleUnit	{U}
08010110	Event33_CheckUnitVarious	{U}
08010298	Event34_MessWithUnitState	{U}
080104b0	Event35_UnitClassChanging	{U}
0801053c	Event36_CheckInArea	{U}
080105a4	Event37_GiveItem	{U}
08010618	Event38_ChangeActiveUnit	{U}
08010644	Event39_	{U}
080106e4	Event3A_	{U}
0801079c	Event3B_	{U}
08010850	Event3C_	{U}
080108ac	Event3D_	{U}
08010968	Event3E_PrepScreenCall	{U}
08010a58	Event3F_	{U}
08010b78	Event40_	{U}
08010bec	Event41_	{U}
08010c70	Event42_	{U}
08010cf0	Event43_	{U}
08010d28	Event44_	{U}
08010d5c	Event45_	{U}
08010f38	GetSomeLongPopupLength	{U}
0801106c	GenSomeLongPopupText	{U}
0801119c	LongPopup_PrepareGfx	{U}
08011210	LongPopup_PlaySound	{U}
08011254	IconOAMUpdater_Loop	{U}
08011270	LongPopup_Draw	{U}
080113c0	LongPopup_WaitForPress	{U}
080113f8	LongPopup_Clear	{U}
08011450	SetPopupUnit	{U}
0801145c	SetPopupItem	{U}
08011468	SetPopupNumber	{U}
08011474	NewPopupSimple	{U}
08011490	NewPopup	{U}
080114dc	NewGotItemPopup	{U}
08011524	ItemGot_DisplayLePopup	{U}
08011538	ItemGot_GotLeItem	{U}
08011554	NewItemGot	{U}
0801159c	NewGeneralItemGot	{U}
08011644	NewGoldGotPopup	{U}
080116e0	NewPopup_WeaponBroke	{U}
08011704	NewPopup_WRankIncrease	{U}
08012344	GetChapterAllyUnitCount	{U}
08012360	InitPlayerUnitPositionsForPrepScreen	{U}
0801263c	StoreUnitWordStructs	{U}
08012678	LoadUnitWordStructs	{U}
08012ec0	CopyString	{U}
08012edc	CopyDirect	{U}
08012f50	UnLZ77Decompress	{U}
08012f90	FilterR0ForRawCopy	{U}
08012ff4	RegisterObjectTileGraphics	{U}
08013020	CopyTileGfxForObj	{U}
0801344c	GetPaletteBufferBuffer	{U}
08013470	SetSomethingInPaletteBB_2A	{U}
08013480	SetSomethingInPaletteBB_5A	{U}
08013494	SetSomethingInPaletteBB_8A	{U}
080134a8	GetSomethingInPaletteBB_2A	{U}
080134b4	GetSomethingInPaletteBB_5A	{U}
080134c4	GetSomethingInPaletteBB_8A	{U}
080134d4	ArchiveCurrentPalettes	{U}
08013520	ArchivePalette	{U}
08013550	WriteFadedPaletteFromArchive	{U}
08014068	ContinueUntilSomeTransistion6CExists	{U}
08014238	NewBlockingTimer	{U}
08014254	Timer6C_Countdown	{U}
08014334	String_FromNumber	{U}
08014480	DeleteAllPaletteAnimator	{U}
08014490	NewPaletteAnimator	{U}
080144e4	NewPaletteAnimator_	{U}
0801487c	FutureCall2_Loop	{U}
080148a0	FutureCall_Loop	{U}
080148c8	SetupFutureCall2	{U}
080148e4	SetupFutureCall	{U}
08014b00	RerangeSomething	{U}
08014b28	PlaySpacialSoundMaybe	{U}
080152a4	GeneralVBlankHandler	{U}
080152f4	SomeUpdateRoutine	{U}
08015360	AddSkipThread2	{U}
08015370	SubSkipThread2	{U}
08015380	GetThread2SkipStack	{U}
0801538c	SwitchPhases	{U}
080153d4	CallBeginningEvents	{U}
08015450	MakePhaseController6C	{U}
080154a4	NewPlayerPhase6C	{U}
080154f4	E_BMAPMAIN_SuspendGame	{U}
08015544	UndeployEveryone	{U}
08015588	GotoChapterWithoutSave	{U}
08015608	SetupBackgroundForWeatherMaybe	{U}
08015680	LoadObjUIGfx	{U}
080156f4	LoadGameCoreGfx	{U}
08015714	HandleCursorMovement	{U}
08015838	MoveCameraByStepMaybe	{U}
080159b8	GetSomeAdjustedCameraX	{U}
080159fc	GetSomeAdjustedCameraY	{U}
08015a98	DisplayCursor	{U}
08015bbc	SetCursorMapPosition	{U}
08015c1c	Init6C_GENS	{U}
08015cb0	Loop6C_GENS	{U}
08015d30	StoreAdjustedCameraPositions	{U}
08015e0c	EnsureCameraOntoPosition	r0=ThisProcs	r1=X	r2=Y	{U}
08015e9c	ShouldMoveCameraPosSomething	{U}
08015fc8	GetCurrentMapMusicIndex	{U}
0801618c	GetItemSomeString	{U}
08016420	GetItemPowBonus	{U}
08016450	GetItemSklBonus	{U}
08016480	GetItemSpdBonus	{U}
080164b0	GetItemDefBonus	{U}
080164e0	GetItemResBonus	{U}
08016510	GetItemLckBonus	{U}
08016574	CanUnitUseAsWeapon	{U}
08016750	CanUnitUseWeapon	{U}
080167a4	CanUnitUseAsStaff	{U}
08016800	CanUnitUseStaff	{U}
08016848	DrawItemMenuCommand	{U}
080169a8	DrawTextAndIconForItem	{U}
08016aec	ValidateItem	{U}
08016b28	GetUnitEquippedWeapon	{U}
08016b58	GetUnitEquippedWeaponSlot	{U}
08016b8c	IsItemCoveringRange	{U}
08016bc0	EquipUnitItemByIndex	{U}
08016bec	IsWeaponEffective	{U}
08016c88	IsSlayerApplied	{U}
08016d5c	GetWeaponRankLevel	{U}
08016d94	GetWRankTextBuffer	{U}
08016df8	GetWRankText	{U}
08016e20	GetWTypeTextInStandardBuffer	{U}
08016e50	GetWRankBarData	{U}
08016ec8	IsItemDanceRing	{U}
08016ee4	IsItemUsable	{U}
08016f7c	CanUnitUse	{U}
08016fb8	GetItemHealAmount	{U}
0801702c	GetUnitItemSlot	{U}
08017054	IsItemStealable	{U}
08017080	IsItemHammernable	{U}
080170d4	GetWeaponRangeMask	{U}
080171e8	GetUnitRangeMask	{U}
0801723c	GetUnitStaffRangeMask_0	{U}
080172f8	GetUnitStaffRangeMask	{U}
0801737c	GetConvoyTotalGoldValue	{U}
080174ec	GetItemIndex	{U}
08017518	GetItemDescId	{U}
08017530	GetItemUseDescId	{U}
08017548	GetItemWType	{U}
0801756c	GetItemAttributes	{U}
08017584	GetItemUses	{U}
080175b0	GetItemMaxUses	{U}
080175dc	GetItemMight	{U}
080175f4	GetItemHit	{U}
0801760c	GetItemWeight	{U}
08017624	GetItemCrit	{U}
0801763c	GetItemCost	{U}
0801766c	GetItemMinRange	{U}
08017684	GetItemMaxRange	{U}
080176a0	GetItemRange	{U}
080176b8	GetItemWRank	{U}
080176d0	GetItemEffectivenessPtr	{U}
080176e8	GetItemStatBonusesPtr	{U}
08017700	GetItemIconId	{U}
08017724	GetItemWeaponEffect	{U}
0801773c	GetItemUseEffect	{U}
08017754	GetItemCostPerUse	{U}
0801776c	GetItemMaxCost	{U}
08017798	GetItemWExp	{U}
080177b0	GetROMItemStructPtr	{U}
080177c4	ClearUnits	{U}
080177f4	ClearUnitStruct	r0=@Unit	{U}
0801781c	CopyUnitStruct	r0=@Unit	r1=@Unit	{U}
08017838	GetNextFreeUnitStructPtr	RET=@Unit	r0=faction	{U}
08017870	GetNextFreePlayerUnitStruct	RET=@Unit	{U}
080178a8	GetUnitFogViewRange	{U}
080178d8	SetUnitNewStatus	{U}
080178f4	WriteUnitStatusDuration	{U}
08017904	GetUnitSMSIndex	{U}
08017948	UnitAddItem	{U}
0801796c	UnitClearInventory	{U}
08017984	RemoveUnitBlankItems	{U}
080179d8	GetUnitItemCount	{U}
080179f8	UnitHasItem	{U}
08017a34	LoadUnits	{U}
08017a8c	HasClassWRank	{U}
08017ac4	LoadUnit	{U}
08017d3c	StoreNewUnitFromCode	{U}
08017df8	CharFillInventoryFromCode	{U}
08017e34	LoadUnitStats	{U}
08017ebc	FixROMUnitStructPtr	{U}
08017ef4	LoadUnitSupports	{U}
08017f20	AutolevelUnitWeaponRanks	{U}
08017fc4	IncreaseUnitStatsByLevelCount	{U}
08018064	StoreUnitStats	{U}
08018120	AutolevelUnit	{U}
08018160	AutolevelRealistic	{U}
080181c8	CheckForStatCaps	{U}
0801829c	GetUnitByCharId	{U}
080182d8	GetNonAllyUnitStructById	{U}
0801831c	CanUnitRescue	{U}
0801834c	UnitRescue	{U}
08018370	UpdateRescuingData	{U}
080183c8	UpdateRescueData	{U}
08018430	HandleAllegianceChange	{U}
0801849c	ApplyUnitMovement	{U}
0801865c	SetupActiveUnit	{U}
080186d4	SetActiveUnit	{U}
08018740	MoveActiveUnit	{U}
0801895c	SetAllUnitNotBackSprite	{U}
08018994	ValidateUnitItem	{U}
080189b8	GetUnitAid	{U}
08018a1c	GetUnitMagBy2Range	{U}
08018a58	UnitHasMagicRank	{U}
08018b28	GetUnitUseFlags	{U}
08018bd8	CanUnitMove	{U}
08018c98	IsPosMagicSealed	{U}
08018d08	CanUnitNotUseMagic	{U}
08018d34	GetUnitLastItem	{U}
08018d4c	GetMovCostTablePtr	{U}
08018d90	GetClassStandingMapSpriteId	{U}
08018db0	UpdatePrevDeployStates	{U}
08018e30	LoadUnitPrepScreenPositions	{U}
08018f48	IsUnitSlotAvailable	{U}
080190b4	ClearCutsceneUnits	{U}
08019150	GetUnitCurrentHP	{U}
08019190	GetUnitMaxHP	{U}
080191b0	GetUnitPower	{U}
080191d0	GetUnitSkill	{U}
08019210	GetUnitSpeed	{U}
08019250	GetUnitDefense	{U}
08019270	GetUnitResistance	{U}
08019298	GetUnitLuck	{U}
080192b8	GetUnitPortraitId	{U}
080192f4	GetUnitMiniPortraitId	{U}
08019340	GetUnitLeader	{U}
08019368	SetUnitHP	{U}
080193a4	UnitTryHeal	{U}
080193e8	GetRescuingUnitNameId	{U}
08019414	WriteStatusTextToRAM	{U}
08019430	GetUnitStruct	RET=RAM Unit:@Unit	{U}
08019444	GetROMClassStruct	RET=class data table:CLASS	r0=class_id	{U}
08019464	GetROMCharStruct	RET=unit data table:UNIT	r0=unit_id	{U}
08019484	UnitRemoveItem	{U}
0801949c	CanUnitCrossTerrain	{U}
080194bc	InitChapterMap	{U}
080197a4	SetupMapRowPointers	{U}
080197e4	ClearMapWith	{U}
080198ac	LoadChapterMap	{U}
0801990c	LoadChapterMapGfx	{U}
080199a4	FlushTilesFromBuffer	{U}
08019a64	FlushTerrainData	{U}
08019af4	GetSomeTerrainToChangeAtSomePosition	{U}
08019b18	UpdateGameTileGfx	{U}
08019c3c	UpdateGameTilesGraphics	{U}
08019fa0	UpdateUnitMapAndVision	{U}
0801a174	UpdateTrapFogVision	{U}
0801a1a0	UpdateTrapHiddenStates	{U}
0801a1f4	RefreshFogAndUnitMaps	{U}
0801a240	GetTerrainNameString	{U}
0801a258	GetTerrainHealAmount	{U}
0801a268	GetTerrainRestoreBadStatus	{U}
0801a2ec	RevertMapChangesById	{U}
0801a38c	FillMovementMapForUnit	{U}
0801a3cc	FillMovementMapForUnitAndMovement	{U}
0801a408	FillMovementMapForUnitPosition	{U}
0801a43c	FillMovementRangeMapSomehow	{U}
0801a46c	FillMovementMapSomehow	{U}
0801a49c	FillMovementMapForUnitAt	{U}
0801a4cc	StoreMovCostTable	{U}
0801a4ec	FillMovementMap	{U}
0801aabc	MapAddInRange	{U}
0801abc0	MapSetInRange	{U}
0801acbc	FillMapAttackRangeForUnit	{U}
0801b460	FillRangeByRangeMask	{U}
0801b618	FillMapStaffRangeForUnit	{U}
0801b810	ApplyStuffToRangeMaps	{U}
0801b998	SetSubjectMap	{U}
0801b9a4	FillRangeMap	{U}
0801b9e4	GetCurrentMovCostTable	{U}
0801ba4c	Get8	{U}
0801ba58	Loop6C_WaitForSelectPress	{U}
0801bb40	DebugMenu_MapIdle	{U}
0801bb54	DebugMenu_MapEffect	{U}
0801bce4	DebugMapMenu_DisplayInfoDraw	{U}
0801bd58	DebugMapMenu_DisplayInfoIdle	{U}
0801bda0	DebugMapMenu_DisplayInfoEffect	{U}
0801bda4	DebugMenu_WeatherDraw	{U}
0801be28	DebugMenu_WeatherIdle	{U}
0801befc	DebugMenu_WeatherEffect	{U}
0801bf00	DebugMenu_ClearDraw	{U}
0801bf6c	DebugMenu_ClearIdle	{U}
0801c014	DebugMenu_ClearEffect	{U}
0801c018	DebugMenu_ErasedEffect	{U}
0801c090	DEBUGONLY_Startup	{U}
0801c3d4	DebugMenu_FogDraw	{U}
0801c448	DebugMenu_FogIdle	{U}
0801c4b0	DebugMenu_FogEffect	{U}
0801c4c0	DebugMenu_GNightEffect	{U}
0801c4d0	DebugChargeMenu_Draw	{U}
0801c588	DebugChargeMenu_Idle	{U}
0801c894	ClearActionAndSave	{U}
0801c8ac	HandlePlayerCursorMovement	{U}
0801c940	PlayerPhase_MainLoop	{U}
0801cb70	DisplayUnitEffectRange	{U}
0801cc7c	DisplayActiveUnitEffectRange	{U}
0801d084	PlayerPhase_PrepareAction	{U}
0801d244	TryMakeCantoUnit	{U}
0801d300	RunPotentialWaitEvents	{U}
0801d31c	EnsureCameraOntoActiveUnitPosition	{U}
0801d470	PlayerPhase_ApplyUnitMovement	{U}
0801d51c	GetUnitSelectionValueThing	{U}
0801d64c	PlayerPhase_WaitForUnitMovement	{U}
0801d70c	MakeMoveunitForActiveUnit	{U}
0801d75c	ClearActiveUnit	{U}
0801d89c	MoveLimitViewChange_OnInit	{U}
0801d8ec	MoveLimitViewChange_OnLoop	{U}
0801d92c	MoveLimitView_OnInit	{U}
0801d9dc	MoveLimitView_OnLoop	{U}
0801da60	MoveLimitView_OnEnd	{U}
0801da98	DisplayMoveRangeGraphics	{U}
0801dacc	HideMoveRangeGraphics	{U}
0801dba4	PlayerPhase_HandleAutoEnd	{U}
0801dbd4	GetSomeFacingDirection	{U}
0801dc00	Make6CMOVEUNITForUnitBeingRescued	{U}
0801dc3c	Loop6C_KOIDO	{U}
0801dc7c	Make6CKOIDO	{U}
0801dcd0	Make6CKOIDOAMM	{U}
0801dda8	Destruct6CBMXFADE	{U}
0801ddc4	NewBMXFADE	{U}
0801ddf0	MakeNew6CBMXFADE2	{U}
0801de18	DoesBMXFADEExist	{U}
0801de30	GetPlayerStartCursorPosition	{U}
0801de88	GetEnemyStartCursorPosition	{U}
0801df64	ADJUSTFROMXI_MoveCameraOnSomeUnit	{U}
0801e098	HandleNewItemGetFromDrop	{U}
0801e138	SendToConvoyMenu_Draw	{U}
0801e144	MenuCommand_DrawExtraItem	{U}
0801e188	SendToConvoyMenu_NormalEffect	{U}
0801e34c	FillWarpRangeMap	{U}
0801f50c	ChangeActiveUnitFacing	{U}
080225f8	CommandEffectEndPlayerPhase	{U}
080226e4	Make6CE_Guide	{U}
08022738	EffectWait	{U}
08022748	GenericSelection_BackToUM	{U}
0802282c	GenericSelection_BackToUM_CamWait	{U}
080228a4	RescueUsability	{U}
080228dc	RescueEffect	{U}
080228fc	RescueSelection_OnSelect	{U}
08022910	DropUsability	{U}
08022948	DropEffect	{U}
08022968	DropSelection_OnSelect	{U}
0802298c	TakeUsability	{U}
080229d4	TakeEffect	{U}
080229f4	GiveUsability	{U}
08022a3c	GiveEffect	{U}
08022a5c	MakeUnitRescueTransferGraphics	{U}
08022a90	TakeSelection_OnSelect	{U}
08022ae0	GiveSelection_OnSelect	{U}
08022c30	DisplayUnitStandingAttackRange	{U}
08022c98	HideMoveRangeGraphicsWrapper	{U}
080232e8	ItemCommandEffect	{U}
08023350	ItemSelectMenu_TextDraw	{U}
080233d8	ItemSelectMenu_Usability	{U}
08023428	ItemSelectMenu_Effect	{U}
080239cc	FillBallistaRange	{U}
08023a54	StaffCommandUsability	{U}
08023acc	StaffCommandEffect	{U}
08023b90	StaffItemSelect_Usability	{U}
08023bc8	StaffItemSelect_Effect	{U}
08023c08	StaffItemSelect_TextDraw	{U}
08023c14	StaffItemSelect_OnHover	{U}
08023e7c	PickCommandUsability	{U}
08023f64	SupplyUsability	{U}
0802418c	StealCommandUsability	{U}
080241dc	StealCommandEffect	{U}
0802421c	StealTargetSelection_OnInit	{U}
08024304	StealItemMenuCommand_Usability	{U}
08024348	StealItemMenuCommand_Draw	{U}
0802439c	StealItemMenuCommand_Effect	{U}
0802467c	RescueSelection_OnConstruction	{U}
0802469c	RescueSelection_OnChange	{U}
080246c0	DropSelection_OnConstruction	{U}
08024768	TradeTargetSelection_OnInit	{U}
080248c4	RideCommandUsability	{U}
08024920	RideCommandEffect	{U}
080249ac	AttackCommandUsability	{U}
08024a28	AttackBallistaCommandUsability	{U}
08024cec	GetPhaseAbleUnitCount	{U}
08024d8c	AreUnitsAllied	{U}
08024da4	IsSameAllegience	{U}
08024dbc	GetCurrentPhase	{U}
08024dd0	IsNotEnemyPhaseMaybe	{U}
08024de8	GetPartyGoldAmount	{U}
08024e04	SetPartyGoldAmount	{U}
08024eac	ForEachUnitInRange	{U}
08024f18	ForEachPosInRange	{U}
08024f70	ForEachAdjacentUnit	{U}
08024fa4	ForEachAdjacentPosition	{U}
08025038	ForEachPosIn12Range	{U}
0802506c	ForEachUnitInMagBy2Range	{U}
080250bc	TryAddTrapsToTargetList	{U}
0802517c	AddUnitToTargetListIfNotAllied	{U}
080251b4	MakeTargetListForWeapon	{U}
0802521c	TryAddUnitToTradeTargetList	{U}
080252d0	MakeTradeTargetList	{U}
08025344	TryAddUnitToRescueTargetList	{U}
080253b4	MakeRescueTargetList	{U}
080253e8	TryAddToDropTargetList	{U}
08025440	MakeDropTargetList	{U}
08025474	TryAddRescuedUnitToTakeTargetList	{U}
080254e0	MakeTakeTargetList	{U}
08025644	MakeTargetListForSupport	{U}
080256f0	AddUnitToTargetListIfAllied	{U}
08025728	FillBallistaRangeMaybe	{U}
08025794	TryAddClosedDoorToTargetList	{U}
080257d4	TryAddBridgeToTargetList	{U}
08025814	MakeTargetListForDoorAndBridges	{U}
08025c00	MakeTargetListForSteal	{U}
08025e28	TryAddUnitToHealTargetList	{U}
08025e7c	MakeTargetListForAdjacentHeal	{U}
08025eb0	MakeTargetListForRangedHeal	{U}
08025efc	AddToTargetListIfNotAllied	{U}
08025f44	MakeTargetListForFuckingNightmare	{U}
08025f98	TryAddUnitToRestoreTargetList	{U}
08025fe8	MakeTargetListForRestore	{U}
0802601c	TryAddUnitToBarrierTargetList	{U}
0802606c	MakeTargetListForBarrier	{U}
080260a0	TryAddUnitToRescueStaffTargetList	{U}
080260d8	MakeTargetListForRescueStaff	{U}
08026100	TryAddUnitToSilenceTargetList	{U}
0802614c	TryAddUnitToSleepTargetList	{U}
08026198	TryAddUnitToBerzerkTargetList	{U}
080261e4	MakeTargetListForSilence	{U}
0802620c	MakeTargetListForSleep	{U}
08026234	MakeTargetListForBerserk	{U}
0802625c	TryAddUnitToWarpTargetList	{U}
08026294	MakeTargetListForWarp	{U}
080262c8	MakeTargetListForUnlock	{U}
080262fc	TryAddUnitToHammerneTargetList	{U}
08026354	MakeTargetListForHammerne	{U}
08026388	MakeTargetListForLatona	{U}
080264f0	MakeTargetListForMine	{U}
08026580	MakeTargetListForLightRune	{U}
080265b4	TryAddUnitToDanceRingTargetList	{U}
080265e4	MakeTargetListForDanceRing	{U}
08026628	SetupMapSpritesPalettes	{U}
08026688	SMS_ClearUsageTable	{U}
080266f0	SMS_80266F0	{U}
0802677c	SMS_SomethingGmapUnit	{U}
080267fc	SMS_RegisterUsage	{U}
080268c8	SomethingSMS_16x16_0	{U}
0802695c	SomethingSMS_16x16	{U}
08026a38	SomethingSMS_16x32	{U}
08026b28	SomethingSMS_32x32	{U}
08026f2c	SMS_FlushDirect	{U}
08026f94	SMS_FlushIndirect	{U}
0802713c	GetUnitSpritePaletteIndexWrapper	{U}
08027168	GetUnitMapSpritePaletteIndex	{U}
080271a0	SMS_UpdateFromGameData	{U}
0802736c	SMS_GetNewInfoStruct	{U}
080273a4	SMS_DisplayAllFromInfoStructs	{U}
08027530	DisplayChapterTileMarker	{U}
080275e8	DisplayUnitAdditionalBlinkingIcons	{U}
08027f28	SMS_DisplayOne	{U}
0802810c	HideUnitSMS	{U}
08028130	ShowUnitSMS	{U}
08028144	GetUnitStandingSpriteDataFlagThing	{U}
080281c8	GetROMUnitSupportCount	{U}
080281dc	GetROMUnitSupportingId	{U}
080281f4	GetUnitSupportingUnit	{U}
0802823c	GetSupportLevelBySupportIndex	{U}
08028264	GetUnitTotalSupportLevels	{U}
08028290	AddSupportPoints	{U}
08028310	CanUnitSupportCommandWith	{U}
0802838c	GetUnitStartingSupportValue	{U}
080283a8	GetSupportDataIdForOtherUnit	{U}
08028434	HandleSupportGains	{U}
0802852c	GetSupportBonusEntryPtr	{U}
08028550	StoreAddedAffinityBonusesForSupportLevel	{U}
080285b0	GetUnitSupportBonuses	{U}
0802878c	CanUnitsStillSupportThisChapter	{U}
08028870	CanUnitUseItem	{U}
08028e60	ItemEffect_Call	{U}
08029068	IsGeneratedTargetListEmpty	{U}
0802907c	CanUseHealingItem	{U}
080290a0	CanUsePureWater	{U}
080290b8	CanUseTorch	{U}
080290e4	CanUseAntidote	{U}
080290fc	CanUseChestKey	{U}
08029138	CanUseDoorKey	{U}
0802914c	CanOpenBridge	{U}
08029160	CanUseLockpick	{U}
080291a8	CanUsePromotionItem	{U}
0802940c	CanUseStatBooster	{U}
08029504	CanUseJunaFruit	{U}
0802951c	EndItemEffectSelectionThing	{U}
08029550	GenericStaffSelection_OnSelect	{U}
08029568	PrepareTargetSelectionForRescueStaff	{U}
080295a8	SetupTargetSelectionForGenericStaff	{U}
080295e8	WarpTargetPosSelect_Init	{U}
0802969c	WarpTargetPosSelect_Loop	{U}
080297d0	WarpTargetPosSelect_Confirm	{U}
0802980c	WarpTargetPosSelect_Cancel	{U}
08029840	WarpTargetPosSelect_Destruct	{U}
08029854	WarpTargetSelection_OnSelect	{U}
0802987c	SetupWarpTargetSelection	{U}
080298f0	PrepareTargetSelectionForMineAndLightRune	{U}
08029944	HammerneTargetSelection_OnSelect	{U}
080299b8	SetupHammerneUseSelection	{U}
08029a08	HammerneTargetSelection_OnChange	{U}
08029a2c	HammerneTargetSelection_OnInit	{U}
08029b8c	PrepareTargetSelectionForHeal	{U}
08029bc8	PrepareTargetSelectionForRestoreStaff	{U}
08029ca0	PrepareTargetSelectionForOffensiveStaff	{U}
08029d28	GenericSelection_DeleteBBAndBG	{U}
08029d98	TorchTargetPosSelect_Init	{U}
08029df0	TorchTargetSelection_Loop	{U}
08029ed8	NewTorchStaffSelection	{U}
08029f00	CanUnitUseItemPrepScreen	{U}
0802a2f4	BATTLE_SaveFromBattle	{U}
0802a400	SetupBattleStructFromUnitAndWeapon	{U}
0802a52c	RollRNIfBattleStarted	{U}
0802a558	Roll2RNIfBattleStarted	{U}
0802a584	CopyUnitToBattleStruct	{U}
0802a668	CopyUnitToBattleStructRawStats	{U}
0802a6a0	WriteBattleStructTerrainBonuses	{U}
0802a6dc	BattleSetupTerrainData	{U}
0802a730	SetupBattleWeaponData	{U}
0802a918	SetupBattleBallistaWeaponData	{U}
0802a95c	FillPreBattleStats	{U}
0802a9a8	FillBattleStats	{U}
0802a9d0	BattleApplyMiscBonuses	{U}
0802aa44	BattleLoadDefense	{U}
0802aaa4	LoadRawDefense	{U}
0802aabc	BattleLoadAttack	{U}
0802ab74	BattleLoadAS	{U}
0802abac	BattleLoadHit	{U}
0802abe4	BattleLoadAvoid	{U}
0802ac18	BattleLoadCrit	{U}
0802ac54	BattleLoadDodge	{U}
0802ac60	ComputeHit	{U}
0802ac90	ComputeCrit	{U}
0802acf8	ComputeLethalityChance	{U}
0802ad54	BattleApplySRankBonuses	{U}
0802ad90	BattleComputeBuffStatus	{U}
0802adcc	ComputeSpecialWeapons	{U}
0802ae90	ClearRounds	{U}
0802aed0	MakeBattle	{U}
0802af7c	GetBattleUnitPointers	{U}
0802af90	BattleCheckDoubling	{U}
0802b018	MakeBattleRound	{U}
0802b080	GetBattleHitCount	{U}
0802b094	BattleCheckBrave	{U}
0802b0cc	CheckForTriangleAttack	{U}
0802b1c4	UpdateBattleStats	{U}
0802b1f4	RollForSureShot	{U}
0802b278	RollForPierce	{U}
0802b2e8	RollForGreatShield	{U}
0802b38c	RollForLethality	{U}
0802b3d0	NullifyBattleDamageIfUsingStone	{U}
0802b3ec	GenerateCurrentRoundData	{U}
0802b578	UpdateBattleTriangleAttackData	{U}
0802b600	CurrentRound_ComputeWeaponEffects	{U}
0802b83c	MakeNextBattleHitRound	{U}
0802b9a0	GetStatIncrease	{U}
0802b9c4	GetAutoleveledStat	{U}
0802b9f4	CanUnitNotLevelUp	{U}
0802ba28	CheckForLevelUp	{U}
0802bf24	CheckForLevelUpCaps	{U}
0802c028	SaveUnitsFromBattle	{U}
0802c0b4	GetBattleNewWExp	{U}
0802c1b0	BattleUnit_DidWRankGoUp	{U}
0802c1ec	SaveUnitFromBattle	{U}
0802c300	UpdateBallistaUsesFromBattle	{U}
0802c334	NullSomeStuff	{U}
0802c5b8	HandleSomeExp	{U}
0802c638	GetBattleUnitStaffExp	{U}
0802c6a0	InstigatorAdd10Exp	{U}
0802c76c	BattleReverseWTriangeEffect	{U}
0802c7c0	BattleApplyWeaponTriangle	{U}
0802c844	DoSomeBattleWeaponStuff	{U}
0802c8c4	MakeSnagBattleTarget	{U}
0802c948	FillSnagBattleStats	{U}
0802c984	SaveSnagWallFromBattle	{U}
0802ca14	BeginBattleAnimations	{U}
0802cc1c	SaveInstigatorFromBattle	{U}
0802ccdc	GetStaffAccuracy	{U}
0802ce88	IsCurrentBattleTriangleAttack	{U}
0802ce9c	DidWeaponBreak	{U}
0802cec8	CurrentRound_ComputeDamage	{U}
0802e1c8	ResetTraps	{U}
0802e1f0	GetTrapAt	{U}
0802e24c	GetSpecificTrapAt	{U}
0802e2b8	AddTrap	{U}
0802e2e0	AddTrapExt	{U}
0802e2fc	RemoveTrap	{U}
0802e314	AddFireTrap	{U}
0802e330	AddGasTrap	{U}
0802e350	AddArrowTrap	{U}
0802e388	AddTrap8	{U}
0802e398	AddTrap9	{U}
0802e3a8	AddSnagsAndWalls	{U}
0802e430	ApplyTrapMapChanges	{U}
0802e470	UpdateAllLightRunes	{U}
0802e4ac	GetTrapExt1At	{U}
0802e4f4	GetMapChangesPointerById	{U}
0802e530	GetMapChangesIdAt	{U}
0802e58c	ApplyMapChangesById	{U}
0802e5f8	AddMapChange	{U}
0802e60c	UntriggerMapChange	{U}
0802e638	AreMapChangeTriggered	{U}
0802e660	HideIfUnderRoof	{U}
0802e6f0	AddToTargetListFromPos	{U}
0802e710	AddArrowTrapTargetsToTargetList	{U}
0802e83c	MakeTargetListForTurnTrapDamage	{U}
0802e9a8	CountDownTraps	{U}
0802e9d0	ResetCounterForCountedDownTraps	{U}
0802ea58	AddLightRune	{U}
0802ea90	RemoveLightRune	{U}
0802eac0	HandleTrapDecay	{U}
0802eb10	BattleSomethingTrapChangeTerrain	{U}
0802eb50	NullAllLightRunesTerrain	{U}
0802eb8c	GetTrap	{U}
0802eb98	ExecStandardHeal	{U}
0802ec20	ExecRestore	{U}
0802ecd0	GetRescueStaffeePosition	{U}
0802eef8	ExecRescueStaff	{U}
0802efac	ExecWarpStaff	{U}
0802f010	ExecStatusStaff	{U}
0802f154	ExecFortify	{U}
0802f2b4	ExecHammerne	{U}
0802f380	ExecSomeSelfHeal	{U}
0802fb88	ExecTorchStaff	{U}
0802fc48	ActionStaffDoorChestUseItem	{U}
0802ffb4	ActionPick	{U}
080300f4	SetupGameVBlank6C_TileAnimations	{U}
08030138	GameVBlank6C_Destructor	{U}
08030144	GameVBlank6C_Loop	{U}
08030150	SetupGameVBlank6C	{U}
08030184	BlockGameGraphicsLogic	{U}
080301b8	UnblockGameGraphicsLogic	{U}
080301f4	SetupOAMSpliceForWeather	{U}
08030b34	SetupWeatherGraphics_Maybe	{U}
08030ba4	UpdateWeatherGraphics	{U}
08030c7c	SetupWeather	{U}
08030c94	GetTextSpeed	{U}
08030dd8	ResetGameState	{U}
08030e04	SetupChapter	{U}
08031178	LoadGameCoreGfx2	{U}
080311bc	MakeBMAPMAIN	{U}
080314e4	GetTacticianNameStringPtr	{U}
08031500	GetConvoyItemArray	{U}
08031508	ClearConvoyItems	{U}
0803152c	ShrinkConvoyItemList	{U}
08031570	GetConvoyItemCount	{U}
08031594	AddItemToConvoy	{U}
080315e4	GetConvoyItemSlot	{U}
0803161c	HasConvoyAccess	{U}
080316c4	InitUnitStack	{U}
080316e0	PushUnit	{U}
08031714	LoadPlayerUnitsFromUnitStack	{U}
08031754	LoadPlayerUnitsFromUnitStack2	{U}
08031794	PrepareArenaStruct	{U}
08031874	PrepareArena	{U}
08031890	PrepareArena2	{U}
080318e0	GetClassBestWRankType	{U}
080319d8	IsWeaponMagic	{U}
080319f8	GetNearLevel	{U}
08031a14	GetUnitArenaWeight	{U}
08031a84	LoadArenaOpponentStruct	{U}
08031c10	PrepareBalancedArenaFight	{U}
08031d58	AdjustArenaOpponentPower	{U}
08031fec	StoreRNStateToActionStruct	{U}
08031ffc	LoadRNStateFromActionStruct	{U}
0803200c	ApplyUnitAction	{U}
08032164	ActionRescue	{U}
080321e0	ActionDrop	{U}
08032270	ActionVisitAndSieze	{U}
0803229c	ActionCombat	{U}
08032344	ActionArena	{U}
08032358	ActionDance	{U}
080323a8	ActionTalk	{U}
080323d4	ActionSupport	{U}
0803247c	ActionSteal	{U}
08032554	ActionSummon	{U}
08032580	ActionSummonDK	{U}
08032774	BATTLE_GOTO1_IfNobodyIsDead	{U}
080327b4	DidUnitDie	{U}
080327c8	BATTLE_ProbablyMakesTheDeadUnitDissapear	{U}
08032860	BATTLE_DeleteLinkedMOVEUNIT	{U}
080328d0	BATTLE_HandleItemDrop	{U}
08033258	GetPlayerLeaderUnitId	{U}
0803374c	CanCharacterBePrepMoved	{U}
08033870	InitPrepScreenUnitsAndCamera	{U}
08033c10	PrepScreen6C_StartUnitSwap	{U}
08033ed4	CallCursorShop	{U}
08034214	ShrinkPlayerUnits	{U}
08034314	CanUnitUseVisit	{U}
080343a8	CanUnitUseSeize	{U}
08034428	CanUnitUseAttack	{U}
08034470	CanActiveUnitUseRescue	{U}
0803448c	CanActiveUnitUseTrade	{U}
080344a8	GetUnitCommandUseFlags	{U}
08034684	GetChapterMapChangesPointer	{U}
080346b0	GetChapterEventDataPointer	{U}
08034704	GetSomethingRelatedToCurrentDifficulty	{U}
080347a8	NewUnitInfoWindow	{U}
080347d4	UnitInfoWindow_PositionUnitName	{U}
0803483c	UnitInfoWindow_DrawBase	{U}
080349d4	GetUnitInfoWindowX	{U}
08034c18	NewUnitInfoWindow_WithAllLines	{U}
08034e5c	DrawHammerneUnitInfoWindow	{U}
08035204	SetupUnitRescueWindow	{U}
08035708	NewBottomHelpText	{U}
08035748	DeleteEach6CBB	{U}
08036594	BattleForecase_SetupLabelText	{U}
0803666c	AddWeaponStatsAfterRound	{U}
080366a0	BKSEL_SetupHitAndSuchStats	{U}
08036d9c	BKSEL_InitGfx	{U}
08036e1c	BKSEL_Destructor	{U}
080372d4	MapEventEngineExists_	{U}
0803730c	NewBattleForecast	{U}
080375e8	GetPickTrapType	{U}
08037660	ExecTrap	{U}
08037744	HandlePostActionTraps	{U}
08037840	LoadTrapData	{U}
08037910	LoadChapterBallistae	{U}
08037928	AddGorgonEggTrap	{U}
0803798c	GetBallistaItemAt	{U}
080379d4	GetSomeBallistaItemAt	{U}
08037a04	AddBallista	{U}
08037a34	RideBallista	{U}
08037a6c	TryRemoveUnitFromBallista	{U}
08037aa8	IsBallista	{U}
08037b10	GetBallistaItemUses	{U}
08037b44	GetCurrentPromotedLevelBonus	{U}
08037b64	CanUnitSeize	{U}
08038208	PushGlobalTimer	{U}
0803821c	PopGlobalTimer	{U}
08039788	Loop6C_E_CPORDER	{U}
080399b0	GetCurrentPhaseUnitCount	{U}
08039abc	CPORDER_End	{U}
08039b00	Call6C_E_CPDECIDE	{U}
08039c00	ClearSomeAIRelatedStruct	{U}
0803a07c	ApplyAICombat2	{U}
0803a308	ApplyAICombat	{U}
0803a358	ApplyAIDKSummonAction	{U}
0803a390	ApplyAIPickAction	{U}
0803a4e4	PrepareAIAction	{U}
0803b558	FillMovementAndRangeMapForItem	{U}
0803c064	SetupUnitInventoryAIFlags	{U}
0803c120	SetupUnitStatusStaffAIFlags	{U}
0803c168	SetupUnitHealStaffAIFlags	{U}
0803c1b4	SaveNumberOfAlliedUnitsIn0To8Range	{U}
0803c258	CharStoreAI	{U}
0803e640	UpdateAllPhaseHealingAIStatus	{U}
0803e698	UpdateUnitHealingAIStatus	{U}
0803e878	GetEscapePointStructThingMaybe	{U}
0803ec98	StoreItemAndGetUnitAttack	{U}
08042e98	CheckGameLinkArenaBit	{U}
080450ac	NameSelect_DrawName	{U}
08045c14	New6C_SIOMAIN2	{U}
0804e078	LoadOldUIPal	{U}
0804e0a8	LoadNewUIPal	{U}
0804e0d8	LoadOldUIImage	{U}
0804e108	LoadNewUIImage	{U}
0804e1bc	WriteUIWindowTileMap	{U}
0804e314	ClearTileMapRect	{U}
0804e368	MakeUIWindowTileMap_BG0BG1	{U}
0804eb54	LoadOldUIGfx	{U}
0804eb98	NewMenu_DefaultAdjusted	{U}
0804ebc8	NewMenu_DefaultChild	{U}
0804ebe4	NewMenu_Default	{U}
0804ec34	NewMenu_804EC34	{U}
0804ec98	NewMenu_BG0BG1	{U}
0804ecb0	NewMenu	{U}
0804eea8	EndMenu	{U}
0804ef20	EndAllMenus	{U}
0804ef38	Menu_CallDefinedConstructors	{U}
0804ef70	Menu_Draw	{U}
0804f0e0	Menu_DrawHoverThing	{U}
0804f164	Menu_Idle	{U}
0804f294	Menu_HandleDirectionInputs	{U}
0804f374	Menu_HandleSelectInputs	{U}
0804f400	Menu_GetCursorGfxCurrentPosition	{U}
0804f448	MenuCommand_UsabilityAlways	{U}
0804f44c	UsabilityGrayed	{U}
0804f450	UsabilityNever	{U}
0804f580	Menu_CallTextBox	{U}
0804f60c	MarkSomethingInMenu	{U}
0804f64c	NewMenu_AndDoSomethingCommands	{U}
0804f6a4	Menu_UpdateMovingCursorGfxPosition	{U}
0804f6f8	ClearMenuRelatedList	{U}
0804f8a4	InitTargets	{U}
0804f8bc	AddTarget	{U}
0804f910	LinkTargets	{U}
0804f958	TargetSelection_GetRealCursorPosition	{U}
0804f96c	TargetSelection_Loop	{U}
0804fa3c	NewTargetSelection	{U}
0804faa4	NewTargetSelection_Specialized	{U}
0804fab8	EndTargetSelection	{U}
0804faec	TargetSelection_HandleMoveInput	{U}
0804fb64	TargetSelection_HandleSelectInput	{U}
0804fbfc	GetFarthestTargetIndex	{U}
0804fc5c	LinkTargetsOrdered	{U}
0804fd00	GetLinkedTargetList	{U}
0804fd10	GetFirstTargetPointer	{U}
0804fd34	GetTarget	{U}
0804fd60	NewEkrBattleDeamon	{U}
0804fd8c	EndEkrBattleDeamon	{U}
0804fda0	IsBattleDeamonActive	{U}
0804fdbc	ekrBattleDeamon_Destructor	{U}
0804fdd4	NewEkrBattle	{U}
0804fe40	InBattleMainRoutine	{U}
0804fee4	MainUpdate_804FEE4	{U}
0804ff64	ekrBattle_Init	{U}
08050000	ekrBattle_8050000	{U}
08050054	ekrBattle_8050054	{U}
080500f0	ekrBattle_80500F0	{U}
08050134	ekrBattle_8050134	{U}
08050158	ekrBattle_8050158	{U}
08050174	ekrBattle_8050174	{U}
08050224	ekrBattle_8050224	{U}
08050244	ekrBattle_8050244	{U}
08050290	ekrBattle_8050290	{U}
080502b0	ekrBattle_80502B0	{U}
08050304	ekrBattle_8050304	{U}
08050338	ekrBattle_8050338	{U}
08050360	ekrBattle_8050360	{U}
080503ec	ekrBattle_80503EC	{U}
08050400	ekrBattle_8050400	{U}
08050440	ekrBattle_8050440	{U}
0805046c	ekrBattle_805046C	{U}
080505ec	ekrBattle_80505EC	{U}
08050600	ekrBattle_8050600	{U}
08050684	ekrBattle_8050684	{U}
080506c8	ekrBattle_80506C8	{U}
080508f0	ekrBattle_80508F0	{U}
08050940	ekrBattle_8050940	{U}
080509a8	ekrBattle_80509A8	{U}
08050a84	ekrBattle_8050A84	{U}
08050ab8	ekrBattle_8050AB8	{U}
08050b08	ekrBattle_8050B08	{U}
08050c34	ekrBattle_CheckForLevelup_8050C34	{U}
08050c6c	ekrBattle_WaitForLevelup_8050C6C	{U}
08050c90	ekrBattle_MakePopups	{U}
08050ca8	ekrBattle_WaitForPopup	{U}
08050ccc	ekrBattle_8050CCC	{U}
08050cf8	ekrBattle_8050CF8	{U}
08050d88	ekrBattle_8050D88	{U}
08050da8	ekrBattle_8050DA8	{U}
08050de4	NewEkrLvlupFan	{U}
08050ef8	NewEkrGauge	{U}
0805116c	EndEkrGauge	{U}
08051180	EkrGauge_8051180	{U}
08051190	EkrGauge_8051190	{U}
080511a0	EkrGauge_80511A0	{U}
080511b0	EkrGauge_80511B0	{U}
080511c0	EkrGauge_80511C0	{U}
080511d0	EkrGauge_80511D0	{U}
080511e4	EkrGauge_80511E4	{U}
080511f8	EkrGauge_80511F8	{U}
08051208	EkrGauge_8051208	{U}
08051218	EkrGauge_8051218	{U}
08051228	EkrGauge_8051228	{U}
08051284	ekrGauge_Loop	{U}
08051ac4	NewEkrDispUP	{U}
08051b48	EkrDispUP_8051B48	{U}
08051bb0	ekrDispUP_Loop	{U}
08053f10	StartSpellBG_FLASH	{U}
08054a1c	NewEfxStatusUnit	{U}
08054b54	DeleteEach6C_efxStatusUnit	{U}
08054fa8	NewEfxSpellCast	{U}
08055160	SetSomethingSpellFxToTrue	{U}
0805516c	SetSomethingSpellFxToFalse	{U}
08055178	ClearBG1Setup	{U}
08055188	ClearBG1	{U}
08055278	ThisMakesTheHPInSpellAnimGoAway	{U}
080557d8	StoreSpellAnimTilesOBJ	{U}
08055800	StoreSpellAnimPaletteOBJ	{U}
0805581c	StoreSpellAnimTilesBG	{U}
08055844	StoreSpellAnimPaletteBG	{U}
0805598c	GetAnimationStartFrameMaybe	{U}
08055bd4	BeginAnimsOnBattleAnimations	{U}
08055c68	MainUpdate_8055C68	{U}
08055cdc	NewEkrBattleStarting	{U}
08056d24	NewEkrWindowAppear	{U}
08056e10	NewEkrNamewinAppear	{U}
08056ff8	PrepareBattleGraphicsMaybe	{U}
08057ff8	GetSpellAnimId	{U}
08058848	GetBattleAnimationId	{U}
08058960	SomethingFilterBattleAnimId	{U}
080589b4	GetAllegienceId	{U}
08058a0c	GetSomeAISRelatedIndexMaybeByID	{U}
08058a8c	IsItemDisplayedInBattle	{U}
08058bc8	BattleAIS_ExecCommands	{U}
0805990c	NewEkrChienCHR	{U}
0805993c	RegisterAISSheetGraphics	{U}
0805a16c	GetAISSubjectId	r0=@AnimationInterpreter	{U}
0805a184	GetSomeBoolean	{U}
0805a2b4	GetCoreAIStruct	{U}
0805a310	GetSomeAISRelatedIndexMaybe	{U}
0805a9c0	NewEfxAnimeDrvProc	{U}
0805a9f4	ExecAllAIS	{U}
0805b01c	SetBattleAnimArenaFlag	{U}
0805b0a8	BeginAnimsOnBattle_Arena	{U}
0805b0f0	NewEkrTogiInitPROC	{U}
0805b278	NewEkrTogiEndPROC	{U}
0805b34c	NewEkrTogiColor	{U}
0805b380	EndEkrTogiColor	{U}
0805b3cc	StartSpellAnimation	{U}
0805bc80	StartSpellThing_MagicQuake	{U}
0805bcc4	Loop6C_efxMagicQUAKE	{U}
0805be90	StartSpellAnimDummy	{U}
0805beb4	Loop6C_efxDummymagic	{U}
0805bf08	StartSpellAnimHandAxe	{U}
0805c264	StartSpellAnimArrow	{U}
0805c3f0	StartSpellAnimJavelin	{U}
0805c934	StartSpellAnimSong	{U}
0805cbdc	StartSpellAnimDance	{U}
0805d064	StartSpellAnimFireBreath	{U}
0805d388	StartSpellAnimIceBreath	{U}
0805d4d0	StartSpellAnimDarkBreath	{U}
0805d508	Loop6C_efxDarkbreath	{U}
0805d7d8	StartSpellAnimThunder	{U}
0805d814	Loop6C_efxThunder	{U}
0805dad4	StartSpellAnimFire	{U}
0805db18	StartSpellAnimElfire	{U}
0805db5c	Loop6C_efxFire	{U}
0805dcc4	Loop6C_efxFireBG	{U}
0805ddf0	StartSubSpell_efxFireHITBG	{U}
0805ded8	StartSubSpell_efxElfireBG	{U}
0805dfa4	StartSubSpell_efxElfireBGCOL	{U}
0805e030	StartSubSpell_efxElfireOBJ	{U}
0805e0e4	StartSpellAnimFimbulvetr	{U}
0805f354	StartSpellAnimNosferatu	{U}
0805f390	Loop6C_efxResire	{U}
0805fae0	StartSpellAnimPurge	{U}
0805fe84	StartSpellAnimDivine	{U}
0805fec0	DivineSfxLoop	{U}
080608a4	StartSpellAnimFenrir	{U}
08061024	StartSpellAnimHeal	{U}
08061158	StartSpellAnimMend	{U}
080612bc	StartSpellAnimRecover	{U}
080623e0	StartSpellAnimSilence	{U}
08062678	StartSpellAnimSleep	{U}
08062998	StartSpellAnimHammerne	{U}
08062c14	StartSpellAnimBerserk	{U}
08063480	StartSpellAnimShine	{U}
08063974	StartSpellAnimLuna	{U}
08064e74	StartSpellAnimAura	{U}
080657d4	StartSpellAnimIvaldi	{U}
08065810	Loop6C_efxIvaldi	{U}
080659ac	StartSpellBG_IvaldiBG1	{U}
08065a10	Loop6C_efxIvaldiBG1	{U}
08065a80	StartSpellBG_IvaldiBG2	{U}
08065aec	Loop6C_efxIvaldiBG2	{U}
08065b54	StartSpellBG_IvaldiBG3	{U}
08065bb8	Loop6C_efxIvaldiBG3	{U}
08065c38	StartSpellBG_IvaldiBG4	{U}
08065d84	PrepareSomeIvaldiParticleGraphics	{U}
08065da4	StartSpellOBJ_IvaldiFall	{U}
08065f10	StartSpellOBJ_IvaldiSideWash	{U}
08065f64	Loop6C_efxIvaldiOBJSideWash	{U}
080674d4	StartSpellAnimStone	{U}
08067798	StartSpellAnimEvilEye	{U}
08067b7c	StartSpellAnimNaglfar	{U}
08067bb8	Loop6C_efxNaglfar	{U}
08067e1c	Loop6C_efxNaglfarBG	{U}
08067ee8	Loop6C_efxNaglfarBG2	{U}
08069ec4	StartSpellAnimCrimsonEye	{U}
08070d7c	FillBGRect	{U}
08071990	SomePlaySound_8071990	{U}
080719f0	Loop6C_efxSoundSE	{U}
080729e0	EkrClasschgFinished	{U}
08072a00	EndEkrClasschg	{U}
08072a14	NewEkrClassChg	{U}
08072dc8	EndEfxStatusUnit	{U}
080734f8	DoesEkrLevelUpSomething	{U}
08073518	EndEkrLevelUp	{U}
08073988	NewEkrLevelup	{U}
08074f5c	NewEkrTriangle	{U}
08075b20	DoesBattlePopupExist	{U}
08075b3c	DeleteAnimsOnPopup	{U}
08075b78	MakeBattlePopupTileMapFromTSA	{U}
08075ca8	DrawBattlePopup	{U}
08075f18	Battle_MakePopups	{U}
0807606c	BattlePopup_Wait16Frames	{U}
08076088	ekrPopup_DrawWRankUp	{U}
080760b0	ekrPopup_WaitWRankUp	{U}
080760ec	ekrPopup_DrawWRankUp2	{U}
08076114	ekrPopup_WaitWRankUp2	{U}
08076150	ekrPopup_DrawWpnBroke	{U}
08076178	ekrPopup_WaitWpnBroke	{U}
080761b4	ekrPopup_DrawWpnBroke2	{U}
080761dc	ekrPopup_WaitWpnBroke2	{U}
0807621c	ekrPopup_MarkEnd	{U}
08076330	BeginAnimsOnBattle_Hensei	{U}
0807636c	NewEkrHenseiInitPROC	{U}
08078214	GetSpellAssocStructPtr	{U}
08078248	GetSpellAssocCharCount	{U}
08078268	GetSpellAssocAlt6CPointer	{U}
08078278	GetSpellAssocReturnBool	{U}
08078288	GetSpellAssocFacing	{U}
08078298	GetSpellAssocFlashColor	{U}
080782ec	GenerateMonsterLevel	{U}
08078324	GenerateMonsterClass	{U}
08078350	GenerateMonsterItems	{U}
0807840c	ResetMoveunitStructs	{U}
08078428	Make6CMOVEUNITForUnit	{U}
08078464	MakeMOVEUNITForMapUnit	{U}
080784e4	MOVEUNIT6C_SetCameraFollow	{U}
080784ec	MOVEUNIT6C_UnsetCameraFollow	{U}
080784f4	Make6CMOVEUNITForUI	{U}
08078540	NewMOVEUNIT	{U}
08078694	MOVEUNIT6C_SetSpriteDirection	{U}
080786bc	MOVEUNIT6C_SetDefaultSpriteDirection	{U}
080786e8	_MOVEUNIT6C_SetDefaultFacingDirection	{U}
08078700	_MOVEUNIT6C_ChangeFutureMovement	{U}
08078720	DoesMoveunitExist	{U}
08078738	IsThereAMovingMoveunit	{U}
08078790	MOVEUNIT6C_ChangeFutureMovement	{U}
080787fc	Init6C_89A2938	{U}
08078810	Call89A2938_PlaySound1	{U}
08078824	Call89A2938_PlaySound2	{U}
0807883c	NewSoundStepPlay6C	{U}
08078888	__MOVEUNIT6C_PlaySoundStepByClass	{U}
08078898	Moveunit_ExecMoveCommand	{U}
08078a14	DisplayFogThingMaybe	{U}
08078a64	Call6C_89A2968	{U}
08078bcc	Loop6C_89A2968_2	{U}
08078bfc	Does6C_89A2968Exist	{U}
08078c14	MOVU_Call5_WaitForSomething	{U}
08078c30	MOVU_Call4_SetState2	{U}
08078c38	MOVU_Call3_Wait	{U}
08078c60	MOVU_Call2_Moving	{U}
08078d6c	MOVEUNIT6C_PlaySoundStepByClass	{U}
08079030	_6CMOVEUNIT_Loop	{U}
08079090	_6CMOVEUNIT_Destructor	{U}
080790a4	ClearMOVEUNITs	{U}
080790b4	EndMoveunitMaybe	{U}
080790c0	Delete6C__	{U}
080790e0	BlockAll6CMarked4	{U}
080790ec	UnblockAll6CMarked4	{U}
0807916c	IsSomeMOVEUNITRelatedStructAvailable	{U}
08079190	ResetAllMoveunitAnims	{U}
080791cc	GetNextMoveunitEntryStruct	{U}
0807924c	GetMOVEUNITDisplayPosition	{U}
080792f8	UpdateMOVEUNITGfx_Idle	{U}
080793a4	UpdateMOVEUNITGfx_Movement	{U}
0807947c	MOVEUNIT6C_GetMovementSpeed	{U}
08079558	GetMOVEUNITGraphicsBuffer	{U}
08079574	GetMovingMapSpriteGfxPtrFromMOVEUNIT	{U}
08079588	MMS_GetROMTCS	{U}
0807959c	StartMoveUnitDeathBlend2	{U}
08079618	BlendTimer6C_MainLoop	{U}
080797d4	SetMOVEUNITField40To1	{U}
080797e4	MOVEUNIT6C_SetDisplayPos	{U}
080798b0	SetupSomeMoveunitAnim	{U}
080798e0	TCS_HaltAnim2	{U}
08079944	MOVEUNIT_Begin20FramesFastAnim	{U}
08079968	TCS_HaltAnim	{U}
08079af8	SetAllMOVEUNITField44To1	{U}
08079b10	SetMOVEUNITField44To1	{U}
08079b18	ChangeMOVEUNITDataMaybe	{U}
08079b90	GetMoveunitByIndex	{U}
08079bb8	GetExistingMoveunitForUnit	{U}
08079cd8	CopyEventMoveToBuffer	{U}
08079d40	ClearEventMoveBuffer	{U}
08079e78	MuCtr_SetupWithEventMoveBuffer	{U}
08079f84	MuCtrExists	{U}
08079f9c	SetAllMOVEUNITField44To1_	{U}
0807a014	MoveUnit_	{U}
0807a054	GetPreferredPositionForUNIT	{U}
0807a4e8	GetAdjustedPositionForNewUnit	{U}
0807a72c	DisplayWpnBrokePopup	{U}
0807a770	BattleUnit_ShouldDisplayWpnBroke	{U}
0807a794	DisplayWRankUpPopup	{U}
0807a7d8	BattleUnit_ShouldDisplayWRankUp	{U}
0807a800	_InitFontForUIDefault	{U}
0807a80c	MapAnim_Cleanup	{U}
0807a838	MapAnim_AdvanceBattleRound	{U}
0807a894	MapAnim_PrepareNextBattleRound	{U}
0807a8f0	MapAnim_DisplayRoundAnim	{U}
0807a904	MapAnim_ShowPoisonEffectIfAny	{U}
0807a940	MapAnim_MoveCameraOntoSubject	{U}
0807a95c	MapAnim_MoveCameraOntoTarget	{U}
0807abb8	MapAnim_CallBattleQuoteEvents	{U}
0807acd0	PlaySoundIdA0	{U}
0807ad08	New6C_SummonGfx_FromActionPos	{U}
0807b334	MakeBattleMOVEUNIT	{U}
0807b3bc	SetBattleAnimFacing	{U}
0807b464	SetupBattleMOVEUNITs	{U}
0807b6e4	BeginMapAnimForSteal	{U}
0807b740	BeginMapAnimForSummon	{U}
0807b798	BeginMapAnimForSummonDK	{U}
0807b854	BeginBattleMapAnims	{U}
0807b8d4	SetupMapAnimSpellData	{U}
0807b900	SetupMapBattleAnim	{U}
0807b9b8	GetFacingDirection	{U}
0807bbb8	DeleteBattleAnimInfoThing	{U}
0807bbc8	NewMapBattleInfoThing	{U}
0807cb24	MapAnim_BeginMISSAnim	{U}
0807cb80	MapAnim_BeginNODAMAGEAnim	{U}
0807cbdc	MapAnim_BeginWallBreakAnim	{U}
0807cc28	WallBreakAnim_Init	{U}
0807cc78	NewMapPoisonEffect	{U}
0807ccc0	MapAnim_BeginPoisonAnim	{U}
0807d82c	NewMapAnimEffectAnimator	{U}
0807daa8	StartMapAnimTargetUnitWarpRingProcs	{U}
0807ec08	GetSomeStatUp	{U}
0807ed30	GetSomeStatBase	{U}
0807f614	NewBG0Shaker	{U}
0807f628	BG0Shaker_Init	{U}
0807f630	BG0Shaker_Loop	{U}
0807f6c0	LoadSparkGfx	{U}
0807f7f8	StartStarRotationEffect	{U}
0807f838	StartStarExplosionEffect	{U}
0807f858	StartStarImplosionEffect	{U}
08080d2c	New6C_SummonGfx	{U}
08081260	GetItemAnim6CCode	{U}
08081278	MapAnim_AnimateSubjectIdle	{U}
0808129c	MapAnim_SubjectResetAnim	{U}
080813f8	MapAnim_BeginSubjectFastAnim	{U}
080814d4	MapAnim_MoveSubjectsTowardsTarget	{U}
08081534	MapAnim_MoveSubjectsAwayFromTarget	{U}
08081594	MapAnim_MoveCameraOnSubject	{U}
080815c0	MapAnim_MoveCameraOnTarget	{U}
0808161c	MapAnim_BeginRoundSpecificAnims	{U}
08081914	MapAnim_WaitForHPToEndChangingMaybe	{U}
08081930	MapAnim_PoisonEffectOnTarget	{U}
08082e80	CallEventsFromBuffer	{U}
08082ec4	CheckForEvents	{U}
08082f28	CheckForNextEvents	{U}
080831ac	IsThereClosedChestAt	{U}
080831f0	IsThereClosedDoorAt	{U}
080832d8	CheckEventId3	{U}
08085640	GetTrapPointer	GetCurrentChapterBallistaePtr	{J}
08085658	GetTrapAdditionalHardModePointer	GetCurrentChapterBallistae2Ptr	{J}
08083348	GetChapterAllyUnitDataPointer	{U}
080834b0	ShouldCallBattleQuote	{U}
08083504	CallBattleQuoteEventsIfAny	{U}
08083834	CheckAFEV	{U}
08083864	CheckTURN	{U}
080838ac	CheckCHAR	{U}
080838fc	CheckCHARASM	{U}
08083938	CheckLOCA	{U}
08083978	CheckVILL	{U}
0808398c	CheckCHES	{U}
080839c8	CheckDOOR	{U}
08083a58	CheckSHOP	{U}
08083aa4	CheckAREA	{U}
08083bd8	SetLocalEventId	{U}
08083c0c	UnsetLocalEventId	{U}
08083c48	ClearLocalEvents	{U}
08083c60	CheckLocalEventId	{U}
08083ca0	SetGlobalEventId	{U}
08083cd8	UnsetGlobalEventId	{U}
08083d6c	CheckGlobalEventId	{U}
08083dc0	GetGlobalEventIdStorage	{U}
08083dc8	GetGlobalEventIdStorageSize	{U}
08083dcc	GetLocalEventIdStorage	{U}
08083dd4	GetLocalEventIdStorageSize	{U}
08083e64	TryCallSelectEvents_u1C	{U}
08084078	GetAvailableLocaCommandAt	{U}
08084330	CheckForWaitEvents	{U}
080843c0	RunWaitEvents	{U}
0808445c	TryCallSelectEvents	{U}
0808464c	GetBattleQuoteEntry	{U}
08084800	IsCharacterForceDeployed_	{U}
08084858	IsSethLArachelMyrrhInnes	{U}
08084ee8	AreAnyEnemyUnitDead	{U}
08084f1c	GetDeadEnemyAmount	{U}
08084f6c	IsCharDeadAsNonPlayerUnit	{U}
08085484	ResetAllPlayerUnitState	{U}
08085970	SetEventId_0x84	{U}
0808597c	UnsetEventId_0x84	{U}
08086414	HandleCh5xUnits_Start	{U}
08086464	HandleCh5xUnits_End	{U}
080864cc	CallRouteSplitMenu	{U}
08086514	MenuCommand_DrawRouteSplit	{U}
08086564	Command_EirikaMode	{U}
08086580	Command_EphraimMode	{U}
08086dbc	EndBG3Slider	{U}
08086dcc	GetSomeUnitId	{U}
080870bc	DrawStatScreenBar	{U}
08087698	DrawUnitScreenSupportList	{U}
08087788	DrawUnitWeaponRank	{U}
08089164	New6CRText	{U}
0808948c	Loop6C_8A00B20_UpdateOAMData	{U}
08089804	LoadDialogueBoxGfx	{U}
0808bbcc	GetCameraMovementSpeedMaybe	{U}
0808bcf8	Loop6CUI1_DisplayTransition	{U}
0808be70	Loop6CUI1_HideTransition	{U}
0808c45c	DrawMinimugBoxMaybe	{U}
0808c5d0	InitMinimugBoxMaybe	{U}
0808ccc8	Loop6CUI1_Hidden	{U}
0808cd74	Loop6CUI1_Displayed	{U}
0808ce9c	Init6CUI2	{U}
0808cec8	Loop6CUI2	{U}
0808cfc4	InitPlayerPhaseInterfaceMaybe	{U}
0808d13c	New6CPPInterfaceConstructor	{U}
0808d150	DeletePlayerPhaseInterface6Cs	{U}
0808d288	Init6CPI	{U}
0808d47c	Loop16CPI	{U}
0808d6d4	Loop26CPI	{U}
0808d71c	Loop46CPI	{U}
0808d77c	__malloc_unlock_0	{U}
0808d784	Loop36CPI	{U}
0808dae4	MinimalVBlankHandler	{U}
0808e764	NewChapterStatusScreen	{U}
080952d0	__malloc_unlock_1	{U}
080953f0	IsCharacterForceDeployed	{U}
0809545c	SomeLeftoverFunctionThatReturns0	{U}
08095460	IsUnitInCurrentRoster	{U}
08095748	SortPlayerUnitsForPrepScreen	{U}
08095a38	EndBG3Slider_	{U}
08096684	NewPrepScreenTraineePromotionManager	{U}
08096698	PrepScreenTraineePromotionManagerExists	{U}
08097684	Delete6CMenuScroll	{U}
08097698	Make6CMenuScroll	{U}
080981e4	SomethingPrepListRelated	{U}
0809839c	CanUnitPrepScreenUse	{U}
0809d2c4	StoreConvoyWeaponIconGraphics	{U}
080a075c	__malloc_unlock_2	{U}
080a2d28	LoadSomeUnitStatThingUnlockIdk	{U}
080a2da8	SaveSomeUnitStatThingUnlockIdk	{U}
080a2ed4	GetSaveDataOffsetPointer	{U}
080a3064	GetSaveDataLocation	{U}
080a3130	SaveLocalEventIndexes	{U}
080a3150	SaveGlobalEventIndexes	{U}
080a3170	LoadLocalEventIds	{U}
080a3198	LoadGlobalEventIds	{U}
080a31e4	SaveConvoyItems	{U}
080a326c	LoadConvoyItems	{U}
080a37a8	SetSomeUnitStatThingUnlockMaybeIdk	{U}
080a386c	__malloc_unlock_3	{U}
080a421c	LoadBWLEntries	{U}
080a4248	LoadSomeTable	{U}
080a4264	SaveBWLEntries	{U}
080a4288	SaveChapterWinData	{U}
080a429c	GetChapterWinDataEntry	{U}
080a42bc	GetNextChapterWinDataEntryIndex	{U}
080a42ec	GetWonChapterCount	{U}
080a4350	RegisterChapterTimeAndTurnCount	{U}
080a43d8	GetGameTotalTurnCount	{U}
080a4404	DoesThisChapterCount	{U}
080a4448	GetGameTotalTime	{U}
080a4488	GetGameTotalTurnCount2	{U}
080a4684	BWL_AddWinOrLossIdk	{U}
080a474c	BWL_IncrementMoveValue	{U}
080a478c	BWL_IncrementStatScreenViews	{U}
080a47cc	BWL_IncrementDeployCountMaybe	{U}
080a481c	BWL_AddTilesMoved	{U}
080a487c	BWL_AddExpGained	{U}
080a48dc	StoreSomeUnitSetFlags	{U}
080a4a34	BWL_AddFavoritismValue	{U}
080a4cfc	BWL_GetEntry	{U}
080a4d34	Set0203EDB4	{U}
080a4d40	Save0203EDB4	{U}
080a4d5c	Load0203EDB4	{U}
080a5010	SaveGame	{U}
080a5128	LoadGame	{U}
080a533c	SaveUnit	{U}
080a5794	LoadSavedUnit	{U}
080a59e0	SaveRNGState_Maybe	{U}
080a5a48	SaveSuspendedGame	{U}
080a5c14	LoadSuspendedGame	{U}
080a5e10	PackUnitStructForSuspend	{U}
080a6118	UnpackUnitStructFromSuspend	{U}
080a6370	SaveTrapStructs	{U}
080a9024	Loop6C_savemenu	{U}
080aa4c0	Make6C_savemenu	{U}
080aa518	Make6C_savemenu2	{U}
080aa52c	savemenu_SetDifficultyChoice	{U}
080ab300	New6C_savedraw	{U}
080ac3e0	NewNewGameDifficultySelect	{U}
080ad2e8	_CallDifferedLoop	{U}
080ad2f8	Get6CDifferedLoop6C	{U}
080ad31c	DeleteEach6CDifferedLoop	{U}
080ad338	Find6CDifferedLoop	{U}
080ad5d8	EnableAllGfx	{U}
080ae18c	FadeInOut_Init	{U}
080ae1a0	FadeIn_Loop	{U}
080ae200	FadeOut_Loop	{U}
080ae248	FadeInOut_DisableGfx	{U}
080ae2a0	FadeInExists	{U}
080ae2b8	FadeOutExists	{U}
080ae2d0	NewFadeIn	{U}
080ae2f4	NewFadeOut	{U}
080b29f8	Make6C_opinfo	{U}
080b4154	Shop6C_GetPortraitIndex	{U}
080b41e0	MakeShopArmory	{U}
080b4200	MakeShopVendor	{U}
080b4240	MakeShop	{U}
080b8a18	WorldMap_Destruct	{U}
080b8d5c	SetupGraphicSystemsForWorldMap	{U}
080b8fa4	DeployEveryUnit	{U}
080b9a10	WorldMap_HideEverything	{U}
080b9b38	WorldMap_InitChapterTransition	{U}
080b9cb0	WorldMap_WaitForChapterIntroEvents	{U}
080b9f08	DoNothing	{U}
080ba024	EndWM	{U}
080ba2e4	NewWorldMap	{U}
080ba334	WorldMap_SetupChapterStuff	{U}
080ba3d4	CallChapterWMIntroEvents	{U}
080ba718	NewMapScreenVSynce	{U}
080ba758	MapScreen_OnDelete	{U}
080ba764	MapScreen_Init	{U}
080babf0	NewMapScreen	{U}
080bac1c	MMS_GetGfx	{U}
080bac30	MMS_GetROMTCS2	{U}
080bac44	GetMapUnitMMSGfxBuffer	{U}
080bac58	GmapUnit_Destruct	{U}
080bac64	GmapUnit_Init	{U}
080bac78	GmapUnit_Loop	{U}
080badd4	GetPaletteIdForAllegience	{U}
080badf0	NewMapUnit	{U}
080baf0c	MapUnitC_DeleteGmapUnit	{U}
080baf34	MapUnitC_SetPosition	{U}
080baf84	MapUnitC_SetTCSAnim	{U}
080bb018	MapUnitC_SetTCSOAMIndex	{U}
080bb038	MapUnitC_SetAllegienceColorIndex	{U}
080bb0a4	MapUnitC_MarkSomething	{U}
080bb1a0	GmapUnitContainer_Destruct	{U}
080bb1c8	GmapUnitContainer_Init	{U}
080bb1e8	NewGmapUnitContainer	{U}
080bb20c	GmapUnitFade_Destruct	{U}
080bb264	GmapUnitFade_Init	{U}
080bb348	GmapUnitFade_Loop	{U}
080bb5b0	WMLoc_GetChapterId	{U}
080bb5e4	WMLoc_GetNextLocId	{U}
080bb718	GmapScreen2_Destruct	{U}
080bb724	GmapScreen2_Init	{U}
080bb798	GmapScreen2_Loop	{U}
080bba84	GmapCursor_Init	{U}
080bbad4	GmapCursor_Destruct	{U}
080bbbc4	NewGmapCursor	{U}
080bc0bc	MapRoute_StartTransition	{U}
080bc184	MapRoute_EnableBGSyncs	{U}
080bc1b8	MapRoute_TransitionLoop	{U}
080bc228	MapRoute_TransitionEnd	{U}
080bc29c	MapRoute_BeginRouteTransition	{U}
080bc2dc	MapRoute_80BC2DC	{U}
080bc3a4	NewMapRoute	{U}
080bc8bc	SetupNewWMRoute	{U}
080bc8ec	WM_RemovePath	{U}
080bd068	GetChapterThing	{U}
080bd2ac	GetCharacterClassId	{U}
080bd2ec	MapMUPrim_MakeUnitForChar	{U}
080bd374	MapMUPrim_MakeUnitForClass	{U}
080bd3e8	MapMUPrim_RemoveLinkedMapUnit	{U}
080bdc04	MapMU_FillPrim	{U}
080bdc28	NewMapMU	{U}
080bdc3c	MapMU_SetUnit	{U}
080bdd2c	MapMU_RemoveUnit	{U}
080be0e8	MapMU_SetUnitTCSOAMIndex	{U}
080be108	MapMU_80BE108	{U}
080be534	MapMU_SetUnitClass	{U}
080be550	MapMU_SetUnitChar	{U}
080bf4d0	WM_PutClassSprite	{U}
080bf504	WM_PutCharSprite	{U}
080bf538	WM_RemoveUnit	{U}
080bf58c	WM_DrawPath	{U}
080c01dc	NewMapMuEntry	{U}
080c0858	GetWMCenteredCameraPosition	{U}
080c2420	Make6C_Gmap_RM	{U}
080c24ac	GetWMDisplayPosition	{U}
080c6738	AddSomeChild6C	{U}
080c674c	DeleteSome6C	{U}
080c6760	StorePaletteToBufferMaybe	{U}
080c6a54	Initialize6CIntroSequence	{U}
080c6e90	Until6C2AIs8Callback	{U}
080cc1f8	PrepareHealthAndSafetyScreen	{U}
080cc468	MakePromotionScreen	{U}
080cc498	Make6C_PromotionMain	{U}
080cc904	PromotionInit_SetNullState	{U}
080cc910	PromotionInit_Loop	{U}
080ccd34	Make6C_PromotionSub	{U}
080cdb34	PromotionCommand_OnSelect	{U}
080cdcc4	PromotionCommand_OnTextDraw	{U}
080cdd00	PromotionCommand_OnChange	{U}
080cdd38	Usability_ThirdPromotionOption	{U}
080cdddc	Make6C_PromotionMenuSelect	{U}
080d1680	DivArm	{U}
080d16e4	SRAMLoader	{U}
080d1724	SRAMTransfer	{U}
080d1764	SaveChecker	{U}
080d17b0	StoreLoadRoutinesToRAM	{U}
080d184c	SRAMTransfer_WithCheck	{U}
080d4020	_cleanup_r	{U}
080d4030	_cleanup	{U}
080d45d0	setlocale	{U}
080d45e8	localeconv	{U}
080d556c	_ratio	{U}
080d55bc	_mprec_log10	{U}
080d5720	__sclose	{U}
080d57ac	remap_handle	{U}
080d5868	get_errno	{U}
080d587c	error	{U}
080d5890	wrap	{U}
080d5cfc	isatty	{U}
080d5d00	alarm	{U}
080d5eac	__unpack_d	{U}
080d5f84	_fpadd_parts	{U}
080d6c34	_fpadd_parts_0	{U}
080d74a0	&ARM	CallARM_FillTileRect	{U}
080d74a8	TileMap_FillRect	{U}
080d74b8	TileMap_CopyRect	{U}


080003A8	&ARM	ARM_FillRect		{J}
08000B0C	StoreIRQToIRAM	{J}
08000B4C	DummyIRQRoutine	{J}
08000B50	SetIRQHandler	{J}
08000B60	NextRN	{J}
08000C0C	LoadRNState	{J}
08000C24	StoreRNState	{J}
08000C3C	NextRN_100	{J}
08000C58	NextRN_N	{J}
08000C78	Roll1RN	{J}
08000C90	Roll2RN	{J}
08000CB4	SetOtherRNState	{J}
08000CC0	GetOtherRN	{J}
08000CE4	SetGlobalClock	{J}
08000CF0	IncrementGlobalClock	{J}
08000D68	CopyToPaletteBuffer	{J}
08000E4C	FlushLCDControl	{J}
08000EF4	GetBackgroundControlBuffer	{J}
08000F3C	GetBackgroundTileDataOffset	{J}
08000F54	GetTileIndex	{J}
08000F8C	SetBackgroundTileDataOffset	{J}
08000FB4	SetBackgroundMapDataOffset	{J}
08000FFC	SetBackgroundScreenSize	{J}
08001044	FlushPalettesAdditive	{J}
080010A0	FlushPalettesSubstractive	{J}
080010FC	FlushBackgrounds	{J}
080011D0	BG_Fill	{J}
080011F0	RegisterBlankTile	{J}
08001208	SetInterrupt_LCDVBlank	{J}
0800125C	SetInterrupt_LCDVCountMatch	{J}
080012CC	SetLCDVCountSetting	{J}
080012D8	SetMainUpdateRoutine	{J}
080012E4	ExecMainUpdate	{J}
080012FC	_UpdateKeyStatus	{J}
0800139C	UpdateKeyStatus	{J}
080013DC	ResetKeyStatus	{J}
080013FC	SetKeyStatus_IgnoreMask	{J}
08001408	GetKeyStatus_IgnoreMask	{J}
08001414	KeyStatusSetter_Set	{J}
0800142C	NewKeyStatusSetter	{J}
08001448	BG_SetPosition	{J}
08001ACC	SetupBackgrounds	{J}
08001BC0	BG_GetMapBuffer	{J}
08001C78	UpdateHBlankHandlerState	{J}
08001D28	SetPrimaryHBlankHandler	{J}
08001D3C	SetSecondaryHBlankHandler	{J}
08001D50	GetBackgroundFromBufferPointer	{J}
08001DBC	BG_SetDepth	{J}
08001DDC	BG_GetDepth	{J}
08001DF0	SetSpecialColorEffectsParameters	{J}
08001ED0	SetDefaultColorEffects	{J}
08001EF0	DisablePaletteSync	{J}
08001EFC	BG_EnableSyncByMask	{J}
08001F0C	BG_EnableSync	{J}
08001F30	ClearTileRigistry	{J}
08001F64	RegisterTileGraphics	{J}
08001FA4	RegisterFillTile	{J}
08001FD8	FlushTiles	{J}
0800204C	SetupOAMBufferSplice	{J}
08002088	FlushSecondaryOAM	{J}
080020CC	FlushPrimaryOAM	{J}
08002100	WriteOAMRotScaleData	{J}
0800219C	GetPrimaryOAMSize	{J}
080021C4	SomethingSoundRelated_8002274	{J}
0800223C	SomethingSoundRelated_80022EC	{J}
0800226C	SoundStuff_800231C	{J}
08002330	FadeOutChannelForSoundSE	{J}
0800276C	Some6CMusicRelatedWaitCallback	{J}
080027A8	Exec6CSomeWaitIfMusicOn	{J}
08002A08	DeleteAll6CWaitMusicRelated	{J}
08002A48	StoreRoutinesToIRAM	{J}
08002ACC	&ARM	CallARM_DecompText	{J}
08002B08	&ARM	CallARM_PushToSecondaryOAM	{J}
08002B1C	&ARM	CallARM_PushToPrimaryOAM	{J}
08002B30	&ARM	Call5	{J}
08002B44	&ARM	CallARM_FillMovementMap	{J}
08002B58	Initialize6CEngine	{J}
08002BCC	New6C	{J}
08002C30	NewBlocking6C	{J}
08002C60	Delete6CInternal	{J}
08002CBC	Delete6C	{J}
08002CD4	Allocate6C	{J}
08002CE4	Free6C	{J}
08002CF4	InsertMain6C	{J}
08002D18	InsertChild6C	{J}
08002D30	Isolate6C	{J}
08002D78	Exec6C_	{J}
08002DD4	Exec6C	{J}
08002DE4	Break6CLoop	{J}
08002DEC	Find6C	{J}
08002E74	Goto6CLabel	{J}
08002EAC	Goto6CPointer	{J}
08002EB4	Set6CMark	{J}
08002EBC	Set6CDestructor	{J}
08002EC0	ForAll6C	{J}
08002EE8	ForEach6C	{J}
08002F3C	BlockEach6CMarked	{J}
08002F64	UnblockEach6CMarked	{J}
08002F90	DeleteEach6CMarked	{J}
08002FBC	Delete6C_	{J}
08002FC8	DeleteEach6C	{J}
08002FD8	Clear6CLoopWrapper	{J}
08002FE4	ClearCallbackAll6CMatch	{J}
08002FF4	ForAllFollowing6C	{J}
08003038	Call6C_00Delete	{J}
08003044	Call6C_01Name	{J}
08003054	Call6C_02CallAndContinue	{J}
08003068	Call6C_16Call	{J}
08003130	Call6C_18CallWithArg	{J}
0800309C	Call6C_14While	{J}
080030C8	Call6C_03SetLoop	{J}
080030D8	Call6C_04SetDestructor	{J}
080030F4	Call6C_05AddChild	{J}
08003110	Call6C_06AddBlockingChild	{J}
0800312C	Call6C_07AddGlobal_BuggedMaybe	{J}
0800314C	Call6C_08WhileExists	{J}
08003174	Call6C_09DeleteEach6C	{J}
08003190	Call6C_0AClearLoopForEach6C	{J}
080031AC	Call6C_0BOr19Label	{J}
080031B8	Call6C_0DJump	{J}
080031C8	Call6C_0CGotoLabel	{J}
080031DC	_6CSleepLoop	{J}
080031F8	Call6C_0ESleep	{J}
08003220	Call6C_0FMark	{J}
08003234	Call6C_13Blank	{J}
08003240	Call6C_10Block	{J}
08003244	Call6C_11DeleteIfDuplicate	{J}
08003284	Call6C_17DeleteOtherDuplicates	{J}
080032BC	Call6C_15Blank	{J}
080032C8	Call6C_12SetBit4	{J}
080032E0	Call6CCode	{J}
0800332C	ForEach6CDoNothing	{J}
0800339C	Set6CLoop	{J}
080033B8	Find6C_	{J}
080034C4	ResetIconGraphics_	{J}
080034D0	ResetIconGraphics	{J}
08003508	LoadIconPalettes	{J}
08003520	LoadIconPalette	{J}
0800355C	GetIconGfxTileIndex	{J}
08003570	GetIconGfxIndex	{J}
0800359C	GetIconTileIndex	{J}
08003608	DrawIcon	{J}
08003658	ClearIconGfx	{J}
08003678	LoadIconObjectGraphics	{J}
080036D8	SetupDebugFontForBG	{J}
08003750	PrintDebugStringToBG	{J}
08003814	ClearSmallStringBuffer	{J}
08003868	StoreNumberStringOrDashesToSmallBuffer	{J}
080038B4	StoreNumberHexStringToSmallBuffer	{J}
0800391C	PrintStringToDBG	{J}
08003988	FlushDBGToBG2	{J}
08003A70	SetupDebugFontForOBJ	{J}
08003AFC	PrintDebugStringAsOBJ	{J}
08003BC4	Font_InitForUIDefault	{J}
08003BE8	Font_InitForUI	{J}
08003C24	SetFontGlyphSet	{J}
08003C68	SetFont	{J}
08003C8C	Text_Init	{J}
08003CB4	Text_Allocate	{J}
08003CDC	InitTextBatch	{J}
08003D80	Text_GetXCursor	{J}
08003D84	Text_SetXCursor	{J}
08003D88	Text_Advance	{J}
08003D90	Text_SetColorId	{J}
08003D94	Text_GetColorId	{J}
08003D98	Text_SetParameters	{J}
08003DA0	Text_Draw	{J}
08003DEC	Text_DrawBlank	{J}
08003E0C	GetStringTextWidth	{J}
08003E6C	GetCharTextWidth	{J}
08003EAC	GetStringTextCenteredPos	{J}
08003F18	String_GetEnd	{J}
08003F28	Text_AppendString	{J}
08003F98	Text_AppendDecNumber	{J}
0800407C	Text_AppendNumberOr2Dashes	{J}
080040B8	Text_AppendChar	{J}
08004120	GetVRAMPointerForTextMaybe	{J}
080041A0	Font_SpecializedGlyphDrawer	{J}
08004360	Font_SetSomeSpecialDrawingRoutine	{J}
08004374	DrawTextInline	{J}
080043B8	Text_InsertString	{J}
080043DC	Text_InsertNumberOr2Dashes	{J}
08004400	Text_AppendStringSimple	{J}
0800443C	Text_AppendCharSimple	{J}
08004470	GetStringTextWidthSimple	{J}
080044A4	InitSomeOtherGraphicsRelatedStruct	{J}
080044E0	Text_Init3	{J}
080045BC	Text_MeasureString	{J}
080048B4	NewGreenTextColorManager	{J}
080048D8	EndGreenTextColorManager	{J}
08004A9C	DrawDecNumber	{J}
08004D48	AIS_ExecAll	{J}
08004DC0	ClearAISArray	{J}
08004E50	AIS_New	RET=@AnimationInterpreter	{J}
08004EB4	AISArray_Sort	{J}
08004F0C	AIS_Free	r0=@AnimationInterpreter	{J}
08004F3C	AIS_Display	r0=@AnimationInterpreter	{J}
08004F48	HandleNextAISFrame	{J}
080050C8	LinkAIS	{J}
08005110	_AIS_Display	r0=@AnimationInterpreter	{J}
08005360	FlushIntermediateOAMBuffer	{J}
0800541C	GetPortraitStructPointer	{J}
08005430	ResetFaces	{J}
0800544C	SetupFaceGfxData	{J}
0800549C	Load6CFACEGraphics	{J}
08005544	NewFace	{J}
08005640	DeleteE_FACEByPointer	{J}
08005660	DeleteFaceByIndex	{J}
08005B28	ShouldPortraitBeSmol	{J}
08007B24	_Loop6CBlockingTimer	{J}
08008E08	GetZero	{J}
08009608	TCSWrapper_New	{J}
08009650	TCSWrapper_OnUpdate	{J}
0800967C	TCSWrapper_OnDelete	{J}
08009688	TCSWrapper_SetParameters	{J}
080096A4	TCSWrapper_Delete	{J}
080096B0	DeleteAllTCSWrappers	{J}
080098F0	Goto6CLabel12IfSomething	{J}
080099B0	Null6CCallback	{J}
080099BC	Delete6CIfNotMarkedB	{J}
08009D40	CallActualSaveMenu	{J}
08009E3C	GetChapterIdTo6C	{J}
08009E4C	SetChapterIdFrom6C	{J}
08009E68	NewGameControl	{J}
08009EA0	GetGameControl6C	{J}
08009EB0	SetNextGameActionId	{J}
08009EC4	SetNextChapterId	{J}
08009EEC	RestartGameAndGoto8	{J}
08009EEC	RestartGameAndGoto12	{J}
08009F3C	ForceEnableSoundEffects	{J}
08009F58	SomethingRelatedToText	{J}
08009FA8	GetStringFromIndex	{J}
08009FE4	GetStringFromIndexInBuffer	{J}
0800A118	FilterSomeTextFromStandardBuffer	{J}
0800BD4C	SetSomeRealCamPos	{J}
0800BF08	HideAllUnits	{J}
0800C0B8	Event80_	{J}
0800C0D4	Event81_	{J}
0800C118	Event82_EndWM	{J}
0800C128	Event83_WM_SETCAM	{J}
0800C13C	Event84_WM_SETCAMONLOC	{J}
0800C17C	Event85_WM_SETCAMONSPRITE	{J}
0800CA88	Event86_WM_MOVECAM	{J}
0800C224	Event87_	{J}
0800C2B8	Event88_	{J}
0800C35C	Event89_	{J}
0800C390	Event8A_	{J}
0800C3A0	Event8B_	{J}
0800C3AC	Event8C_	{J}
0800C3C8	Event8D_	{J}
0800C3E0	Event8E_	{J}
0800C3F8	Event8F_	{J}
0800C410	Event90_WM_DRAWPATH	{J}
0800C43C	Event91_WM_DRAWPATH_Silent	{J}
0800C43C	Event92_REMOVEPATH	{J}
0800C4A4	Event93_	{J}
0800C4C0	Event94_	{J}
0800C4DC	Event95_	{J}
0800C52C	Event96_	{J}
0800C5B4	Event97_	{J}
0800C644	Event98_	{J}
0800C70C	Event99_	{J}
0800C740	Event9A_	{J}
0800C7A0	Event9B_	{J}
0800C7BC	Event9C_	{J}
0800C800	Event9D_	{J}
0800C834	Event9E_PUTSPRITE	{J}
0800C84C	Event9F_	{J}
0800C864	EventA0_REMSPRITE	{J}
0800C874	EventA1_	{J}
0800C884	EventA2_	{J}
0800C894	EventA3_	{J}
0800C8D0	EventA4_	{J}
0800C90C	EventA5_	{J}
0800C934	EventA6_	{J}
0800C964	EventA7_	{J}
0800C994	EventA8_	{J}
0800CA34	EventA9_	{J}
0800CA94	EventAA_	{J}
0800CAC4	EventAB_	{J}
0800CAF4	EventAC_	{J}
0800CB38	EventAD_	{J}
0800CB60	EventAE_	{J}
0800CB8C	EventAF_	{J}
0800CBB0	EventB0_	{J}
0800CBD4	EventB1_	{J}
0800CC00	EventB2_	{J}
0800CC14	EventB3_	{J}
0800C0CE	EventB4_	{J}
0800CC5C	EventB5_	{J}
0800CC7C	EventB6_	{J}
0800CCC4	EventB7_	{J}
0800CCEC	EventB8_	{J}
0800CD0C	EventB9_	{J}
0800CD34	EventBA_	{J}
0800CD70	EventBB_	{J}
0800CDB0	EventBC_	{J}
0800CE18	EventBD_	{J}
0800CE40	EventBE_	{J}
0800CE7C	EventBF_	{J}
0800CEA8	EventC0_	{J}
0800CEC0	EventC1_SKIPWM	{J}
0800CED4	EventC2_	{J}
0800CEE8	EventC3_	{J}
0800CF2C	EventCE_	{J}
0800CF44	EventCF_	{J}
0800CF5C	EventC4_	{J}
0800CFB4	EventC5_	{J}
0800D014	EventC6_	{J}
0800D04C	EventC7_	{J}
0800D06C	EventC8_	{J}
0800D08C	EventC9_	{J}
0800DBFC	__malloc_unlock	{J}
0800D0EC	EventCD_	{J}
0800D104	_MarkSomethingInMenu	{J}
0800D110	EventEngine_Loop	{J}
0800D220	EventEngine_Destructor	{J}
0800D2D0	EqueueEventEngineCall	{J}
0800D308	HandleNextEventEngineCall	{J}
0800D374	NewMapEventEngine	{J}
0800D404	NewBattleEventEngine	{J}
0800D45C	MapEventEngineExists	{J}
08007B08	DeleteEventEngines	{J}
0800D594	CallSomeOtherEvents	{J}
0800D77C	CheckEventId_	{J}
0800D7EC	SlotQueuePush	{J}
0800D808	SlotQueuePop	{J}
0800D844	SetEventCounter	{J}
0800D85C	Event00_NULL	{J}
0800D860	Event01_End	{J}
0800D914	Event02_EvBitAndIdMod	{J}
0800D97C	Event03_CheckEvBitOrId	{J}
0800D9DC	Event04_CheckRandom	{J}
0800DA04	Event05_SetSlot	{J}
0800DA1C	Event06_SlotOperation	{J}
0800DBA0	Event07_SlotQueueOperations	{J}
0800DC04	Event08_Label	{J}
0800DC08	Event09_Goto	{J}
0800DC40	Event0A_Call	{J}
0800DC94	Event0B_	{J}
0800DCE0	Event0C_Branch	{J}
0800DD68	Event0D_AsmCall	{J}
0800DD9C	Event0E_STAL	{J}
0800DE3C	Event0F_	{J}
0800DEF0	Event10_ModifyEvBit	{J}
0800DFB0	Event11_SetIgnoredKeys	{J}
0800D014	Event12_	{J}
0800FD0C	Event13_	{J}
0800E064	Event14_	{J}
0800E0BC	Event15_	{J}
0800E666	Event16_	{J}
0800E160	Event17_	{J}
0800E1FC	Event18_	{J}
0800E2C8	Event19_	{J}
0800E3E0	Event1A_TEXTSTART	{J}
0800E5CC	Event1B_TEXTSHOW	{J}
0800E730	Event1C_TEXTCONT	{J}
0800E774	Event1D_TEXTEND	{J}
0800E8AC	_WhileFace6CExists	{J}
0800E8C8	Event1E_	{J}
0800E98C	Event1F_	{J}
0800E9D4	Event20_	{J}
0800EADC	Event21_	{J}
0800F2DC	Event22_	{J}
0800F338	Event23_	{J}
0800F364	Event24_	{J}
0800F390	Event25_	{J}
0800F41C	Event26_CameraControlMaybe	{J}
0800F4D0	Event27_MapChange	{J}
0800F5EC	Event28_ChangeWeather	{J}
0800F5FC	Event29_SetFogVision	{J}
0800DC94	Event2A_MoveToChapter	{J}
0800F720	ShouldUNITBeLoaded	{J}
0800F8D4	LoadUnit_800F704	{J}
0800FD04	Event2C_LoadUnits	{J}
0800FE0C	TryPrepareEventUnitMovement	{J}
0800FE54	GetSomeEventEngineMoveRelatedBitfield	{J}
0800FE88	Event2D_	{J}
0800FEA4	Event2E_CheckAt	{J}
0800FF08	Event2F_MoveUnit	{J}
08010088	Event30_ENUN	{J}
080100CC	Event31_DisplayEffectRange	{J}
0801015C	Event32_SpawnSingleUnit	{J}
08010270	Event33_CheckUnitVarious	{J}
080103F4	Event34_MessWithUnitState	{J}
0801060C	Event35_UnitClassChanging	{J}
080106A0	Event36_CheckInArea	{J}
080106FC	Event37_GiveItem	{J}
08010770	Event38_ChangeActiveUnit	{J}
0801079C	Event39_	{J}
080108E4	Event3B_	{J}
08010994	Event3C_	{J}
080109F0	Event3D_	{J}
08010AAC	Event3E_PrepScreenCall	{J}
08010B9C	Event3F_	{J}
08010C0E	Event40_	{J}
08010D24	Event41_	{J}
08010D9E	Event42_	{J}
08010E38	Event43_	{J}
08010E70	Event44_	{J}
08010EA4	Event45_	{J}
08011080	GetSomeLongPopupLength	{J}
08011288	LongPopup_PrepareGfx	{J}
080112FC	LongPopup_PlaySound	{J}
08011340	IconOAMUpdater_Loop	{J}
0801135C	LongPopup_Draw	{J}
080114AC	LongPopup_WaitForPress	{J}
080114E4	LongPopup_Clear	{J}
08011554	SetPopupNumber	{J}
08011560	NewPopupSimple	{J}
0801157C	NewPopup	{J}
080115C8	NewGotItemPopup	{J}
08011610	ItemGot_DisplayLePopup	{J}
08011624	ItemGot_GotLeItem	{J}
08011640	NewItemGot	{J}
08011688	NewGeneralItemGot	{J}
08011730	NewGoldGotPopup	{J}
080117CC	NewPopup_WeaponBroke	{J}
080117F0	NewPopup_WRankIncrease	{J}
08012414	GetChapterAllyUnitCount	{J}
08012430	InitPlayerUnitPositionsForPrepScreen	{J}
08012700	StoreUnitWordStructs	{J}
0801273C	LoadUnitWordStructs	{J}
08012F78	CopyString	{J}
08012F94	CopyDirect	{J}
08013008	UnLZ77Decompress	{J}
08013048	FilterR0ForRawCopy	{J}
080130AC	RegisterObjectTileGraphics	{J}
080130D8	CopyTileGfxForObj	{J}
08013504	GetPaletteBufferBuffer	{J}
08013528	SetSomethingInPaletteBB_2A	{J}
08013538	SetSomethingInPaletteBB_5A	{J}
0801354C	SetSomethingInPaletteBB_8A	{J}
08013560	GetSomethingInPaletteBB_2A	{J}
0801356C	GetSomethingInPaletteBB_5A	{J}
0801357C	GetSomethingInPaletteBB_8A	{J}
0801358C	ArchiveCurrentPalettes	{J}
080135D8	ArchivePalette	{J}
08013608	WriteFadedPaletteFromArchive	{J}
08014120	ContinueUntilSomeTransistion6CExists	{J}
080142F0	NewBlockingTimer	{J}
0801430C	Timer6C_Countdown	{J}
08014494	DeleteAllPaletteAnimator	{J}
080144A4	NewPaletteAnimator	{J}
080144F8	NewPaletteAnimator_	{J}
080148A4	FutureCall2_Loop	{J}
080148C8	FutureCall_Loop	{J}
080148F0	SetupFutureCall2	{J}
0801490C	SetupFutureCall	{J}
08014B28	RerangeSomething	{J}
08014B50	PlaySpacialSoundMaybe	{J}
080152C8	GeneralVBlankHandler	{J}
08015318	SomeUpdateRoutine	{J}
080153A4	GetThread2SkipStack	{J}
080153B0	SwitchPhases	{J}
080153F8	CallBeginningEvents	{J}
08015474	MakePhaseController6C	{J}
080154C8	NewPlayerPhase6C	{J}
08015518	E_BMAPMAIN_SuspendGame	{J}
08015568	UndeployEveryone	{J}
080155AC	GotoChapterWithoutSave	{J}
08015624	SetupBackgroundForWeatherMaybe	{J}
0801569C	LoadObjUIGfx	{J}
08015710	LoadGameCoreGfx	{J}
08015730	HandleCursorMovement	{J}
08015854	MoveCameraByStepMaybe	{J}
080159D4	GetSomeAdjustedCameraX	{J}
08015A18	GetSomeAdjustedCameraY	{J}
08015AB4	DisplayCursor	{J}
08015BD8	SetCursorMapPosition	{J}
08011EEA	Init6C_GENS	{J}
08015CBC	Loop6C_GENS	{J}
08015D3C	StoreAdjustedCameraPositions	{J}
08015E18	EnsureCameraOntoPosition	r0=ThisProcs	r1=X	r2=Y	{J}
08015EA8	ShouldMoveCameraPosSomething	{J}
08015FD4	GetCurrentMapMusicIndex	{J}
08016198	GetItemPowBonus	{J}
08016198	GetItemSklBonus	{J}
08016198	GetItemSpdBonus	{J}
08016198	GetItemDefBonus	{J}
08016198	GetItemResBonus	{J}
08016198	GetItemLckBonus	{J}
0801631C	CanUnitUseAsWeapon	{J}
080164F8	CanUnitUseWeapon	{J}
0801654C	CanUnitUseAsStaff	{J}
080165A8	CanUnitUseStaff	{J}
08016750	DrawTextAndIconForItem	{J}
08016894	ValidateItem	{J}
080168D0	GetUnitEquippedWeapon	{J}
08016900	GetUnitEquippedWeaponSlot	{J}
08016934	IsItemCoveringRange	{J}
08016968	EquipUnitItemByIndex	{J}
08016994	IsWeaponEffective	{J}
08016A30	IsSlayerApplied	{J}
08016B04	GetWeaponRankLevel	{J}
08016B3C	GetWRankTextBuffer	{J}
08016BA0	GetWRankText	{J}
08016BC8	GetWTypeTextInStandardBuffer	{J}
08016BF8	GetWRankBarData	{J}
08016C70	IsItemDanceRing	{J}
08016C8C	IsItemUsable	{J}
08016D24	CanUnitUse	{J}
08016D60	GetItemHealAmount	{J}
08016DD4	GetUnitItemSlot	{J}
08016DFC	IsItemStealable	{J}
08016E28	IsItemHammernable	{J}
08016E7C	GetWeaponRangeMask	{J}
08016F90	GetUnitRangeMask	{J}
08016FE4	GetUnitStaffRangeMask_0	{J}
080170A0	GetUnitStaffRangeMask	{J}
08017124	GetConvoyTotalGoldValue	{J}
08017294	GetItemIndex	{J}
080172C0	GetItemDescId	{J}
080172D8	GetItemUseDescId	{J}
080172F0	GetItemWType	{J}
08017314	GetItemAttributes	{J}
0801732C	GetItemUses	{J}
08017358	GetItemMaxUses	{J}
08017384	GetItemMight	{J}
0801739C	GetItemHit	{J}
080173B4	GetItemWeight	{J}
080173CC	GetItemCrit	{J}
080173E4	GetItemCost	{J}
08017414	GetItemMinRange	{J}
0801742C	GetItemMaxRange	{J}
08017448	GetItemRange	{J}
08017460	GetItemWRank	{J}
08017478	GetItemEffectivenessPtr	{J}
08017490	GetItemStatBonusesPtr	{J}
080172F0	GetItemWType	{J}
080174A8	GetItemIconId	{J}
080174CC	GetItemWeaponEffect	{J}
080174E4	GetItemUseEffect	{J}
080174FC	GetItemCostPerUse	{J}
08017514	GetItemMaxCost	{J}
08017540	GetItemWExp	{J}
08017558	GetROMItemStructPtr	{J}
0801756C	ClearUnits	{J}
0801759C	ClearUnitStruct	r0=@Unit	{J}
080175C4	CopyUnitStruct	r0=@Unit	r1=@Unit	{J}
080175E0	GetNextFreeUnitStructPtr	RET=@Unit	r0=faction	{J}
08017618	GetNextFreePlayerUnitStruct	RET=@Unit	{J}
08017650	GetUnitFogViewRange	{J}
08017680	SetUnitNewStatus	{J}
0801769C	WriteUnitStatusDuration	{J}
080176AC	GetUnitSMSIndex	{J}
080176F0	UnitAddItem	{J}
08017714	UnitClearInventory	{J}
0801772C	RemoveUnitBlankItems	{J}
08017780	GetUnitItemCount	{J}
080177A0	UnitHasItem	{J}
080177DC	LoadUnits	{J}
08017834	HasClassWRank	{J}
0801786C	08017ac4	LoadUnit	{J}
08017A5C	StoreNewUnitFromCode	{J}
08017B18	CharFillInventoryFromCode	{J}
08017B54	LoadUnitStats	{J}
08017BDC	FixROMUnitStructPtr	{J}
08017C14	LoadUnitSupports	{J}
08017C40	AutolevelUnitWeaponRanks	{J}
08017CE4	IncreaseUnitStatsByLevelCount	{J}
08017E3C	AutolevelUnit	{J}
08017E7C	08018160	AutolevelRealistic	{J}
08017EDC	CheckForStatCaps	{J}
08017FB0	GetUnitByCharId	{J}
08017FEC	GetNonAllyUnitStructById	{J}
08018030	CanUnitRescue	{J}
08018060	UnitRescue	{J}
08018084	UpdateRescuingData	{J}
080180DC	UpdateRescueData	{J}
08018144	HandleAllegianceChange	{J}
080181B0	ApplyUnitMovement	{J}
08018370	SetupActiveUnit	{J}
080183E8	SetActiveUnit	{J}
08018454	MoveActiveUnit	{J}
08018670	SetAllUnitNotBackSprite	{J}
080186A8	ValidateUnitItem	{J}
080186CC	GetUnitAid	{J}
08018730	GetUnitMagBy2Range	{J}
0801876C	UnitHasMagicRank	{J}
0801883C	GetUnitUseFlags	{J}
080188EC	CanUnitMove	{J}
080189AC	IsPosMagicSealed	{J}
08018A1C	CanUnitNotUseMagic	{J}
08018A48	GetUnitLastItem	{J}
08018A60	GetMovCostTablePtr	{J}
08018AA4	GetClassStandingMapSpriteId	{J}
08018AC4	UpdatePrevDeployStates	{J}
08018B44	LoadUnitPrepScreenPositions	{J}
08018C5C	IsUnitSlotAvailable	{J}
08018DC8	ClearCutsceneUnits	{J}
08018E64	GetUnitCurrentHP	{J}
08018EA4	GetUnitMaxHP	{J}
08018EC4	GetUnitPower	{J}
08018EE4	GetUnitSkill	{J}
08018F24	GetUnitSpeed	{J}
08018F64	GetUnitDefense	{J}
08018F84	GetUnitResistance	{J}
08018FAC	GetUnitLuck	{J}
08018FCC	GetUnitPortraitId	{J}
08018FEC	GetUnitMiniPortraitId	{J}
08019018	GetUnitLeader	{J}
08019040	SetUnitHP	{J}
0801907C	UnitTryHeal	{J}
080190C0	GetRescuingUnitNameId	{J}
080190EC	WriteStatusTextToRAM	{J}
08019108	GetUnitStruct	RET=RAM Unit:@Unit	{J}
0801911C	GetROMClassStruct	RET=class data table:CLASS	r0=class_id	{J}
0801913C	GetROMCharStruct	RET=unit data table:UNIT	r0=unit_id	{J}
0801915C	UnitRemoveItem	{J}
08019174	CanUnitCrossTerrain	{J}
08019194	InitChapterMap	{J}
0801947C	SetupMapRowPointers	{J}
080194BC	ClearMapWith	{J}
08019584	LoadChapterMap	{J}
080195E4	LoadChapterMapGfx	{J}
0801967C	FlushTilesFromBuffer	{J}
0801973C	FlushTerrainData	{J}
080197CC	GetSomeTerrainToChangeAtSomePosition	{J}
080197F0	UpdateGameTileGfx	{J}
08019914	UpdateGameTilesGraphics	{J}
08019C78	UpdateUnitMapAndVision	{J}
08019E4C	UpdateTrapFogVision	{J}
08019E78	UpdateTrapHiddenStates	{J}
08019ECC	RefreshFogAndUnitMaps	{J}
08019F18	0801a240	GetTerrainNameString	{J}
08019F28	GetTerrainHealAmount	{J}
08019F38	GetTerrainRestoreBadStatus	{J}
08019FBC	RevertMapChangesById	{J}
0801A05C	FillMovementMapForUnit	{J}
0801A09C	FillMovementMapForUnitAndMovement	{J}
0801A0D4	FillMovementMapForUnitPosition	{J}
0801A108	FillMovementRangeMapSomehow	{J}
0801A108	FillMovementMapSomehow	{J}
0801A168	FillMovementMapForUnitAt	{J}
0801A198	StoreMovCostTable	{J}
0801A1B8	FillMovementMap	{J}
0801A798	MapAddInRange	{J}
0801A89C	MapSetInRange	{J}
0801A998	FillMapAttackRangeForUnit	{J}
0801B13C	FillRangeByRangeMask	{J}
0801B2F4	FillMapStaffRangeForUnit	{J}
0801B4E8	ApplyStuffToRangeMaps	{J}
0801B668	SetSubjectMap	{J}
0801b9a4	FillRangeMap	{J}
0801B6B0	GetCurrentMovCostTable	{J}
0801B718	Get8	{J}
0801B724	Loop6C_WaitForSelectPress	{J}
0801B80C	DebugMenu_MapIdle	{J}
0801B820	DebugMenu_MapEffect	{J}
0801BA20	DebugMapMenu_DisplayInfoIdle	{J}
0801BA6C	DebugMapMenu_DisplayInfoEffect	{J}
0801BA72	DebugMenu_WeatherDraw	{J}
0801BC1C	DebugMenu_WeatherIdle	{J}
0801BB94	DebugMenu_WeatherEffect	{J}
0801BB98	DebugMenu_ClearDraw	{J}
0801BBFC	DebugMenu_ClearIdle	{J}
0801BCA4	DebugMenu_ClearEffect	{J}
0801BCA8	DebugMenu_ErasedEffect	{J}
0801BD20	DEBUGONLY_Startup	{J}
0801DDA4	DebugMenu_FogDraw	{J}
0801BA1E	DebugMenu_FogIdle	{J}
0801C12C	DebugMenu_FogEffect	{J}
0801C13C	DebugMenu_GNightEffect	{J}
0801C14C	0801c4d0	DebugChargeMenu_Draw	{J}
0801C1F0	DebugChargeMenu_Idle	{J}
0801C4FC	ClearActionAndSave	{J}
0801C514	HandlePlayerCursorMovement	{J}
0801C5A8	PlayerPhase_MainLoop	{J}
0801C7D8	DisplayUnitEffectRange	{J}
0801C8E4	DisplayActiveUnitEffectRange	{J}
0801CCEC	PlayerPhase_PrepareAction	{J}
0801CEA8	TryMakeCantoUnit	{J}
0801CF64	RunPotentialWaitEvents	{J}
0801CF80	EnsureCameraOntoActiveUnitPosition	{J}
0801D0D4	PlayerPhase_ApplyUnitMovement	{J}
0801D180	GetUnitSelectionValueThing	{J}
0801D2B0	PlayerPhase_WaitForUnitMovement	{J}
0801D370	MakeMoveunitForActiveUnit	{J}
0801D3C0	ClearActiveUnit	{J}
0801D500	MoveLimitViewChange_OnInit	{J}
0801D550	MoveLimitViewChange_OnLoop	{J}
0801D590	MoveLimitView_OnInit	{J}
0801D640	MoveLimitView_OnLoop	{J}
0801D6C4	MoveLimitView_OnEnd	{J}
0801D6FC	DisplayMoveRangeGraphics	{J}
0801D730	HideMoveRangeGraphics	{J}
0801D808	PlayerPhase_HandleAutoEnd	{J}
0801D838	GetSomeFacingDirection	{J}
0801D864	Make6CMOVEUNITForUnitBeingRescued	{J}
0801D8A0	Loop6C_KOIDO	{J}
0801D8E0	Make6CKOIDO	{J}
0801D934	Make6CKOIDOAMM	{J}
0801DA0C	Destruct6CBMXFADE	{J}
0801DA28	NewBMXFADE	{J}
0801DA8C	GetPlayerStartCursorPosition	{J}
0801DAE4	GetEnemyStartCursorPosition	{J}
0801DBC0	ADJUSTFROMXI_MoveCameraOnSomeUnit	{J}
0801DCF4	HandleNewItemGetFromDrop	{J}
0801DD94	SendToConvoyMenu_Draw	{J}
0801DDA0	MenuCommand_DrawExtraItem	{J}
0801DDE4	SendToConvoyMenu_NormalEffect	{J}
0801DFA8	FillWarpRangeMap	{J}
0801F164	ChangeActiveUnitFacing	{J}
080225C4	CommandEffectEndPlayerPhase	{J}
080226AC	Make6CE_Guide	{J}
08022700	EffectWait	{J}
08022710	GenericSelection_BackToUM	{J}
080227F4	GenericSelection_BackToUM_CamWait	{J}
0802286C	RescueUsability	{J}
080228A4	RescueEffect	{J}
080228C4	RescueSelection_OnSelect	{J}
080228D8	DropUsability	{J}
08022910	DropEffect	{J}
08022930	DropSelection_OnSelect	{J}
08022954	TakeUsability	{J}
080228A4	TakeEffect	{J}
080229BC	GiveUsability	{J}
080228A4	GiveEffect	{J}
08022A24	MakeUnitRescueTransferGraphics	{J}
08022A58	TakeSelection_OnSelect	{J}
08022AA8	GiveSelection_OnSelect	{J}
08022BF8	DisplayUnitStandingAttackRange	{J}
08022C60	HideMoveRangeGraphicsWrapper	{J}
080232B0	ItemCommandEffect	{J}
08023318	ItemSelectMenu_TextDraw	{J}
0802339C	ItemSelectMenu_Usability	{J}
080233EC	ItemSelectMenu_Effect	{J}
08023990	FillBallistaRange	{J}
08023A18	StaffCommandUsability	{J}
08023A90	StaffCommandEffect	{J}
08023B54	StaffItemSelect_Usability	{J}
08023B8C	StaffItemSelect_Effect	{J}
08023BCC	StaffItemSelect_TextDraw	{J}
08023BD8	StaffItemSelect_OnHover	{J}
08023E38	PickCommandUsability	{J}
08023F20	SupplyUsability	{J}
08024148	StealCommandUsability	{J}
08024198	StealCommandEffect	{J}
080241D4	StealTargetSelection_OnInit	{J}
080242BC	StealItemMenuCommand_Usability	{J}
08024300	StealItemMenuCommand_Draw	{J}
08024354	StealItemMenuCommand_Effect	{J}
080241D4	RescueSelection_OnConstruction	{J}
0802464C	RescueSelection_OnChange	{J}
08024670	DropSelection_OnConstruction	{J}
080241D4	TradeTargetSelection_OnInit	{J}
08024874	RideCommandUsability	{J}
080248D0	RideCommandEffect	{J}
0802495C	AttackCommandUsability	{J}
080249D8	AttackBallistaCommandUsability	{J}
08024C9C	GetPhaseAbleUnitCount	{J}
08024D3C	AreUnitsAllied	{J}
08024D54	IsSameAllegience	{J}
08024D6C	GetCurrentPhase	{J}
08024D80	IsNotEnemyPhaseMaybe	{J}
08024D98	GetPartyGoldAmount	{J}
08024DB4	SetPartyGoldAmount	{J}
08024E5C	ForEachUnitInRange	{J}
08024EC8	ForEachPosInRange	{J}
08024F20	ForEachAdjacentUnit	{J}
08024F54	ForEachAdjacentPosition	{J}
08024FE8	ForEachPosIn12Range	{J}
0802501C	ForEachUnitInMagBy2Range	{J}
0802506C	TryAddTrapsToTargetList	{J}
0802512C	AddUnitToTargetListIfNotAllied	{J}
08025164	MakeTargetListForWeapon	{J}
080251CC	TryAddUnitToTradeTargetList	{J}
08025280	MakeTradeTargetList	{J}
080252F4	TryAddUnitToRescueTargetList	{J}
08025364	MakeRescueTargetList	{J}
08025398	TryAddToDropTargetList	{J}
08025364	MakeDropTargetList	{J}
08025424	TryAddRescuedUnitToTakeTargetList	{J}
08025364	MakeTakeTargetList	{J}
080255F4	MakeTargetListForSupport	{J}
0802512C	AddUnitToTargetListIfAllied	{J}
080256D8	FillBallistaRangeMaybe	{J}
08025744	TryAddClosedDoorToTargetList	{J}
08025784	TryAddBridgeToTargetList	{J}
080257C4	MakeTargetListForDoorAndBridges	{J}
08025364	MakeTargetListForSteal	{J}
08025DCC	TryAddUnitToHealTargetList	{J}
08025E20	MakeTargetListForAdjacentHeal	{J}
08025E54	MakeTargetListForRangedHeal	{J}
08025EA0	AddToTargetListIfNotAllied	{J}
08025EE8	MakeTargetListForFuckingNightmare	{J}
08025F3C	TryAddUnitToRestoreTargetList	{J}
08025364	MakeTargetListForRestore	{J}
08025FC0	TryAddUnitToBarrierTargetList	{J}
08025364	MakeTargetListForBarrier	{J}
08026044	TryAddUnitToRescueStaffTargetList	{J}
0802607C	MakeTargetListForRescueStaff	{J}
080260A4	TryAddUnitToSilenceTargetList	{J}
080260F0	TryAddUnitToSleepTargetList	{J}
0802613C	TryAddUnitToBerzerkTargetList	{J}
0802607C	MakeTargetListForSilence	{J}
0802607C	MakeTargetListForSleep	{J}
0802607C	MakeTargetListForBerserk	{J}
08026044	TryAddUnitToWarpTargetList	{J}
08025364	MakeTargetListForWarp	{J}
08025364	MakeTargetListForUnlock	{J}
080262A0	TryAddUnitToHammerneTargetList	{J}
08025364	MakeTargetListForHammerne	{J}
0802632C	MakeTargetListForLatona	{J}
08025364	MakeTargetListForMine	{J}
08025364	MakeTargetListForLightRune	{J}
08026558	TryAddUnitToDanceRingTargetList	{J}
08025364	MakeTargetListForDanceRing	{J}
080265CC	SetupMapSpritesPalettes	{J}
0802662C	SMS_ClearUsageTable	{J}
08026694	SMS_80266F0	{J}
08026720	SMS_SomethingGmapUnit	{J}
080267A0	SMS_RegisterUsage	{J}
0802686C	SomethingSMS_16x16_0	{J}
08026900	SomethingSMS_16x16	{J}
080269DC	SomethingSMS_16x32	{J}
08026ACC	SomethingSMS_32x32	{J}
08026ED0	SMS_FlushDirect	{J}
08026F38	SMS_FlushIndirect	{J}
080270E0	GetUnitSpritePaletteIndexWrapper	{J}
0802710C	GetUnitMapSpritePaletteIndex	{J}
08027144	SMS_UpdateFromGameData	{J}
08027310	SMS_GetNewInfoStruct	{J}
08027348	SMS_DisplayAllFromInfoStructs	{J}
080274D4	DisplayChapterTileMarker	{J}
0802758C	DisplayUnitAdditionalBlinkingIcons	{J}
08027EBC	SMS_DisplayOne	{J}
080280A0	HideUnitSMS	{J}
080280C4	ShowUnitSMS	{J}
080280D8	GetUnitStandingSpriteDataFlagThing	{J}
0802815C	GetROMUnitSupportCount	{J}
08028170	GetROMUnitSupportingId	{J}
08028188	GetUnitSupportingUnit	{J}
080281D0	GetSupportLevelBySupportIndex	{J}
080281F8	GetUnitTotalSupportLevels	{J}
08028224	AddSupportPoints	{J}
080282A4	CanUnitSupportCommandWith	{J}
08028320	GetUnitStartingSupportValue	{J}
0802833C	GetSupportDataIdForOtherUnit	{J}
080283C8	HandleSupportGains	{J}
080284C0	GetSupportBonusEntryPtr	{J}
080284E4	StoreAddedAffinityBonusesForSupportLevel	{J}
08028544	GetUnitSupportBonuses	{J}
08028720	CanUnitsStillSupportThisChapter	{J}
0802881C	CanUnitUseItem	{J}
08028E0C	ItemEffect_Call	{J}
08029010	IsGeneratedTargetListEmpty	{J}
08029024	CanUseHealingItem	{J}
08029048	CanUsePureWater	{J}
08029060	CanUseTorch	{J}
0802908C	CanUseAntidote	{J}
080290A4	CanUseChestKey	{J}
080290E0	CanUseDoorKey	{J}
080290F4	CanOpenBridge	{J}
08029108	CanUseLockpick	{J}
08029150	CanUsePromotionItem	{J}
080293B4	CanUseStatBooster	{J}
080294AC	CanUseJunaFruit	{J}
080294C4	EndItemEffectSelectionThing	{J}
080294F8	GenericStaffSelection_OnSelect	{J}
08029510	PrepareTargetSelectionForRescueStaff	{J}
08029550	SetupTargetSelectionForGenericStaff	{J}
08029590	WarpTargetPosSelect_Init	{J}
08029644	WarpTargetPosSelect_Loop	{J}
08029770	WarpTargetPosSelect_Confirm	{J}
080297AC	WarpTargetPosSelect_Cancel	{J}
080297E0	WarpTargetPosSelect_Destruct	{J}
080297F4	WarpTargetSelection_OnSelect	{J}
0802981C	SetupWarpTargetSelection	{J}
08029890	PrepareTargetSelectionForMineAndLightRune	{J}
080298E4	HammerneTargetSelection_OnSelect	{J}
08029944	SetupHammerneUseSelection	{J}
08029994	HammerneTargetSelection_OnChange	{J}
080299B8	HammerneTargetSelection_OnInit	{J}
08029944	PrepareTargetSelectionForHeal	{J}
08029944	PrepareTargetSelectionForRestoreStaff	{J}
08029944	PrepareTargetSelectionForOffensiveStaff	{J}
08029CB4	GenericSelection_DeleteBBAndBG	{J}
08029D24	TorchTargetPosSelect_Init	{J}
08029D7C	TorchTargetSelection_Loop	{J}
08029E64	NewTorchStaffSelection	{J}
08029E8C	CanUnitUseItemPrepScreen	{J}
0802A280	BATTLE_SaveFromBattle	{J}
0802A4F0	CopyUnitToBattleStruct	{J}
0802A5D4	CopyUnitToBattleStructRawStats	{J}
0802A60C	WriteBattleStructTerrainBonuses	{J}
0802A648	BattleSetupTerrainData	{J}
0802A69C	SetupBattleWeaponData	{J}
0802A884	SetupBattleBallistaWeaponData	{J}
0802A8C8	FillPreBattleStats	{J}
0802A914	FillBattleStats	{J}
0802A93C	BattleApplyMiscBonuses	{J}
0802A9B0	BattleLoadDefense	{J}
0802AA10	LoadRawDefense	{J}
0802AA28	BattleLoadAttack	{J}
0802AAE4	BattleLoadAS	{J}
0802AB1C	BattleLoadHit	{J}
0802AB54	BattleLoadAvoid	{J}
0802AB88	BattleLoadCrit	{J}
0802ABC4	BattleLoadDodge	{J}
0802ABD0	ComputeHit	{J}
0802AC00	ComputeCrit	{J}
0802AC68	ComputeLethalityChance	{J}
0802ACC4	BattleApplySRankBonuses	{J}
0802AD00	BattleComputeBuffStatus	{J}
0802AD3C	ComputeSpecialWeapons	{J}
0802AE00	ClearRounds	{J}
0802AE40	MakeBattle	{J}
0802AEEC	GetBattleUnitPointers	{J}
0802AF00	BattleCheckDoubling	{J}
0802AF88	MakeBattleRound	{J}
0802AFF0	GetBattleHitCount	{J}
0802B004	BattleCheckBrave	{J}
0802B03C	CheckForTriangleAttack	{J}
0802B134	UpdateBattleStats	{J}
0802B164	RollForSureShot	{J}
0802B1E8	RollForPierce	{J}
0802B258	RollForGreatShield	{J}
0802B2FC	RollForLethality	{J}
0802B328	NullifyBattleDamageIfUsingStone	{J}
0802B344	GenerateCurrentRoundData	{J}
0802B4CC	UpdateBattleTriangleAttackData	{J}
0802B554	CurrentRound_ComputeWeaponEffects	{J}
0802B784	MakeNextBattleHitRound	{J}
0802B8E8	GetStatIncrease	{J}
0802B90C	GetAutoleveledStat	{J}
0802B93C	CanUnitNotLevelUp	{J}
0802B970	CheckForLevelUp	{J}
0802BE6C	CheckForLevelUpCaps	{J}
0802BF70	SaveUnitsFromBattle	{J}
0802BFFC	GetBattleNewWExp	{J}
0802C0F8	BattleUnit_DidWRankGoUp	{J}
0802C134	SaveUnitFromBattle	{J}
0802C248	UpdateBallistaUsesFromBattle	{J}
0802C27C	NullSomeStuff	{J}
0802C4F0	HandleSomeExp	{J}
0802C570	GetBattleUnitStaffExp	{J}
0802C5D8	InstigatorAdd10Exp	{J}
0802C6A4	BattleReverseWTriangeEffect	{J}
0802C6F8	BattleApplyWeaponTriangle	{J}
0802C77C	DoSomeBattleWeaponStuff	{J}
0802C7FC	MakeSnagBattleTarget	{J}
0802C880	FillSnagBattleStats	{J}
0802C8BC	SaveSnagWallFromBattle	{J}
0802C94C	BeginBattleAnimations	{J}
0802CB54	SaveInstigatorFromBattle	{J}
0802CC14	GetStaffAccuracy	{J}
0802CDC0	IsCurrentBattleTriangleAttack	{J}
0802CDD4	DidWeaponBreak	{J}
0802CE00	CurrentRound_ComputeDamage	{J}
0802E100	ResetTraps	{J}
0802E128	GetTrapAt	{J}
0802E184	GetSpecificTrapAt	{J}
0802E1F0	AddTrap	{J}
0802E218	AddTrapExt	{J}
0802E234	RemoveTrap	{J}
0802E24C	AddFireTrap	{J}
0802E268	AddGasTrap	{J}
0802E288	AddArrowTrap	{J}
0802E2C0	AddTrap8	{J}
0802E2D0	AddTrap9	{J}
0802E2E0	AddSnagsAndWalls	{J}
0802E368	ApplyTrapMapChanges	{J}
0802E3A8	UpdateAllLightRunes	{J}
0802E3E4	GetTrapExt1At	{J}
0802E42C	GetMapChangesPointerById	{J}
0802E468	GetMapChangesIdAt	{J}
0802E4C4	ApplyMapChangesById	{J}
0802E530	AddMapChange	{J}
0802E544	UntriggerMapChange	{J}
0802E570	AreMapChangeTriggered	{J}
0802E598	HideIfUnderRoof	{J}
0802E628	AddToTargetListFromPos	{J}
0802E648	AddArrowTrapTargetsToTargetList	{J}
0802E774	MakeTargetListForTurnTrapDamage	{J}
0802E8E0	CountDownTraps	{J}
0802E908	ResetCounterForCountedDownTraps	{J}
0802E990	AddLightRune	{J}
0802E9C8	RemoveLightRune	{J}
0802E9F8	HandleTrapDecay	{J}
0802EA48	BattleSomethingTrapChangeTerrain	{J}
0802E3A8	NullAllLightRunesTerrain	{J}
0802EAC4	GetTrap	{J}
0802EAD0	ExecStandardHeal	{J}
0802EB58	ExecRestore	{J}
0802EC08	GetRescueStaffeePosition	{J}
0802EE30	ExecRescueStaff	{J}
0802EEE4	ExecWarpStaff	{J}
0802EF48	ExecStatusStaff	{J}
0802F080	ExecFortify	{J}
0802F1E0	ExecHammerne	{J}
0802F2A0	ExecSomeSelfHeal	{J}
0802FAD8	ExecTorchStaff	{J}
0802FB98	ActionStaffDoorChestUseItem	{J}
0802FF04	ActionPick	{J}
08030044	SetupGameVBlank6C_TileAnimations	{J}
08030088	GameVBlank6C_Destructor	{J}
08030094	GameVBlank6C_Loop	{J}
080300A0	SetupGameVBlank6C	{J}
080300D4	BlockGameGraphicsLogic	{J}
08030108	UnblockGameGraphicsLogic	{J}
08030144	SetupOAMSpliceForWeather	{J}
08030A84	SetupWeatherGraphics_Maybe	{J}
08030AF4	UpdateWeatherGraphics	{J}
08030BCC	SetupWeather	{J}
08030BE4	GetTextSpeed	{J}
08030D24	ResetGameState	{J}
08030D50	SetupChapter	{J}
080310C4	LoadGameCoreGfx2	{J}
08031108	MakeBMAPMAIN	{J}
08031430	GetTacticianNameStringPtr	{J}
0803144C	GetConvoyItemArray	{J}
08031454	ClearConvoyItems	{J}
08031478	ShrinkConvoyItemList	{J}
080314BC	GetConvoyItemCount	{J}
080314E0	AddItemToConvoy	{J}
08031530	GetConvoyItemSlot	{J}
08031568	HasConvoyAccess	{J}
08031610	InitUnitStack	{J}
0803162C	PushUnit	{J}
08031660	LoadPlayerUnitsFromUnitStack	{J}
08031660	LoadPlayerUnitsFromUnitStack2	{J}
080316E0	PrepareArenaStruct	{J}
080317C0	PrepareArena	{J}
080317DC	PrepareArena2	{J}
0803182C	GetClassBestWRankType	{J}
08031924	IsWeaponMagic	{J}
08031944	GetNearLevel	{J}
08031962	GetUnitArenaWeight	{J}
080319D0	LoadArenaOpponentStruct	{J}
08031B5C	PrepareBalancedArenaFight	{J}
08031CA4	AdjustArenaOpponentPower	{J}
08031F48	LoadRNStateFromActionStruct	{J}
08031F58	ApplyUnitAction	{J}
080320B0	ActionRescue	{J}
0803212C	ActionDrop	{J}
080321BC	ActionVisitAndSieze	{J}
080321E8	ActionCombat	{J}
08032290	ActionArena	{J}
080322A4	ActionDance	{J}
080322F4	ActionTalk	{J}
08032320	ActionSupport	{J}
080323C8	ActionSteal	{J}
080324A0	ActionSummon	{J}
080324cc	ActionSummonDK	{J}
080326C0	BATTLE_GOTO1_IfNobodyIsDead	{J}
08032700	DidUnitDie	{J}
08032714	BATTLE_ProbablyMakesTheDeadUnitDissapear	{J}
080327AC	BATTLE_DeleteLinkedMOVEUNIT	{J}
0803281C	BATTLE_HandleItemDrop	{J}
08033168	GetPlayerLeaderUnitId	{J}
0803365C	CanCharacterBePrepMoved	{J}
08033780	InitPrepScreenUnitsAndCamera	{J}
08033B20	PrepScreen6C_StartUnitSwap	{J}
08033DDC	CallCursorShop	{J}
0803411C	ShrinkPlayerUnits	{J}
0803421C	CanUnitUseVisit	{J}
080342B0	CanUnitUseSeize	{J}
08034330	CanUnitUseAttack	{J}
08034378	CanActiveUnitUseRescue	{J}
08034394	CanActiveUnitUseTrade	{J}
080343B0	GetUnitCommandUseFlags	{J}
0803458C	GetChapterMapChangesPointer	{J}
080345B8	GetChapterEventDataPointer	{J}
0803460C	GetSomethingRelatedToCurrentDifficulty	{J}
080346B0	NewUnitInfoWindow	{J}
080346DC	UnitInfoWindow_PositionUnitName	{J}
08034744	UnitInfoWindow_DrawBase	{J}
080348DC	GetUnitInfoWindowX	{J}
08034B20	NewUnitInfoWindow_WithAllLines	{J}
08034D64	DrawHammerneUnitInfoWindow	{J}
0803510C	SetupUnitRescueWindow	{J}
08035610	NewBottomHelpText	{J}
08035848	DeleteEach6CBB	{J}
08036694	BattleForecase_SetupLabelText	{J}
0803676C	AddWeaponStatsAfterRound	{J}
080367A0	BKSEL_SetupHitAndSuchStats	{J}
08036E9C	BKSEL_InitGfx	{J}
08036F1C	BKSEL_Destructor	{J}
080373E4	NewBattleForecast	{J}
080376A8	GetPickTrapType	{J}
08037720	ExecTrap	{J}
080378D8	LoadTrapData	{J}
080379A8	LoadChapterBallistae	{J}
080379C8	AddGorgonEggTrap	{J}
08037A24	GetBallistaItemAt	{J}
08037A6C	GetSomeBallistaItemAt	{J}
08037A9C	AddBallista	{J}
08037ACC	RideBallista	{J}
08037B04	TryRemoveUnitFromBallista	{J}
08037B40	IsBallista	{J}
08037BA8	GetBallistaItemUses	{J}
08037BDC	GetCurrentPromotedLevelBonus	{J}
08037BFC	CanUnitSeize	{J}
08038334	PushGlobalTimer	{J}
08038348	PopGlobalTimer	{J}
08039800	Loop6C_E_CPORDER	{J}
08039A28	GetCurrentPhaseUnitCount	{J}
08039B34	CPORDER_End	{J}
08039B78	Call6C_E_CPDECIDE	{J}
08039C78	ClearSomeAIRelatedStruct	{J}
0803A0F4	ApplyAICombat2	{J}
0803A380	ApplyAICombat	{J}
0803A3D0	ApplyAIDKSummonAction	{J}
0803A408	ApplyAIPickAction	{J}
0803A55C	PrepareAIAction	{J}
0803B560	FillMovementAndRangeMapForItem	{J}
0803BFF4	SetupUnitInventoryAIFlags	{J}
0803C0B0	SetupUnitStatusStaffAIFlags	{J}
0803C0F8	SetupUnitHealStaffAIFlags	{J}
0803C144	SaveNumberOfAlliedUnitsIn0To8Range	{J}
0803C1E8	CharStoreAI	{J}
0803E5D0	UpdateAllPhaseHealingAIStatus	{J}
0803E628	UpdateUnitHealingAIStatus	{J}
0803E808	GetEscapePointStructThingMaybe	{J}
0803EC28	StoreItemAndGetUnitAttack	{J}
0804504C	NameSelect_DrawName	{J}
08045BB4	New6C_SIOMAIN2	{J}
0804EDFC	LoadOldUIPal	{J}
0804EDFC	LoadNewUIPal	{J}
0804EE5C	LoadOldUIImage	{J}
0804EE5C	LoadNewUIImage	{J}
0804EF40	WriteUIWindowTileMap	{J}
0804F098	ClearTileMapRect	{J}
0804F0EC	MakeUIWindowTileMap_BG0BG1	{J}
0804F8E0	LoadOldUIGfx	{J}
0804F924	NewMenu_DefaultAdjusted	{J}
0804F954	NewMenu_DefaultChild	{J}
0804F970	NewMenu_Default	{J}
0804F9C0	NewMenu_804EC34	{J}
0804FA24	NewMenu_BG0BG1	{J}
0804FA3C	NewMenu	{J}
0804FC34	EndMenu	{J}
0804FCAC	EndAllMenus	{J}
0804FCC4	Menu_CallDefinedConstructors	{J}
0804FCFC	Menu_Draw	{J}
0804FE54	Menu_DrawHoverThing	{J}
0804FED8	Menu_Idle	{J}
08050008	Menu_HandleDirectionInputs	{J}
080500E8	Menu_HandleSelectInputs	{J}
08050174	Menu_GetCursorGfxCurrentPosition	{J}
080501BC	MenuCommand_UsabilityAlways	{J}
080501C0	UsabilityGrayed	{J}
080501C4	UsabilityNever	{J}
080502F4	Menu_CallTextBox	{J}
08050380	MarkSomethingInMenu	{J}
080503C0	NewMenu_AndDoSomethingCommands	{J}
08050418	Menu_UpdateMovingCursorGfxPosition	{J}
0805046C	ClearMenuRelatedList	{J}
08050618	InitTargets	{J}
08050630	AddTarget	{J}
08050684	LinkTargets	{J}
080506CC	TargetSelection_GetRealCursorPosition	{J}
080506E0	TargetSelection_Loop	{J}
080507B0	NewTargetSelection	{J}
08050818	NewTargetSelection_Specialized	{J}
0805082C	EndTargetSelection	{J}
08050860	TargetSelection_HandleMoveInput	{J}
080508D8	TargetSelection_HandleSelectInput	{J}
08050970	GetFarthestTargetIndex	{J}
080509D0	LinkTargetsOrdered	{J}
08050A74	GetLinkedTargetList	{J}
08050A84	GetFirstTargetPointer	{J}
08050AA8	GetTarget	{J}
08050AD4	NewEkrBattleDeamon	{J}
08050B00	EndEkrBattleDeamon	{J}
08050B14	IsBattleDeamonActive	{J}
08050B30	ekrBattleDeamon_Destructor	{J}
08050B48	NewEkrBattle	{J}
08050BB4	InBattleMainRoutine	{J}
08050C58	MainUpdate_804FEE4	{J}
08050CD8	ekrBattle_Init	{J}
08050D74	ekrBattle_8050000	{J}
08050DC8	ekrBattle_8050054	{J}
08050E64	ekrBattle_80500F0	{J}
08050EA8	ekrBattle_8050134	{J}
08050ECC	ekrBattle_8050158	{J}
08050EE8	ekrBattle_8050174	{J}
08050F98	ekrBattle_8050224	{J}
08050FB8	ekrBattle_8050244	{J}
08051004	ekrBattle_8050290	{J}
08051024	ekrBattle_80502B0	{J}
08051078	ekrBattle_8050304	{J}
080510AC	ekrBattle_8050338	{J}
080510D4	ekrBattle_8050360	{J}
08051160	ekrBattle_80503EC	{J}
08051174	ekrBattle_8050400	{J}
080511B4	ekrBattle_8050440	{J}
080511E0	ekrBattle_805046C	{J}
08051320	ekrBattle_80505EC	{J}
08051334	ekrBattle_8050600	{J}
080513B8	ekrBattle_8050684	{J}
080513FC	ekrBattle_80506C8	{J}
08051624	ekrBattle_80508F0	{J}
08051674	ekrBattle_8050940	{J}
080516DC	ekrBattle_80509A8	{J}
080517B8	ekrBattle_8050A84	{J}
080517EC	ekrBattle_8050AB8	{J}
0805183C	ekrBattle_8050B08	{J}
08051968	ekrBattle_CheckForLevelup_8050C34	{J}
080519A0	ekrBattle_WaitForLevelup_8050C6C	{J}
080519C4	ekrBattle_MakePopups	{J}
080519DC	ekrBattle_WaitForPopup	{J}
08051A00	ekrBattle_8050CCC	{J}
08051A2C	ekrBattle_8050CF8	{J}
08051ABC	ekrBattle_8050D88	{J}
08051ADC	ekrBattle_8050DA8	{J}
08051B18	NewEkrLvlupFan	{J}
08051C2C	NewEkrGauge	{J}
08051EA0	EndEkrGauge	{J}
08051EB4	EkrGauge_8051180	{J}
08051EC4	EkrGauge_8051190	{J}
08051ED4	EkrGauge_80511A0	{J}
08051EE4	EkrGauge_80511B0	{J}
08051EF4	EkrGauge_80511C0	{J}
08051F04	EkrGauge_80511D0	{J}
08051F18	EkrGauge_80511E4	{J}
08051F2C	EkrGauge_80511F8	{J}
08051F3C	EkrGauge_8051208	{J}
08051F4C	EkrGauge_8051218	{J}
08051F5C	EkrGauge_8051228	{J}
080527BC	NewEkrDispUP	{J}
08052840	EkrDispUP_8051B48	{J}
080528A8	ekrDispUP_Loop	{J}
08054BF8	StartSpellBG_FLASH	{J}
08055704	NewEfxStatusUnit	{J}

08055C78	NewEfxSpellCast	{J}
08056108	SetSomethingSpellFxToTrue	{J}
08056114	SetSomethingSpellFxToFalse	{J}
08056120	ClearBG1Setup	{J}
08056130	ClearBG1	{J}
08056220	ThisMakesTheHPInSpellAnimGoAway	{J}
08056774	StoreSpellAnimTilesOBJ	{J}
0805679C	StoreSpellAnimPaletteOBJ	{J}
080567B8	StoreSpellAnimTilesBG	{J}
080567E0	StoreSpellAnimPaletteBG	{J}
08056920	GetAnimationStartFrameMaybe	{J}
08056B5C	BeginAnimsOnBattleAnimations	{J}
08056BF0	MainUpdate_8055C68	{J}
08056C64	NewEkrBattleStarting	{J}
08057CAC	NewEkrWindowAppear	{J}
08057D98	NewEkrNamewinAppear	{J}
08057F80	PrepareBattleGraphicsMaybe	{J}
080D1D1C	LoadBattleSpritesForBranchScreen	runs once per frame while on branched promotion screen		{J}
08058E44	GetSpellAnimId	{J}
08059678	GetBattleAnimationId	{J}
08059790	SomethingFilterBattleAnimId	{J}
080597E4	GetAllegienceId	{J}
0805983C	GetSomeAISRelatedIndexMaybeByID	{J}
080598BC	IsItemDisplayedInBattle	{J}
080599F8	BattleAIS_ExecCommands	{J}
0805A6B0	NewEkrChienCHR	{J}
0805A6E0	RegisterAISSheetGraphics	{J}
0805AF10	GetAISSubjectId	r0=@AnimationInterpreter	{J}
0805AF28	GetSomeBoolean	{J}
0805B058	GetCoreAIStruct	{J}
0805B0B4	GetSomeAISRelatedIndexMaybe	{J}
0805B764	NewEfxAnimeDrvProc	{J}
0805B798	ExecAllAIS	{J}
0805BE4C	BeginAnimsOnBattle_Arena	{J}
0805BE94	NewEkrTogiInitPROC	{J}
0805C01C	NewEkrTogiEndPROC	{J}
0805C0F0	NewEkrTogiColor	{J}
0805C124	EndEkrTogiColor	{J}
0805C170	StartSpellAnimation	{J}
0805CA20	StartSpellThing_MagicQuake	{J}
0805CA64	Loop6C_efxMagicQUAKE	{J}
0805CC2C	StartSpellAnimDummy	{J}
0805CC50	Loop6C_efxDummymagic	{J}
0805CCA4	StartSpellAnimHandAxe	{J}
0805D000	StartSpellAnimArrow	{J}
0805D18C	StartSpellAnimJavelin	{J}
0805D6D0	StartSpellAnimSong	{J}
0805D978	StartSpellAnimDance	{J}
0805E164	StartSpellAnimFireBreath	{J}
0805E488	StartSpellAnimIceBreath	{J}
0805E5D0	StartSpellAnimDarkBreath	{J}
0805E608	Loop6C_efxDarkbreath	{J}
0805E8D8	StartSpellAnimThunder	{J}
0805E914	Loop6C_efxThunder	{J}
0805EBD4	StartSpellAnimFire	{J}
0805EC18	StartSpellAnimElfire	{J}
0805EC5C	Loop6C_efxFire	{J}
0805EDC4	Loop6C_efxFireBG	{J}
0805EEF0	StartSubSpell_efxFireHITBG	{J}
0805EFD8	StartSubSpell_efxElfireBG	{J}
0805F0A4	StartSubSpell_efxElfireBGCOL	{J}
0805F130	StartSubSpell_efxElfireOBJ	{J}
0805DFC8	StartSpellAnimFimbulvetr	{J}
0805DFC8	StartSpellAnimNosferatu	{J}
08060490	Loop6C_efxResire	{J}
08060BE0	StartSpellAnimPurge	{J}
08060F84	StartSpellAnimDivine	{J}
08060FC0	DivineSfxLoop	{J}
0806138C	StartSpellAnimFenrir	{J}
08062124	StartSpellAnimHeal	{J}
08062258	StartSpellAnimMend	{J}
08062258	StartSpellAnimRecover	{J}
080634E0	StartSpellAnimSilence	{J}
080634E0	StartSpellAnimSleep	{J}
080631EC	StartSpellAnimHammerne	{J}
08063D14	StartSpellAnimBerserk	{J}
0805E8D8	StartSpellAnimShine	{J}
08064A74	StartSpellAnimLuna	{J}
08066524	StartSpellAnimAura	{J}
08067B94	StartSpellAnimIvaldi	{J}
08067BD0	Loop6C_efxIvaldi	{J}
08066CC0	StartSpellBG_IvaldiBG1	{J}
0806309E	Loop6C_efxIvaldiBG1	{J}
08067E38	StartSpellBG_IvaldiBG2	{J}
080630A6	Loop6C_efxIvaldiBG2	{J}
08067F04	StartSpellBG_IvaldiBG3	{J}
0805EF74	Loop6C_efxIvaldiBG3	{J}
08067FE4	StartSpellBG_IvaldiBG4	{J}
0806812C	PrepareSomeIvaldiParticleGraphics	{J}
0806814C	StartSpellOBJ_IvaldiFall	{J}
0806814C	StartSpellOBJ_IvaldiSideWash	{J}
0806830C	Loop6C_efxIvaldiOBJSideWash	{J}
08069804	StartSpellAnimStone	{J}
08069AC8	StartSpellAnimEvilEye	{J}
08069EAC	StartSpellAnimNaglfar	{J}
08069EE8	Loop6C_efxNaglfar	{J}
08065D8C	Loop6C_efxNaglfarBG	{J}
0806A218	Loop6C_efxNaglfarBG2	{J}
0806BBA0	StartSpellAnimCrimsonEye	{J}
080732A0	FillBGRect	{J}
08073E74	SomePlaySound_8071990	{J}
08073ED4	Loop6C_efxSoundSE	{J}
08074EBC	EkrClasschgFinished	{J}
08074EDC	EndEkrClasschg	{J}
08074EF0	NewEkrClassChg	{J}
080752A4	EndEfxStatusUnit	{J}
080759D4	DoesEkrLevelUpSomething	{J}
080759F4	EndEkrLevelUp	{J}
08075E70	NewEkrLevelup	{J}
08077394	NewEkrTriangle	{J}
08077F54	DoesBattlePopupExist	{J}
08077F70	DeleteAnimsOnPopup	{J}
08077FAC	MakeBattlePopupTileMapFromTSA	{J}
080780DC	DrawBattlePopup	{J}
08078338	Battle_MakePopups	{J}
0807848C	BattlePopup_Wait16Frames	{J}
080784A8	ekrPopup_DrawWRankUp	{J}
080784D0	ekrPopup_WaitWRankUp	{J}
080784A8	ekrPopup_DrawWRankUp2	{J}
08078534	ekrPopup_WaitWRankUp2	{J}
08078570	ekrPopup_DrawWpnBroke	{J}
08078534	ekrPopup_WaitWpnBroke	{J}
080785D4	ekrPopup_DrawWpnBroke2	{J}
080785FC	ekrPopup_WaitWpnBroke2	{J}
0807863C	ekrPopup_MarkEnd	{J}
08078750	BeginAnimsOnBattle_Hensei	{J}
0807878C	NewEkrHenseiInitPROC	{J}
0807A638	GetSpellAssocStructPtr	{J}
0807A66C	GetSpellAssocCharCount	{J}
0807A68C	GetSpellAssocAlt6CPointer	{J}
0807A69C	GetSpellAssocReturnBool	{J}
0807A6AC	GetSpellAssocFacing	{J}
0807A6BC	GetSpellAssocFlashColor	{J}
0807A710	GenerateMonsterLevel	{J}
0807A748	GenerateMonsterClass	{J}
0807A774	GenerateMonsterItems	{J}
0807A830	ResetMoveunitStructs	{J}
0807A84C	Make6CMOVEUNITForUnit	{J}
0807A888	MakeMOVEUNITForMapUnit	{J}
0807A908	MOVEUNIT6C_SetCameraFollow	{J}
0807A910	MOVEUNIT6C_UnsetCameraFollow	{J}
0807A918	Make6CMOVEUNITForUI	{J}
0807A964	NewMOVEUNIT	{J}
0807AAB8	MOVEUNIT6C_SetSpriteDirection	{J}
0807AAE0	MOVEUNIT6C_SetDefaultSpriteDirection	{J}
0807AB0C	_MOVEUNIT6C_SetDefaultFacingDirection	{J}
0807AB24	_MOVEUNIT6C_ChangeFutureMovement	{J}
0807AB44	DoesMoveunitExist	{J}
0807AB5C	IsThereAMovingMoveunit	{J}
0807ABB4	MOVEUNIT6C_ChangeFutureMovement	{J}
0807AC20	Init6C_89A2938	{J}
0807AC34	Call89A2938_PlaySound1	{J}
0807AC48	Call89A2938_PlaySound2	{J}
0807AC60	NewSoundStepPlay6C	{J}
0807ACAC	__MOVEUNIT6C_PlaySoundStepByClass	{J}
0807ADEE	Moveunit_ExecMoveCommand	{J}
0807AE28	DisplayFogThingMaybe	{J}
0807AE78	Call6C_89A2968	{J}
0807AF1C	Loop6C_89A2968_1	{J}
0807AFE0	Loop6C_89A2968_2	{J}
0807B010	Does6C_89A2968Exist	{J}
0807B028	MOVU_Call5_WaitForSomething	{J}
0807B044	MOVU_Call4_SetState2	{J}
0807B04C	MOVU_Call3_Wait	{J}
0807B074	MOVU_Call2_Moving	{J}
0807B180	MOVEUNIT6C_PlaySoundStepByClass	{J}
0807B444	_6CMOVEUNIT_Loop	{J}
0807B4A4	_6CMOVEUNIT_Destructor	{J}
0807B4B8	ClearMOVEUNITs	{J}
0807B4C8	EndMoveunitMaybe	{J}
0807B4D4	Delete6C__	{J}
0807B4F4	BlockAll6CMarked4	{J}
0807B500	UnblockAll6CMarked4	{J}
0807B580	IsSomeMOVEUNITRelatedStructAvailable	{J}
0807B5A4	ResetAllMoveunitAnims	{J}
0807B5E0	GetNextMoveunitEntryStruct	{J}
0807B70C	UpdateMOVEUNITGfx_Idle	{J}
0807B7B8	UpdateMOVEUNITGfx_Movement	{J}
0807B890	MOVEUNIT6C_GetMovementSpeed	{J}
0807B96C	GetMOVEUNITGraphicsBuffer	{J}
0807B988	GetMovingMapSpriteGfxPtrFromMOVEUNIT	{J}
0807B99C	MMS_GetROMTCS	{J}
0807B9B0	StartMoveUnitDeathBlend2	{J}
0807BA2C	BlendTimer6C_MainLoop	{J}
0807BBE8	SetMOVEUNITField40To1	{J}
0807BBF8	MOVEUNIT6C_SetDisplayPos	{J}
0807BCC4	SetupSomeMoveunitAnim	{J}
0807BCF4	TCS_HaltAnim2	{J}
0807BD58	MOVEUNIT_Begin20FramesFastAnim	{J}
0807BD7C	TCS_HaltAnim	{J}
0807BF0C	SetAllMOVEUNITField44To1	{J}
0807BF24	SetMOVEUNITField44To1	{J}
0807BF2C	ChangeMOVEUNITDataMaybe	{J}
0807BFA4	GetMoveunitByIndex	{J}
0807BFCC	GetExistingMoveunitForUnit	{J}
0807C0DC	CopyEventMoveToBuffer	{J}
0807C144	ClearEventMoveBuffer	{J}
0807C270	MuCtr_SetupWithEventMoveBuffer	{J}
0807C410	MoveUnit_	{J}
0807C8DA	GetAdjustedPositionForNewUnit	{J}
0807CAE4	DisplayWpnBrokePopup	{J}
0807CB28	BattleUnit_ShouldDisplayWpnBroke	{J}
0807CB4C	DisplayWRankUpPopup	{J}
0807CB90	BattleUnit_ShouldDisplayWRankUp	{J}
0807CBB8	_InitFontForUIDefault	{J}
0807CBC4	MapAnim_Cleanup	{J}
0807CBF0	MapAnim_AdvanceBattleRound	{J}
0807CC4C	MapAnim_PrepareNextBattleRound	{J}
0807CCA8	MapAnim_DisplayRoundAnim	{J}
0807CCBC	MapAnim_ShowPoisonEffectIfAny	{J}
0807CCF8	MapAnim_MoveCameraOntoSubject	{J}
0807CD14	MapAnim_MoveCameraOntoTarget	{J}
0807CF54	MapAnim_CallBattleQuoteEvents	{J}
0807D028	PlaySoundIdA0	{J}
0807D060	New6C_SummonGfx_FromActionPos	{J}
0807D704	SetBattleAnimFacing	{J}
0807D7AC	SetupBattleMOVEUNITs	{J}
0807DA2C	BeginMapAnimForSteal	{J}
0807DA88	BeginMapAnimForSummon	{J}
0807DA88	BeginMapAnimForSummonDK	{J}
0807DB9C	BeginBattleMapAnims	{J}
0807DC1C	SetupMapAnimSpellData	{J}
0807DC48	SetupMapBattleAnim	{J}
0807DD00	GetFacingDirection	{J}
0807DF00	DeleteBattleAnimInfoThing	{J}
0807DF10	NewMapBattleInfoThing	{J}
0807EE68	MapAnim_BeginMISSAnim	{J}
0807EE68	MapAnim_BeginNODAMAGEAnim	{J}
0807EF20	MapAnim_BeginWallBreakAnim	{J}
0807EF6C	WallBreakAnim_Init	{J}
0807EFBC	NewMapPoisonEffect	{J}
0807F004	MapAnim_BeginPoisonAnim	{J}
0807FB70	NewMapAnimEffectAnimator	{J}
0807FDEC	StartMapAnimTargetUnitWarpRingProcs	{J}
08080F48	GetSomeStatUp	{J}
08081070	GetSomeStatBase	{J}
08081954	NewBG0Shaker	{J}
08081968	BG0Shaker_Init	{J}
08081970	BG0Shaker_Loop	{J}
08081A00	LoadSparkGfx	{J}
08081B38	StartStarRotationEffect	{J}
08081B78	StartStarExplosionEffect	{J}
08081B98	StartStarImplosionEffect	{J}
0808306C	New6C_SummonGfx	{J}
080835A0	GetItemAnim6CCode	{J}
080835B8	MapAnim_AnimateSubjectIdle	{J}
080835DC	MapAnim_SubjectResetAnim	{J}
08083738	MapAnim_BeginSubjectFastAnim	{J}
08083814	MapAnim_MoveSubjectsTowardsTarget	{J}
08083874	MapAnim_MoveSubjectsAwayFromTarget	{J}
080838D4	MapAnim_MoveCameraOnSubject	{J}
08083900	MapAnim_MoveCameraOnTarget	{J}
0808395C	MapAnim_BeginRoundSpecificAnims	{J}
08083C54	MapAnim_WaitForHPToEndChangingMaybe	{J}
08083C70	MapAnim_PoisonEffectOnTarget	{J}
080851B8	CallEventsFromBuffer	{J}
080851FC	CheckForEvents	{J}
08085260	CheckForNextEvents	{J}
080854E4	IsThereClosedChestAt	{J}
08085528	IsThereClosedDoorAt	{J}
08085610	CheckEventId3	{J}
08085640	GetTrapPointer	GetCurrentChapterBallistaePtr	{J}
08085658	GetTrapAdditionalHardModePointer	GetCurrentChapterBallistae2Ptr	{J}
08085680	GetChapterAllyUnitDataPointer	{J}
080857E8	ShouldCallBattleQuote	{J}
0808583C	CallBattleQuoteEventsIfAny	{J}
08085B6C	CheckAFEV	{J}
08085B9C	CheckTURN	{J}
08085BE4	CheckCHAR	{J}
08085C34	CheckCHARASM	{J}
08085C70	CheckLOCA	{J}
08085CB0	CheckVILL	{J}
08085CC4	CheckCHES	{J}
08085D00	CheckDOOR	{J}
08085D90	CheckSHOP	{J}
08085DEA	CheckAREA	{J}
08085F00	SetLocalEventId	Flag	{J}
08085F34	UnsetLocalEventId	{J}
08085F70	ClearLocalEvents	{J}
08085F88	CheckLocalEventId	{J}
08085FC8	SetGlobalEventId	{J}
08086000	UnsetGlobalEventId	{J}
08086094	CheckGlobalEventId	{J}
080860E8	GetGlobalEventIdStorage	{J}
080860F0	GetGlobalEventIdStorageSize	{J}
080860F4	GetLocalEventIdStorage	{J}
080860FC	GetLocalEventIdStorageSize	{J}
0808618C	TryCallSelectEvents_u1C	{J}
08086350	GetAvailableLocaCommandAt	{J}
08086604	CheckForWaitEvents	{J}
08086694	RunWaitEvents	{J}
080861E0	TryCallSelectEvents	{J}
08086918	GetBattleQuoteEntry	{J}
08086ACC	IsCharacterForceDeployed_	{J}
08086B24	IsSethLArachelMyrrhInnes	{J}
080871B4	AreAnyEnemyUnitDead	{J}
080871E8	GetDeadEnemyAmount	{J}
08087238	IsCharDeadAsNonPlayerUnit	{J}
08087750	ResetAllPlayerUnitState	{J}
08087C3C	SetEventId_0x84	{J}
08087C48	UnsetEventId_0x84	{J}
080886E0	HandleCh5xUnits_Start	{J}
08088730	HandleCh5xUnits_End	{J}
08088798	CallRouteSplitMenu	{J}
080887E0	MenuCommand_DrawRouteSplit	{J}
08088830	Command_EirikaMode	{J}
0808884C	Command_EphraimMode	{J}
08089354	DrawStatScreenBar	{J}
08089910	DrawUnitScreenSupportList	{J}
08089A00	DrawUnitWeaponRank	{J}
0808B3F0	New6CRText	{J}
0808B6FC	Loop6C_8A00B20_UpdateOAMData	{J}
0808BB14	LoadDialogueBoxGfx	{J}
0808DEDC	GetCameraMovementSpeedMaybe	{J}
0808DFF8	Loop6CUI1_DisplayTransition	{J}
0808E170	Loop6CUI1_HideTransition	{J}
0808E75E	DrawMinimugBoxMaybe	{J}
0808E8CC	InitMinimugBoxMaybe	{J}
0808EFC4	Loop6CUI1_Hidden	{J}
0808F070	Loop6CUI1_Displayed	{J}
0808F198	Init6CUI2	{J}
0808F1C4	Loop6CUI2	{J}
0808F2C0	InitPlayerPhaseInterfaceMaybe	{J}
0808F438	New6CPPInterfaceConstructor	{J}
0808F44C	DeletePlayerPhaseInterface6Cs	{J}
0808F584	Init6CPI	{J}
0808F764	Loop16CPI	{J}
0808F9BC	Loop26CPI	{J}
0808FA04	Loop46CPI	{J}
0808FA64	__malloc_unlock_0	{J}
0808FA6C	Loop36CPI	{J}
0808FDCC	MinimalVBlankHandler	{J}
08090A38	NewChapterStatusScreen	{J}
080975B0	__malloc_unlock_1	{J}
080976D0	IsCharacterForceDeployed	{J}
0809773C	SomeLeftoverFunctionThatReturns0	{J}
08097740	IsUnitInCurrentRoster	{J}
08097A28	SortPlayerUnitsForPrepScreen	{J}
08097D18	EndBG3Slider_	{J}
08098968	NewPrepScreenTraineePromotionManager	{J}
0809897C	PrepScreenTraineePromotionManagerExists	{J}
08099968	Delete6CMenuScroll	{J}
0809997C	Make6CMenuScroll	{J}
0809A4BC	SomethingPrepListRelated	{J}
0809A674	CanUnitPrepScreenUse	{J}
0809F560	StoreConvoyWeaponIconGraphics	{J}
080A29F8	__malloc_unlock_2	{J}
080A776C	LoadSomeUnitStatThingUnlockIdk	{J}
080A77EC	SaveSomeUnitStatThingUnlockIdk	{J}
080A7918	GetSaveDataOffsetPointer	{J}
080A7AA8	GetSaveDataLocation	{J}
080A7B74	SaveLocalEventIndexes	{J}
080A7B94	SaveGlobalEventIndexes	{J}
080A7BB4	LoadLocalEventIds	{J}
080A7BB4	LoadGlobalEventIds	{J}
080A7C28	SaveConvoyItems	{J}
080A7CB0	LoadConvoyItems	{J}
080A81EC	SetSomeUnitStatThingUnlockMaybeIdk	{J}
080A82B0	__malloc_unlock_3	{J}
080A8C60	LoadBWLEntries	{J}
080A8C8C	LoadSomeTable	{J}
080A8CA8	SaveBWLEntries	{J}
080A8CCC	SaveChapterWinData	{J}
080A8CE0	GetChapterWinDataEntry	{J}
080A8D00	GetNextChapterWinDataEntryIndex	{J}
080A8D30	GetWonChapterCount	{J}
080A8D94	RegisterChapterTimeAndTurnCount	{J}
080A8E1C	GetGameTotalTurnCount	{J}
080A8E48	DoesThisChapterCount	{J}
080A8E8C	GetGameTotalTime	{J}
080A8ECC	GetGameTotalTurnCount2	{J}
080A90C8	BWL_AddWinOrLossIdk	{J}
080A9190	BWL_IncrementMoveValue	{J}
080A91D0	BWL_IncrementStatScreenViews	{J}
080A9210	BWL_IncrementDeployCountMaybe	{J}
080A9260	BWL_AddTilesMoved	{J}
080A92C0	BWL_AddExpGained	{J}
080A9320	StoreSomeUnitSetFlags	{J}
080A9478	BWL_AddFavoritismValue	{J}
080A9740	BWL_GetEntry	{J}
080A9778	Set0203EDB4	{J}
080A9784	Save0203EDB4	{J}
080A97A0	Load0203EDB4	{J}
080A9A28	SaveGame	{J}
080A9B40	LoadGame	{J}
080A9D54	SaveUnit	{J}
080AA1AC	LoadSavedUnit	{J}
080AA3F8	SaveRNGState_Maybe	{J}
080AA460	SaveSuspendedGame	{J}
080AA62C	LoadSuspendedGame	{J}
080AA828	PackUnitStructForSuspend	{J}
080AAB30	UnpackUnitStructFromSuspend	{J}
080AAD88	SaveTrapStructs	{J}
080ADA3C	Loop6C_savemenu	{J}
080AEFA4	Make6C_savemenu	{J}
080AEFFC	Make6C_savemenu2	{J}
080AF010	savemenu_SetDifficultyChoice	{J}
080AFDD4	New6C_savedraw	{J}
080B0E88	NewNewGameDifficultySelect	{J}
080B1D88	_CallDifferedLoop	{J}
080B1D98	Get6CDifferedLoop6C	{J}
080B1DBC	DeleteEach6CDifferedLoop	{J}
080B1DD8	Find6CDifferedLoop	{J}
080B2C08	FadeInOut_Init	{J}
080B2C1C	FadeIn_Loop	{J}
080B2C7C	FadeOut_Loop	{J}
080B2CC4	FadeInOut_DisableGfx	{J}
080B2D1C	FadeInExists	{J}
080B2D34	FadeOutExists	{J}
080B2D4C	NewFadeIn	{J}
080B2D70	NewFadeOut	{J}
080B7610	Make6C_opinfo	{J}
080B8CDC	Shop6C_GetPortraitIndex	{J}
080B8D68	MakeShopArmory	{J}
080B8D88	MakeShopVendor	{J}
080B8DC8	MakeShop	{J}
080BD8E0	WorldMap_Destruct	{J}
080BDC24	SetupGraphicSystemsForWorldMap	{J}
080BDE6C	DeployEveryUnit	{J}
080BE9D4	WorldMap_InitChapterTransition	{J}
080BEB4C	WorldMap_WaitForChapterIntroEvents	{J}
080BED9C	DoNothing	{J}
080BEEB8	EndWM	{J}
080BF178	NewWorldMap	{J}
080BF1C8	WorldMap_SetupChapterStuff	{J}
080BF268	CallChapterWMIntroEvents	{J}
080BF5B4	NewMapScreenVSynce	{J}
080BF5F4	MapScreen_OnDelete	{J}
080BF600	MapScreen_Init	{J}
080BFA40	NewMapScreen	{J}
080BFA6C	MMS_GetGfx	{J}
080BFA80	MMS_GetROMTCS2	{J}
080BFA94	GetMapUnitMMSGfxBuffer	{J}
080BFAA8	GmapUnit_Destruct	{J}
080BFAB4	GmapUnit_Init	{J}
080BFAC8	GmapUnit_Loop	{J}
080BFC04	GetPaletteIdForAllegience	{J}
080BFC20	NewMapUnit	{J}
080BFD3C	MapUnitC_DeleteGmapUnit	{J}
080BFD64	MapUnitC_SetPosition	{J}
080BFDB4	MapUnitC_SetTCSAnim	{J}
080BFE48	MapUnitC_SetTCSOAMIndex	{J}
080BFE68	MapUnitC_SetAllegienceColorIndex	{J}
080BFED4	MapUnitC_MarkSomething	{J}
080BFFD0	GmapUnitContainer_Destruct	{J}
080BFFF8	GmapUnitContainer_Init	{J}
080C0018	NewGmapUnitContainer	{J}
080C003C	GmapUnitFade_Destruct	{J}
080C0094	GmapUnitFade_Init	{J}
080C0178	GmapUnitFade_Loop	{J}
080C03E0	WMLoc_GetChapterId	{J}
080C0414	WMLoc_GetNextLocId	{J}
080C0548	GmapScreen2_Destruct	{J}
080C0554	GmapScreen2_Init	{J}
080C08C8	GmapCursor_Init	{J}
080C0918	GmapCursor_Destruct	{J}
080C0A08	NewGmapCursor	{J}
080C0F00	MapRoute_StartTransition	{J}
080C0FC8	MapRoute_EnableBGSyncs	{J}
080C0FFC	MapRoute_TransitionLoop	{J}
080C106C	MapRoute_TransitionEnd	{J}
080C10E0	MapRoute_BeginRouteTransition	{J}
080C1120	MapRoute_80BC2DC	{J}
080C11E8	NewMapRoute	{J}
080C16FC	SetupNewWMRoute	{J}
080C172C	WM_RemovePath	{J}
080C1E74	GetChapterThing	{J}
080C20B8	GetCharacterClassId	{J}
080C20F8	MapMUPrim_MakeUnitForChar	{J}
080C2180	MapMUPrim_MakeUnitForClass	{J}
080C21F4	MapMUPrim_RemoveLinkedMapUnit	{J}
080C29EC	MapMU_FillPrim	{J}
080C2A10	NewMapMU	{J}
080C2A24	MapMU_SetUnit	{J}
080C2B14	MapMU_RemoveUnit	{J}
080C2ED0	MapMU_SetUnitTCSOAMIndex	{J}
080C2EF0	MapMU_80BE108	{J}
080C3320	MapMU_SetUnitClass	{J}
080C333C	MapMU_SetUnitChar	{J}
080C42B4	WM_PutClassSprite	{J}
080C42E8	WM_PutCharSprite	{J}
080C431C	WM_RemoveUnit	{J}
080C4370	WM_DrawPath	{J}
080C4FC0	NewMapMuEntry	{J}
080C5628	GetWMCenteredCameraPosition	{J}
080C71D8	Make6C_Gmap_RM	{J}
080C7264	GetWMDisplayPosition	{J}
080CB684	AddSomeChild6C	{J}
080CB698	DeleteSome6C	{J}
080CB6AC	StorePaletteToBufferMaybe	{J}
080CB960	Initialize6CIntroSequence	{J}
080CBD9C	Until6C2AIs8Callback	{J}
080D1184	MakePromotionScreen	{J}
080D11B4	Make6C_PromotionMain	{J}
080D1620	PromotionInit_SetNullState	{J}
080D162C	PromotionInit_Loop	{J}
080D1A3C	Make6C_PromotionSub	{J}
080D2824	PromotionCommand_OnSelect	{J}
080D29C0	PromotionCommand_OnTextDraw	{J}
080D29FC	PromotionCommand_OnChange	{J}
080D2A34	Usability_ThirdPromotionOption	{J}
080D2AD8	Make6C_PromotionMenuSelect	{J}
080D6380	DivArm	{J}
080D63E0	SRAMLoader	{J}
080D6420	SRAMTransfer	{J}
080D6460	SaveChecker	{J}
080D64AC	StoreLoadRoutinesToRAM	{J}
080D6548	SRAMTransfer_WithCheck	{J}
080D8C5C	_cleanup_r	{J}
080D8C6C	_cleanup	{J}
080D920C	setlocale	{J}
080D9224	localeconv	{J}
080DA1A8	_ratio	{J}
080DA1F8	_mprec_log10	{J}
080DA35C	__sclose	{J}
080DA3E8	remap_handle	{J}
080DA4A4	get_errno	{J}
080DA4B8	error	{J}
080DA4CC	wrap	{J}
080DA938	isatty	{J}
080DA828	alarm	{J}
080DAAE8	__unpack_d	{J}
080DABC0	_fpadd_parts	{J}
080DB870	_fpadd_parts_0	{J}
08012EDC	OutputBitmapToVRAM	void	unsigned int *bitmap, void *dst	{U}
080131BC	writePlainTSA	void	u16 *TSABufferInWRAM, int tileIndexAndPaletteIndex, int height, int width	{J}
08013104	writePlainTSA	void	u16 *TSABufferInWRAM, int tileIndexAndPaletteIndex, int height, int width	{U}
08012FF4	changeTiles	void	void *src, void *dst, int width, int height	{U}
0805D0F4	loadArrowOBJ	void	void *AIS	{J}
0805C358	loadArrowOBJ	void	void *AIS	{U}
08054FA8	loadSpellCast	void	{U}
080563C0	suckBloodAnimation	void	int a1, int ifMiss	{J}
08055424	suckBloodAnimation	void	int a1, int ifMiss	{U}
0805AF2C	checkIfCritical	int	void *AIS	{J}
0805A188	checkIfCritical	int	void *AIS	{U}
0806ED0C	criticalAttackEffect	void	int a1	{J}
0806C9E8	criticalAttackEffect	void	int a1	{U}
0800FF68	eventCodeFunc_DF	int	struct context *parent	{U}
080AA518	loadIceCrystal	void	int a1	{U}
0806063C	loadResireBG2	void	int a1	{J}
0805D8B4	loadResireBG2	void	int a1	{U}
080605B0	loadResireBG	void	int a1, u8 ifMiss	{J}
0805F4B0	loadResireBG	void	int a1, u8 ifMiss	{U}
0805C1A4	loadResireRST5	context*	int a1, int a2, int a3, int a4, int a5	{J}
0805B400	loadResireRST5	context*	int a1, int a2, int a3, int a4, int a5	{U}
08060938	loadResireRST3	void	int a1, struct context *a2, u16 a3	{J}
0805F838	loadResireRST3	void	int a1, struct context *a2, u16 a3	{U}
0805C5D8	loadRestWINH	void	int a1, int a2, u16 a3, u32 a4	{J}
0805B828	loadRestWINH	void	int a1, int a2, u16 a3, u32 a4	{U}
0805C6EC	loadRestWINH1	void	int a1, int a2, u32 a3	{J}
0805B93C	loadRestWINH1	void	int a1, int a2, u32 a3	{U}
08061540	loadHazymoonBG1	void	void *AIS	{J}
08060440	loadHazymoonBG1	void	void *AIS	{U}
08060D90	loadHazymoonOBJ3	void	void *AIS	{J}
0805FC90	loadHazymoonOBJ3	void	void *AIS	{U}
080615b0	loadHazymoonBG2	void	void *AIS	{J}
080604B0	loadHazymoonBG2	void	void *AIS	{U}
08061614	loadHazymoonBG3	void	void *AIS	{J}
08060514	loadHazymoonBG3	void	void *AIS	{U}
080616E8	loadHazymoonOBJ2	void	void *AIS	{J}
080605E8	loadHazymoonOBJ2	void	void *AIS	{U}
0805A2B4	getTargetAIS	void	int a1	{U}
08053F10	loadFlashBG	{U}
0804f954	Show menu	void	MENUDEF	mazo	{J}
080864CD	Scenario Branch Selector Display	void	{U}
08037B64	Hero determination function	bool	{U}
08037bfc	Hero determination function	bool	{J}
0804ECB0	NewMenu Constructs Menu	6C	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=geometry	r2=background BG index	r3=tile related thing? (stored to field 0x66)	{U}
0804EBE4	NewMenu_Default Constructs Menu	6C, BG1 is background, BG0 is foreground, no parent 6C, default geometry, default everything	E_Menu 6C pointer	r0=pointer to Menu Definition	{U}
0804EB98	NewMenu_DefaultAdjusted Same as NewMenu_Default, except default geometry is adjusted given parameters	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=some x screen position?	r2=X tile position of menu on left
0804EBC8	NewMenu_DefaultChild Same as NewMenu_Default, except E_Menu has a parent	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=Parent 6C	{U}
0804EC98	NewMenu_BG0BG1 Constructs Menu 6C, BG1 is background, BG0 is foreground	E_Menu 6C pointer	r0=pointer to Menu Definition	r1=geometry	r2=parent 6C	{U}
0804EF20	EndAllMenus Kills *all* E_Menus	void	{U}
08025854	RunSkillLockPickPerform skill key unpacking	{J}
080258A4	RunSkillLockPickPerform skill key unpacking	{U}
080dc0dc	&ARM	CallARM_FillTileRect	{J}
080dc0e4	TileMap_FillRect	{J}
080dc0f4	TileMap_CopyRect	{J}
085B9DD4	:085B9E13	&EVENT	Event"Support level has gone up"	{J}
085B9E14	:085B9E3B	&EVENT	Event"Fade in, fade out and talk"	{J}
085B9E3C	:085B9E9B	&EVENT	Event"Do you want to retreat?	{J}
085B9E9C	:085B9EE7	&EVENT	Event"Do you want to interrupt?	{J}
08037DF0	Start retreat processing called from event	{J}
08087640	Start interrupt process called from event	{J}
08591FF0	:0859202F	&EVENT	Event"Support level has gone up"	{U}
08592030	:08592057	&EVENT	Event"Fade in, fade out and talk"	{U}
08592058	:085920B7	&EVENT	Event"Do you want to retreat?	{U}
085920B8	:08592103	&EVENT	Event"Do you want to interrupt?	{U}
08037D58	Start retreat processing called from event	{U}
080B5D5C	Start interrupt process called from event	{U}
08088B08	StatusRMenu_StrengthGetter	{U}
08088BD4	StatusRMenu_02BlankGetter	{U}
08088C00	StatusRMenu_ClassGetter	{U}
08088A2C	StatusRMenu_10BlankGetter	{U}
08088B40	StatusRMenu_Item0Loop	{U}
08088A00	StatusRMenu_Item0Getter	{U}
08088BD4	StatusRMenu_Item3Getter	{U}
08088B94	StatusRMenu_Weapon0Getter	{U}
08022FDC	SeizeCommandUsability	{U}
08023020	SeizeCommandEffect	{U}
08022B30	AttackCommandEffect	{U}
08023B3C	DisplayUnitStandingStaff	{U}
08023B84	HideMoveRangeGraphicsWrapperByStaff	{U}
0802494C	ExitCommandUsability	{U}
08024980	ExitCommandEffect	{U}
08023158	PlayCommandUsability	{U}
080231D0	PlayOrDanceCommandEffect	{U}
08023194	DanceCommandEffect	{U}
080243D8	SummonCommandUsability	{U}
080244B8	SummonCommandEffect	{U}
080244FC	SummonsDemonKingCommandUsability	{U}
08024548	SummonsDemonKingCommandEffect	{U}
08023EB4	PickCommandEffect	{U}
08023C80	TalkCommandUsability	{U}
08023CC4	TalkCommandEffect	{U}
08023D14	SupportCommandUsability	{U}
08023D64	SupportCommandEffect	{U}
08023040	VisitCommandUsability	{U}
080230C0	VisitCommandEffect	{U}
08023E1C	ChestCommandUsability	{U}
08023E58	ChestCommandEffect	{U}
08023DB4	DoorCommandUsability	{U}
08023DF4	DoorCommandEffect	{U}
08023FD8	ArmoryCommandUsability	{U}
08024014	ArmoryCommandEffect	{U}
08024034	VendorCommandUsability	{U}
08024070	VendorCommandEffect	{U}
08024090	SecretCommandUsability	{U}
080240CC	SecretCommandEffect	{U}
080240EC	ArenaCommandUsability	{U}
08024144	ArenaCommandEffect	{U}
080232B8	ItemCommandUsability	{U}
08022F34	TradeCommandUsability	{U}
08022F88	TradeCommandEffect	{U}
08023FB8	SupplyCommandEffect	{U}
0802260C	UnitCommandEffect	{U}
08022650	CommandEffect	{U}
08022660	GuideCommandUsability	{U}
08022678	GuideCommandPaint	{U}
08024C40	RecordCommandEffect	{U}
08024CBC	RecordCommandUsability	{U}
08022628	OptionCommandEffect	{U}
08024CCC	RetreatCommandUsability	{U}
08024CE0	RetreatCommandEffect	{U}
080225B0	SuspendCommandUsability	{U}
080225D0	SuspendCommandEffect	{U}
0801C030	DebugFileEraseCommandEffect	{U}
0801C4B4	DebugReleaseEntryCommandEffect	{U}
0801C39C	DebugContinueChpCommandUsability	{U}
0801C3B4	DebugContinueChpCommandEffect	{U}
0801C328	DebugManualContCommandUsability	{U}
0801C340	DebugManualContCommandEffect	{U}
0801C370	DebugInitializeFileCommandEffect	{U}
0801C308	DebugManualSaveCommandUsability	{U}
0801C30C	DebugManualSaveCommandEffect	{U}
080238E0	YesCommandEffect	{U}
080234FC	NoCommandEffect	{U}
0802367C	UseCommandUsability	{U}
08023770	UseCommandEffect	{U}
080236F4	EquipCommandUsability	{U}
080237F8	EquipCommandEffect	{U}
08022F34	TradeCommandUsability	{U}
08023838	TradeCommandEffect	{U}
0802373C	DiscardCommandUsability	{U}
0802386C	DiscardCommandEffect	{U}
08023498	ItemSelectMenuOnHover	{U}
080234A8	ItemSelectMenuHide	{U}
08023C68	StaffItemSelectHide	{U}
08023498	SendToConvoyMenuOnHover	{U}
080234A8	SendToConvoyMenuHide	{U}
0801E1FC	SendToConvoyMenuEffect	{U}
0801E294	SendToConvoyMenuIdel	{U}
0808AD94	StatusRMenu_StrengthGetter	{J}
0808AE60	StatusRMenu_02BlankGetter	{J}
0808AE8C	StatusRMenu_ClassGetter	{J}
0808ACB8	StatusRMenu_10BlankGetter	{J}
0808ADCC	StatusRMenu_Item0Loop	{J}
0808AC8C	StatusRMenu_Item0Getter	{J}
0808AE60	StatusRMenu_Item3Getter	{J}
0808AE20	StatusRMenu_Weapon0Getter	{J}
08022FA4	SeizeCommandUsability	{J}
08022FE8	SeizeCommandEffect	{J}
08022AF8	AttackCommandEffect	{J}
08023B00	DisplayUnitStandingStaff	{J}
08023B48	HideMoveRangeGraphicsWrapperByStaff	{J}
080248FC	ExitCommandUsability	{J}
08024930	ExitCommandEffect	{J}
08023120	PlayCommandUsability	{J}
08023198	PlayOrDanceCommandEffect	{J}
0802315C	DanceCommandEffect	{J}
08024390	SummonCommandUsability	{J}
080244AC	SummonsDemonKingCommandUsability	{J}
080244F8	SummonsDemonKingCommandEffect	{J}
08023E70	PickCommandEffect	{J}
08023C44	TalkCommandUsability	{J}
08023C88	TalkCommandEffect	{J}
08023CD4	SupportCommandUsability	{J}
08023C88	SupportCommandEffect	{J}
08023008	VisitCommandUsability	{J}
08023088	VisitCommandEffect	{J}
08023DD8	ChestCommandUsability	{J}
08023E14	ChestCommandEffect	{J}
08023D70	DoorCommandUsability	{J}
08023DB0	DoorCommandEffect	{J}
08023F94	ArmoryCommandUsability	{J}
08023FD0	ArmoryCommandEffect	{J}
08023FF0	VendorCommandUsability	{J}
0802402C	VendorCommandEffect	{J}
0802404C	SecretCommandUsability	{J}
08024088	SecretCommandEffect	{J}
080240A8	ArenaCommandUsability	{J}
08024100	ArenaCommandEffect	{J}
08023280	ItemCommandUsability	{J}
08022EFC	TradeCommandUsability	{J}
080228A0	TradeCommandEffect	{J}
08023F74	SupplyCommandEffect	{J}
080225D8	UnitCommandEffect	{J}
0802261C	CommandEffect	{J}
0802262C	GuideCommandUsability	{J}
08022644	GuideCommandPaint	{J}
08024BF0	RecordCommandEffect	{J}
08024C6C	RecordCommandUsability	{J}
080225F4	OptionCommandEffect	{J}
08024C7C	RetreatCommandUsability	{J}
08024C90	RetreatCommandEffect	{J}
0802257C	SuspendCommandUsability	{J}
0802259C	SuspendCommandEffect	{J}
0801BCC0	DebugFileEraseCommandEffect	{J}
0801C130	DebugReleaseEntryCommandEffect	{J}
0801C02C	DebugContinueChpCommandUsability	{J}
0801C044	DebugContinueChpCommandEffect	{J}
0801BFB8	DebugManualContCommandUsability	{J}
0801BFD0	DebugManualContCommandEffect	{J}
0801C000	DebugInitializeFileCommandEffect	{J}
0801BF98	DebugManualSaveCommandUsability	{J}
0801BF9C	DebugManualSaveCommandEffect	{J}
080238A4	YesCommandEffect	{J}
080234C0	NoCommandEffect	{J}
08023640	UseCommandUsability	{J}
08023734	UseCommandEffect	{J}
080236B8	EquipCommandUsability	{J}
080237BC	EquipCommandEffect	{J}
08022EFC	TradeCommandUsability	{J}
080237FC	TradeCommandEffect	{J}
08023700	DiscardCommandUsability	{J}
08023830	DiscardCommandEffect	{J}
0802345C	ItemSelectMenuOnHover	{J}
0802346C	ItemSelectMenuHide	{J}
08023C2C	StaffItemSelectHide	{J}
0802345C	SendToConvoyMenuOnHover	{J}
0802346C	SendToConvoyMenuHide	{J}
0801DE58	SendToConvoyMenuEffect	{J}
0801DEF0	SendToConvoyMenuIdel	{J}
08074050	Command85	{J}
08071B6C	Command85	{U}
089F7D20	:08A07D1F	It seems to be deformed tile animation data1	{J}
08A09920	:08A0BD1F	It seems to be deformed tile animation data2	{J}
089875AC	:089975AB	It seems to be deformed tile animation data1	{U}
089875AC	:0899B5AB	It seems to be deformed tile animation data2	{U}
08C258A4	&LZ77	unreleased works Empty Battle Sheet	{J}
08CBFAD8	&LZ77	unreleased works Empty Battle Sheet	{J}
08CBFEA8	&LZ77	unreleased works Empty Battle Sheet	{J}
08D2B5F0	&LZ77	unreleased works Empty Battle Sheet	{J}
08D2D080	&LZ77	unreleased works Empty Battle Sheet	{J}
08D7E080	&LZ77	unreleased works Empty Battle Sheet	{J}
08D7E450	&LZ77	unreleased works Empty Battle Sheet	{J}
08D914A0	&LZ77	unreleased works Empty Battle Sheet	{J}
08DCB4B0	&LZ77	unreleased works Empty Battle Sheet	{J}
08DD2CA8	&LZ77	unreleased works Skeleton Spear	{J}
08DD8604	&LZ77	unreleased works Standby motion of skeleton bow	{J}
08DFB6D8	&LZ77	unreleased works Empty Battle Sheet	{J}
08AA5344	&LZ77	Something's bar	{J}
08AA5380	&LZ77	menu	{J}
08AD1540	&LZ77	Something like a fireball	{J}
08B1D11C	&LZ77	triangle	{J}
08B1D954	&LZ77	A number	{J}
//08B30274	&LZ77	Something using TSA	{J}
//08B35820	&LZ77	Something using TSA	{J}
//08B3B014	&LZ77	Something round	{J}
08BBB340	&LZ77	Guide letters	{J}
08BBB3E4	&LZ77	Status of lower left of screen etc		{J}
08BBD3F8	&LZ77	Relief at start of chapter	{J}
08A588C0	&LZ77	To Be Continued	{J}
08780574	&LZ77	Something's effect	{J}
087819D0	&LZ77	TSA of some effect	{J}
08C258A4	&LZ77	unreleased works Empty Battle Sheet	{U}
08CBFAD8	&LZ77	unreleased works Empty Battle Sheet	{U}
08CBFEA8	&LZ77	unreleased works Empty Battle Sheet	{U}
08D2B5F0	&LZ77	unreleased works Empty Battle Sheet	{U}
08D2D080	&LZ77	unreleased works Empty Battle Sheet	{U}
08D7E080	&LZ77	unreleased works Empty Battle Sheet	{U}
08D7E450	&LZ77	unreleased works Empty Battle Sheet	{U}
08D914A0	&LZ77	unreleased works Empty Battle Sheet	{U}
08DCB4B0	&LZ77	unreleased works Empty Battle Sheet	{U}
08DD2CA8	&LZ77	unreleased works Skeleton Spear	{U}
08DD8604	&LZ77	unreleased works Standby motion of skeleton bow	{U}
08DFB6D8	&LZ77	unreleased works Empty Battle Sheet	{U}
08A97E88	&LZ77	triangle	{U}
08A84B00	&LZ77	unreleased works Empty data of chapter title	{J}
08A10FE0	&LZ77	unreleased works Empty data of chapter title	{U}
085776F0	:08577EEF	Font image for debugging	{J}
08587A40	:0858823F	Font image for debugging	{U}
080DC43C	:080DC52B	Portrait TSA(FE8Only)	{J}
080D77FC	:080D78EB	Portrait TSA(FE8Only)	{U}
08FFF000	:08FFF7FF	Unknown C00009FF	{U}
0801964C	LoadChapterMapPaletteOnly	{J}
08030B90	LoadTitleAnimations2Only	{J}
08019974	LoadChapterMapPaletteOnly	{U}
08030C40	LoadTitleAnimations2Only	{U}
0804E98C	Draws little highlight thing for menus	r0=BG Index to draw on	 r1=Unknown	r2=(Tile)x	r3=(Tile)y	[sp:0]=Width	{U}
0804EA08	Removes little highlight thing for menus	r0=BG Index to draw on	r1=Unknown	r2=(Tile)x	r3=(Tile)y	[sp:0]=Width	{U}
0804F718	Draws little highlight thing for menus	r0=BG Index to draw on	 r1=Unknown	r2=(Tile)x	r3=(Tile)y	[sp:0]=Width	{J}
0804F794	Removes little highlight thing for menus	r0=BG Index to draw on	r1=Unknown	r2=(Tile)x	r3=(Tile)y	[sp:0]=Width	{J}
0815BDDC	:0815D48B	mask_point HUFFMAN TREE	{U}
0814B194	:0814D08B	mask_point HUFFMAN TREE	{J}
080816DC	StartLevelUpGrowthStatusAnimation	{J}
0807F39C	StartLevelUpGrowthStatusAnimation	{U}
08076654	EndLevelUpGrowthStatusAnimation	{J}
080741CC	EndLevelUpGrowthStatusAnimation	{U}
085B9EE8	&EVENT	EventGameOver	{J}
08592104	&EVENT	EventGameOver	{U}

080DED4A	&OAMREGS	OAMREGS	{J}
080DED6A	&OAMREGS	OAMREGS	{J}
080DEDC0	&OAMREGS	OAMREGS	{J}
080DEDDC	&OAMREGS	OAMREGS	{J}
080DEDE4	&OAMREGS	OAMREGS	{J}
080DEFC2	&OAMREGS	OAMREGS	{J}
080DEFE8	&OAMREGS	OAMREGS	{J}
080DF090	&OAMREGS	OAMREGS	{J}
080DF0E6	&OAMREGS	OAMREGS	{J}
080DF10E	&OAMREGS	OAMREGS	{J}
080DF11E	&OAMREGS	OAMREGS	{J}
080DF13E	&OAMREGS	OAMREGS	{J}
080DF166	&OAMREGS	OAMREGS	{J}
080DF17A	&OAMREGS	OAMREGS	{J}
080DF18E	&OAMREGS	OAMREGS	{J}
080DF1A2	&OAMREGS	OAMREGS	{J}
080DF228	&OAMREGS	OAMREGS	{J}
080DF248	&OAMREGS	OAMREGS	{J}
080DF256	&OAMREGS	OAMREGS	{J}
080DF26A	&OAMREGS	OAMREGS	{J}
080DF29C	&OAMREGS	OAMREGS	{J}
085B8CE4	&OAMREGS	sprite data for a 16x16 sprite OAMREGS	{J}
085B8CEC	&OAMREGS	OAMREGS	{J}
085B8CFC	&OAMREGS	OAMREGS	{J}
085B8D04	&OAMREGS	OAMREGS	{J}
085B8D14	&OAMREGS	OAMREGS	{J}
085B8D34	&OAMREGS	OAMREGS	{J}
085B8D3C	&OAMREGS	OAMREGS	{J}
085B8D4C	&OAMREGS	OAMREGS	{J}
085B8D54	&OAMREGS	OAMREGS	{J}
085B91B0	&OAMREGS	OAMREGS	{J}
085B9328	&OAMREGS	OAMREGS	{J}
085C28D8	&OAMREGS	OAMREGS	{J}
085C2980	&OAMREGS	OAMREGS	{J}
085C3348	&OAMREGS	OAMREGS	{J}
085C3E56	&OAMREGS	OAMREGS	{J}
085C3E5E	&OAMREGS	OAMREGS	{J}
085C3E66	&OAMREGS	OAMREGS	{J}
085C3E6E	&OAMREGS	OAMREGS	{J}
085C3E76	&OAMREGS	OAMREGS	{J}
085C3E7E	&OAMREGS	OAMREGS	{J}
085C5E54	&OAMREGS	OAMREGS	{J}
085C6CC4	&OAMREGS	OAMREGS	{J}
085D3EA0	&OAMREGS	OAMREGS	{J}
085D3F74	&OAMREGS	OAMREGS	{J}
085D3FA0	&OAMREGS	OAMREGS	{J}
085D3FB4	&OAMREGS	OAMREGS	{J}
085D3FBC	&OAMREGS	OAMREGS	{J}
085D3FF4	&OAMREGS	OAMREGS	{J}
085D4A10	&OAMREGS	OAMREGS	{J}
085D4A7C	&OAMREGS	OAMREGS	{J}
085D4A8A	&OAMREGS	OAMREGS	{J}
085D4AB2	&OAMREGS	OAMREGS	{J}
085D4AF4	&OAMREGS	OAMREGS	{J}
085D4B02	&OAMREGS	OAMREGS	{J}
085D4BD4	&OAMREGS	OAMREGS	{J}
085D4BDC	&OAMREGS	OAMREGS	{J}
085D4BE4	&OAMREGS	OAMREGS	{J}
085E0670	&OAMREGS	OAMREGS	{J}
08A72974	&OAMREGS	OAMREGS	{J}
08A729B6	&OAMREGS	OAMREGS	{J}
08A72BC8	&OAMREGS	OAMREGS	{J}
08A73B5C	&OAMREGS	OAMREGS	{J}
08A73B64	&OAMREGS	OAMREGS	{J}
08A73B72	&OAMREGS	OAMREGS	{J}
08A73B80	&OAMREGS	OAMREGS	{J}
08A73B8E	&OAMREGS	OAMREGS	{J}
08A73B96	&OAMREGS	OAMREGS	{J}
08A73B9E	&OAMREGS	OAMREGS	{J}
08A73BD0	&OAMREGS	OAMREGS	{J}
08A73BE4	&OAMREGS	OAMREGS	{J}
08A73D34	&OAMREGS	OAMREGS	{J}
08A73E40	&OAMREGS	OAMREGS	{J}
08A73E66	&OAMREGS	OAMREGS	{J}
08A93894	&OAMREGS	OAMREGS	{J}
08A9389C	&OAMREGS	OAMREGS	{J}
08A9388C	&OAMREGS	OAMREGS	{J}
08A938B0	&OAMREGS	OAMREGS	{J}
08A938B8	&OAMREGS	OAMREGS	{J}
08A93956	&OAMREGS	OAMREGS	{J}
08A9466C	&OAMREGS	OAMREGS	{J}
08A946A8	&OAMREGS	OAMREGS	{J}
08A94B78	&OAMREGS	OAMREGS	{J}
08A94B92	&OAMREGS	OAMREGS	{J}
08A94BA6	&OAMREGS	OAMREGS	{J}
08A952F4	&OAMREGS	OAMREGS	{J}
08A9533C	&OAMREGS	OAMREGS	{J}
08A95470	&OAMREGS	OAMREGS	{J}
08A95B14	&OAMREGS	OAMREGS	{J}
08A95B3A	&OAMREGS	OAMREGS	{J}
08A95C50	&OAMREGS	OAMREGS	{J}
08A95C64	&OAMREGS	OAMREGS	{J}
08A95C72	&OAMREGS	OAMREGS	{J}
08A95C86	&OAMREGS	OAMREGS	{J}
08A9D448	&OAMREGS	OAMREGS	{J}
08A9D462	&OAMREGS	OAMREGS	{J}
08A9D49C	&OAMREGS	OAMREGS	{J}
08A9D4A4	&OAMREGS	OAMREGS	{J}
08A9D4AC	&OAMREGS	OAMREGS	{J}
08A9D4B4	&OAMREGS	OAMREGS	{J}
08A9D4BC	&OAMREGS	OAMREGS	{J}
08A9D4CA	&OAMREGS	OAMREGS	{J}
08A9D51A	&OAMREGS	OAMREGS	{J}
08A9D522	&OAMREGS	OAMREGS	{J}
08A9D572	&OAMREGS	OAMREGS	{J}
08A9D6A8	&OAMREGS	OAMREGS	{J}
08A9D778	&OAMREGS	OAMREGS	{J}
08A9D7AC	&OAMREGS	OAMREGS	{J}
08A9D856	&OAMREGS	OAMREGS	{J}
08A9D892	&OAMREGS	OAMREGS	{J}
08A9DA00	&OAMREGS	OAMREGS	{J}
08A9DA08	&OAMREGS	OAMREGS	{J}
08A9DA16	&OAMREGS	OAMREGS	{J}
08A9DA2A	&OAMREGS	OAMREGS	{J}
08A9DA38	&OAMREGS	OAMREGS	{J}
08A9DAA4	&OAMREGS	OAMREGS	{J}
08A9DAAC	&OAMREGS	OAMREGS	{J}
08A9DAE4	&OAMREGS	OAMREGS	{J}
08A9DAF2	&OAMREGS	OAMREGS	{J}
08A9E40E	&OAMREGS	OAMREGS	{J}
08A9E416	&OAMREGS	OAMREGS	{J}
08A9E41E	&OAMREGS	OAMREGS	{J}
08AAFCAC	&OAMREGS	OAMREGS	{J}
08AAFEC4	&OAMREGS	OAMREGS	{J}
08AAFEDC	&OAMREGS	OAMREGS	{J}
08AAFEF4	&OAMREGS	OAMREGS	{J}
08AAFF54	&OAMREGS	OAMREGS	{J}
08AC0DA8	&OAMREGS	OAMREGS	{J}
08AC0DC8	&OAMREGS	OAMREGS	{J}
08AC0DD6	&OAMREGS	OAMREGS	{J}
08AC0DE4	&OAMREGS	OAMREGS	{J}
08AC0DF2	&OAMREGS	OAMREGS	{J}
08AC0E00	&OAMREGS	OAMREGS	{J}
08AC0E0E	&OAMREGS	OAMREGS	{J}
08AC0E1C	&OAMREGS	OAMREGS	{J}
08AC0E52	&OAMREGS	OAMREGS	{J}
08AC0E82	&OAMREGS	OAMREGS	{J}
08AC2300	&OAMREGS	OAMREGS	{J}
08AC26D0	&OAMREGS	OAMREGS	{J}
08AC27E8	&OAMREGS	OAMREGS	{J}
08B3ECE4	&OAMREGS	OAMREGS	{J}
08B3ED46	&OAMREGS	OAMREGS	{J}
08B3ED60	&OAMREGS	OAMREGS	{J}
08B3ED80	&OAMREGS	OAMREGS	{J}
08B3ED8E	&OAMREGS	OAMREGS	{J}
08B3EDBA	&OAMREGS	OAMREGS	{J}
08B3F1CE	&OAMREGS	OAMREGS	{J}
08B3F1DC	&OAMREGS	OAMREGS	{J}
08B3F1F0	&OAMREGS	OAMREGS	{J}
08B3F204	&OAMREGS	OAMREGS	{J}
08B3F290	&OAMREGS	OAMREGS	{J}
08B3F690	&OAMREGS	OAMREGS	{J}
08B3F6B0	&OAMREGS	OAMREGS	{J}
08B3F6D0	&OAMREGS	OAMREGS	{J}
08B3F6DE	&OAMREGS	OAMREGS	{J}
08B3F70A	&OAMREGS	OAMREGS	{J}
08B3F71E	&OAMREGS	OAMREGS	{J}
08B3F750	&OAMREGS	OAMREGS	{J}
08B3F788	&OAMREGS	OAMREGS	{J}
08BABAF8	&OAMREGS	OAMREGS	{J}
08BABB12	&OAMREGS	OAMREGS	{J}
08BABB20	&OAMREGS	OAMREGS	{J}

080D9D6E	&OAMREGS	OAMREGS	{U}
080D9D8E	&OAMREGS	OAMREGS	{U}
080D9DE4	&OAMREGS	OAMREGS	{U}
080D9E06	&OAMREGS	OAMREGS	{U}
080D9E0E	&OAMREGS	OAMREGS	{U}
080D9FD6	&OAMREGS	OAMREGS	{U}
080D9FFC	&OAMREGS	OAMREGS	{U}
080DA0A4	&OAMREGS	OAMREGS	{U}
080DA0FA	&OAMREGS	OAMREGS	{U}
080DA122	&OAMREGS	OAMREGS	{U}
080DA132	&OAMREGS	OAMREGS	{U}
080DA142	&OAMREGS	OAMREGS	{U}
080DA152	&OAMREGS	OAMREGS	{U}
080DA17A	&OAMREGS	OAMREGS	{U}
080DA18E	&OAMREGS	OAMREGS	{U}
080DA1A2	&OAMREGS	OAMREGS	{U}
080DA1B6	&OAMREGS	OAMREGS	{U}
080DA23C	&OAMREGS	OAMREGS	{U}
080DA25C	&OAMREGS	OAMREGS	{U}
080DA26A	&OAMREGS	OAMREGS	{U}
080DA27E	&OAMREGS	OAMREGS	{U}
080DA2B0	&OAMREGS	OAMREGS	{U}
08590F4C	&OAMREGS	sprite data for a 16x16 sprite OAMREGS	{U}
08590F54	&OAMREGS	OAMREGS	{U}
08590F64	&OAMREGS	OAMREGS	{U}
08590F6C	&OAMREGS	OAMREGS	{U}
08590F7C	&OAMREGS	OAMREGS	{U}
08590F9C	&OAMREGS	OAMREGS	{U}
08590FA4	&OAMREGS	OAMREGS	{U}
08590FB4	&OAMREGS	OAMREGS	{U}
08590FBC	&OAMREGS	OAMREGS	{U}
08591418	&OAMREGS	OAMREGS	{U}
08591590	&OAMREGS	OAMREGS	{U}
0859A458	&OAMREGS	OAMREGS	{U}
0859A500	&OAMREGS	OAMREGS	{U}
0859AEC8	&OAMREGS	OAMREGS	{U}
0859B976	&OAMREGS	OAMREGS	{U}
0859B97E	&OAMREGS	OAMREGS	{U}
0859B986	&OAMREGS	OAMREGS	{U}
0859B98E	&OAMREGS	OAMREGS	{U}
0859B996	&OAMREGS	OAMREGS	{U}
0859B99E	&OAMREGS	OAMREGS	{U}
0859D974	&OAMREGS	OAMREGS	{U}
0859E79C	&OAMREGS	OAMREGS	{U}
085A9F98	&OAMREGS	OAMREGS	{U}
085AA96C	&OAMREGS	OAMREGS	{U}
085AA9D8	&OAMREGS	OAMREGS	{U}
085AA9E6	&OAMREGS	OAMREGS	{U}
085AAA0E	&OAMREGS	OAMREGS	{U}
085AAA50	&OAMREGS	OAMREGS	{U}
085AAA5E	&OAMREGS	OAMREGS	{U}
085AAB30	&OAMREGS	OAMREGS	{U}
085AAB38	&OAMREGS	OAMREGS	{U}
085AAB40	&OAMREGS	OAMREGS	{U}
085B6490	&OAMREGS	OAMREGS	{U}
08A008BC	&OAMREGS	OAMREGS	{U}
08A008FE	&OAMREGS	OAMREGS	{U}
08A00B10	&OAMREGS	OAMREGS	{U}
08A01AA4	&OAMREGS	OAMREGS	{U}
08A01AAC	&OAMREGS	OAMREGS	{U}
08A01ABA	&OAMREGS	OAMREGS	{U}
08A01AC8	&OAMREGS	OAMREGS	{U}
08A01AD6	&OAMREGS	OAMREGS	{U}
08A01ADE	&OAMREGS	OAMREGS	{U}
08A01AE6	&OAMREGS	OAMREGS	{U}
08A01B18	&OAMREGS	OAMREGS	{U}
08A01B2C	&OAMREGS	OAMREGS	{U}
08A01C7C	&OAMREGS	OAMREGS	{U}
08A01D88	&OAMREGS	OAMREGS	{U}
08A17B40	&OAMREGS	OAMREGS	{U}
08A17B48	&OAMREGS	OAMREGS	{U}
08A17B50	&OAMREGS	OAMREGS	{U}
08A17B64	&OAMREGS	OAMREGS	{U}
08A17B6C	&OAMREGS	OAMREGS	{U}
08A17C0A	&OAMREGS	OAMREGS	{U}
08A18928	&OAMREGS	OAMREGS	{U}
08A18964	&OAMREGS	OAMREGS	{U}
08A18E34	&OAMREGS	OAMREGS	{U}
08A18E4E	&OAMREGS	OAMREGS	{U}
08A18E62	&OAMREGS	OAMREGS	{U}
08A195B0	&OAMREGS	OAMREGS	{U}
08A195F8	&OAMREGS	OAMREGS	{U}
08A19700	&OAMREGS	OAMREGS	{U}
08A19726	&OAMREGS	OAMREGS	{U}
08A1983C	&OAMREGS	OAMREGS	{U}
08A19850	&OAMREGS	OAMREGS	{U}
08A1985E	&OAMREGS	OAMREGS	{U}
08A19872	&OAMREGS	OAMREGS	{U}
08A2051C	&OAMREGS	OAMREGS	{U}
08A20536	&OAMREGS	OAMREGS	{U}
08A20570	&OAMREGS	OAMREGS	{U}
08A20578	&OAMREGS	OAMREGS	{U}
08A20580	&OAMREGS	OAMREGS	{U}
08A20588	&OAMREGS	OAMREGS	{U}
08A20590	&OAMREGS	OAMREGS	{U}
08A2059E	&OAMREGS	OAMREGS	{U}
08A205EE	&OAMREGS	OAMREGS	{U}
08A205F6	&OAMREGS	OAMREGS	{U}
08A208EE	&OAMREGS	OAMREGS	{U}
08A2092A	&OAMREGS	OAMREGS	{U}
08A20A98	&OAMREGS	OAMREGS	{U}
08A20AA0	&OAMREGS	OAMREGS	{U}
08A20AAE	&OAMREGS	OAMREGS	{U}
08A20AC2	&OAMREGS	OAMREGS	{U}
08A20AD0	&OAMREGS	OAMREGS	{U}
08A20B3C	&OAMREGS	OAMREGS	{U}
08A20B44	&OAMREGS	OAMREGS	{U}
08A20B7C	&OAMREGS	OAMREGS	{U}
08A2148A	&OAMREGS	OAMREGS	{U}
08A2149E	&OAMREGS	OAMREGS	{U}
08A214A6	&OAMREGS	OAMREGS	{U}
08A214AE	&OAMREGS	OAMREGS	{U}
08A214B6	&OAMREGS	OAMREGS	{U}
08A2F160	&OAMREGS	OAMREGS	{U}
08A2F178	&OAMREGS	OAMREGS	{U}
08A2F190	&OAMREGS	OAMREGS	{U}
08A2F1F0	&OAMREGS	OAMREGS	{U}
08A3D540	&OAMREGS	OAMREGS	{U}
08A3D540	&OAMREGS	OAMREGS	{U}
08A3D560	&OAMREGS	OAMREGS	{U}
08A3D56E	&OAMREGS	OAMREGS	{U}
08A3D57C	&OAMREGS	OAMREGS	{U}
08A3D58A	&OAMREGS	OAMREGS	{U}
08A3D598	&OAMREGS	OAMREGS	{U}
08A3D5A6	&OAMREGS	OAMREGS	{U}
08A3D5B4	&OAMREGS	OAMREGS	{U}
08A3D5EA	&OAMREGS	OAMREGS	{U}
08A3E940	&OAMREGS	OAMREGS	{U}
08A3ED10	&OAMREGS	OAMREGS	{U}
08AA6BFA	&OAMREGS	OAMREGS	{U}
08AA6C0E	&OAMREGS	OAMREGS	{U}
08AA709C	&OAMREGS	OAMREGS	{U}
08AA70BC	&OAMREGS	OAMREGS	{U}
08AA70DC	&OAMREGS	OAMREGS	{U}
08AA70EA	&OAMREGS	OAMREGS	{U}
08AA7116	&OAMREGS	OAMREGS	{U}
08AA712A	&OAMREGS	OAMREGS	{U}
08AA715C	&OAMREGS	OAMREGS	{U}
08AA7194	&OAMREGS	OAMREGS	{U}
08B12AA8	&OAMREGS	OAMREGS	{U}
08B12AC2	&OAMREGS	OAMREGS	{U}
08B12AD0	&OAMREGS	OAMREGS	{U}
080C1E54	Determine whether demons can be put on world map	{J}
080C6530	Process to decide where to put demons in world map	{J}
080bd048	Determine whether demons can be put on world map	{U}
080C1774	Process to decide where to put demons in world map	{U}
08A601F8	&EVENT	Branching with tutorial	{J}
089EE0C0	&EVENT	Branching with tutorial	{U}
085B8DA4	:085B8DBD	Something about face image related OAM 1	{J}
085B8DBE	:085B8DD7	Something about face image related OAM 2	{J}
085B8DD8	:085B8DFD	Something about face image related OAM 3	{J}
085B8DFE	:085B8E23	Something about face image related OAM 4	{J}
085B8E24	:085B8E55	Something about face image related OAM 5	{J}
085B8E56	:085B8E87	Something about face image related OAM 6	{J}
085B8E88	:085B8EB9	Something about face image related OAM 7	{J}
085B8EBA	:085B8EEB	Something about face image related OAM 8	{J}
0859100C	:08591025	Something about face image related OAM 1	{U}
08591026	:0859103F	Something about face image related OAM 2	{U}
08591040	:08591065	Something about face image related OAM 3	{U}
08591066	:0859108B	Something about face image related OAM 4	{U}
0859108C	:085910BD	Something about face image related OAM 5	{U}
085910BE	:085910DF	Something about face image related OAM 6	{U}
085910F0	:08591121	Something about face image related OAM 7	{U}
08591122	:08591153	Something about face image related OAM 8	{U}
080056C8	Decide which face image OAM to use	{J}
080057C0	Decide which face image OAM to use	{U}
@BGMSTRUCT@00	byte	Music related flag 1
@BGMSTRUCT@02	short	Stand-by BGM
@BGMSTRUCT@04	short	Playing BGM
@BGMSTRUCT@06	byte	Music related flag 2
@BGMSTRUCT@07	byte	Music related flag 3
02024E5C	@BGMSTRUCT	BGM	{J}
02024E5C	@BGMSTRUCT	BGM	{U}
08A60420	&EVENT	EventChange background	{J}
089EE2E8	&EVENT	EventChange background	{U}
0807F964	Animation of purple circular appearance of Devil's appearance	{U}
08081CA4	Animation of purple circular appearance of Devil's appearance	{J}
0807FAA0	Blue lightning animation	{U}
08081DE0	Blue lightning animation	{J}
0807FE0C	Floor shining Animation	{U}
0808214C	Floor shining Animation	{J}
080CE95C	Processing of dictionary text	{U}
080CE95C	Processing of dictionary text	{J}
08A727B4	InitTextBatch1	{J}
08A73BF4	InitTextBatch2	{J}
08A006FC	InitTextBatch1	{U}
08A01B3C	InitTextBatch2	{U}
08B1FA40	:08B1FE3F	UNK FREE_R LIST	{U}
08B1FE40	UNK FREE_R LIST TERM	{U}
08BB8A94	:08BB8E93	UNK FREE_R LIST	{J}
08BB8E94	UNK FREE_R LIST TERM	{J}
080BCA74	Load image of capture rating	{J}
03000084	Numbers such as priceIn sentence @0080@0005 Numbers you can get in	{U}
03000048	next position to display with TextBufferOffset	{U}
03000040	next position to display with TextBufferOffset	{J}
0859133C	Pointer to RAM text buffer	{U}
085B90D4	Pointer to RAM text buffer	{J}
08056158	Magical anime with frames and TSA images	{J}
080551B0	Magical anime with frames and TSA images	{U}
085C5AD0	:085C5B57	Setting data of dead tile animation 1	{J}
085C5B90	:085C5BD7	Setting data for submarine tile animation 2	{J}
085C5C20	:085C5C67	Setting data of dead tile animation 3	{J}
085C5C68	:085C5CDF	Setting data of dead tile animation 3	{J}
085C5D60	:085C5D97	Setting data 1 for deformed palette animation	{J}
0859D5F0	:0859D677	Setting data of dead tile animation 1	{U}
0859D6B0	:0859D6F7	Setting data for submarine tile animation 2	{U}
0859D740	:0859D787	Setting data of dead tile animation 3	{U}
0859D788	:0859D7FF	Setting data for submerging tile animation 4	{U}
0859D880	:0859D8B7	Settled Palette Animation Setting Data 2	{U}
08070BEC	Routine to sound skill activation sound 0x03D1	{J}
0806E610	Routine to sound skill activation sound 0x03D1	{U}
08070C10	Designation of skill activation sound 0x03D1	{J}
0806E634	Designation of skill activation sound 0x03D1	{U}
0802a490	RollRNIfBattleStarted	RET=bool	r0=Probability P	r1=0	{J}
0802A4C0	Roll2RNIfBattleStarted	{J}
0203A604	current round pointer	{J}
0203A608	current round pointer	{U}
08080138	Animation of invasion of Holy Stone	{U}
08082478	Animation of invasion of Holy Stone	{J}
0880D270	:0880D373	Pointer to Japanese name data of terrain (unused data)	{U}
088ADFB0	:088AEBAB	Pointer to alphabetical representation of characters and class names (for debugging?)	{U}
0890253C	:08903137	Pointer to alphabetical representation of characters and class names (for debugging?)	{J}
085A0838	&HEADERTSA	Face image related tiles	{U}
085A08F0	&HEADERTSA	Something tiled FillTileRect	01	{U}
08A0AE84	&HEADERTSA	Something tiled FillTileRect	02	{U}
085A0D4C	&HEADERTSA	Something tiled FillTileRect	03	{U}
08A173EC	&HEADERTSA	Something tiled FillTileRect	04	{U}
08A03354	&HEADERTSA	Something tiled FillTileRect	05	{U}
085A0AEC	&HEADERTSA	Something tiled FillTileRect	06	{U}
08A25ECC	&HEADERTSA	Something tiled FillTileRect	07	{U}
085ADF40	&HEADERTSA	Something tiled FillTileRect	08	{U}
085AE190	&HEADERTSA	Something tiled FillTileRect	09	{U}
085ADE88	&HEADERTSA	Something tiled FillTileRect	10	{U}
085AE464	&HEADERTSA	Something tiled FillTileRect	11	{U}
089AD498	&HEADERTSA	Something tiled FillTileRect	12	{U}
08A17604	&HEADERTSA	Something tiled FillTileRect	13	{U}
08A176A4	&HEADERTSA	Something tiled FillTileRect	14	{U}
08A176B4	&HEADERTSA	Something tiled FillTileRect	15	{U}
08A1769C	&HEADERTSA	Something tiled FillTileRect	16	{U}
08A176BC	&HEADERTSA	Something tiled FillTileRect	17	{U}
08A1C8B4	&HEADERTSA	Something tiled FillTileRect	18	{U}
08A25ECC	&HEADERTSA	Something tiled FillTileRect	19	{U}
08A2C92C	&HEADERTSA	Something tiled FillTileRect	24	{U}
08A2C7A4	&HEADERTSA	Something tiled FillTileRect	25	{U}
08A30978	&HEADERTSA	Something tiled FillTileRect	26	{U}
08A3FFEC	&HEADERTSA	Something tiled FillTileRect	27	{U}
08A40068	&HEADERTSA	Something tiled FillTileRect	28	{U}
085A647C	&HEADERTSA	Something tiled FillTileRect	29	{U}
08A40B14	&HEADERTSA	Something tiled FillTileRect	30	{U}
08A25ECC	&HEADERTSA	Something tiled FillTileRect	31	{U}
08A98EAC	&HEADERTSA	Something tiled FillTileRect	32	{U}
08A98F30	&HEADERTSA	Something tiled FillTileRect	33	{U}
08A98CFC	&HEADERTSA	Something tiled FillTileRect	34	{U}
08A98D58	&HEADERTSA	Something tiled FillTileRect	35	{U}
08A98D88	&HEADERTSA	Something tiled FillTileRect	36	{U}
08A98DA0	&HEADERTSA	Something tiled FillTileRect	37	{U}
08A98DB8	&HEADERTSA	Something tiled FillTileRect	38	{U}
08AA18AC	&HEADERTSA	Something tiled FillTileRect	39	{U}
085C8D58	&HEADERTSA	Face image related tiles	{J}
085C8E10	&HEADERTSA	Something tiled FillTileRect	01	{J}
08A7E144	&HEADERTSA	Something tiled FillTileRect	02	{J}
085C926C	&HEADERTSA	Something tiled FillTileRect	03	{J}
08A93138	&HEADERTSA	Something tiled FillTileRect	04	{J}
08A7540C	&HEADERTSA	Something tiled FillTileRect	05	{J}
085C900C	&HEADERTSA	Something tiled FillTileRect	06	{J}
08AA2E34	&HEADERTSA	Something tiled FillTileRect	07	{J}
085D81E0	&HEADERTSA	Something tiled FillTileRect	08	{J}
085D8430	&HEADERTSA	Something tiled FillTileRect	09	{J}
085D8128	&HEADERTSA	Something tiled FillTileRect	10	{J}
085D8704	&HEADERTSA	Something tiled FillTileRect	11	{J}
08A1DB20	&HEADERTSA	Something tiled FillTileRect	12	{J}
08A93350	&HEADERTSA	Something tiled FillTileRect	13	{J}
08A933F0	&HEADERTSA	Something tiled FillTileRect	14	{J}
08A93400	&HEADERTSA	Something tiled FillTileRect	15	{J}
08A933E8	&HEADERTSA	Something tiled FillTileRect	16	{J}
08A93408	&HEADERTSA	Something tiled FillTileRect	17	{J}
08A9934C	&HEADERTSA	Something tiled FillTileRect	18	{J}
08AA2E34	&HEADERTSA	Something tiled FillTileRect	19	{J}
08AAAABC	&HEADERTSA	Something tiled FillTileRect	24	{J}
08AAA934	&HEADERTSA	Something tiled FillTileRect	25	{J}
08AB17A4	&HEADERTSA	Something tiled FillTileRect	26	{J}
08AC39B0	&HEADERTSA	Something tiled FillTileRect	27	{J}
08AC3A2C	&HEADERTSA	Something tiled FillTileRect	28	{J}
085CFC90	&HEADERTSA	Something tiled FillTileRect	29	{J}
08AC6CD8	&HEADERTSA	Something tiled FillTileRect	30	{J}
08AA2E34	&HEADERTSA	Something tiled FillTileRect	31	{J}
08B1E5A0	&HEADERTSA	Something tiled FillTileRect	34	{J}
08B1E648	&HEADERTSA	Something tiled FillTileRect	38	{J}
08B2717C	&HEADERTSA	Something tiled FillTileRect	39	{J}
085A0EA0	&ROMTCS	Any ROMTCS data	01	{U}
089A8EF8	&ROMTCS	Any ROMTCS data	02	{U}
08A97AEC	&ROMTCS	Any ROMTCS data	03	{U}
08A9EC24	&ROMTCS	Any ROMTCS data	04	{U}
085C93C0	&ROMTCS	Any ROMTCS data	01	{J}
08A19580	&ROMTCS	Any ROMTCS data	02	{J}
08B1CD80	&ROMTCS	Any ROMTCS data	03	{J}
08B2449C	&ROMTCS	Any ROMTCS data	04	{J}
08592230	&NewPopupSimple	Data for pop-up	01	{U}
08592288	&NewPopupSimple	Data for pop-up	02	{U}
08592300	&NewPopupSimple	Data for pop-up	03	{U}
08592348	&NewPopupSimple	Data for pop-up	04	{U}
08592380	&NewPopupSimple	Data for pop-up	05	{U}
085923D8	&NewPopupSimple	Data for pop-up	06	{U}
08592420	&NewPopupSimple	Data for pop-up	07	{U}
08592468	&NewPopupSimple	Data for pop-up	08	{U}
08592490	&NewPopupSimple	Data for pop-up	09	{U}
085A80A4	&NewPopupSimple	Data for pop-up	10	{U}
085AA1FC	&NewPopupSimple	Data for pop-up	11	{U}
085AA21C	&NewPopupSimple	Data for pop-up	12	{U}
085BA014	&NewPopupSimple	Data for pop-up	01	{J}
085BA054	&NewPopupSimple	Data for pop-up	02	{J}
085BA0C4	&NewPopupSimple	Data for pop-up	03	{J}
085BA0FC	&NewPopupSimple	Data for pop-up	04	{J}
085BA134	&NewPopupSimple	Data for pop-up	05	{J}
085BA174	&NewPopupSimple	Data for pop-up	06	{J}
085BA1B4	&NewPopupSimple	Data for pop-up	07	{J}
085BA1F4	&NewPopupSimple	Data for pop-up	08	{J}
085BA21C	&NewPopupSimple	Data for pop-up	09	{J}
085D1FAC	&NewPopupSimple	Data for pop-up	10	{J}
085D42A0	&NewPopupSimple	Data for pop-up	11	{J}
085D42C0	&NewPopupSimple	Data for pop-up	12	{J}
080d4ef4	Sound effect sound functionm4aSongNumStart	r0=Sound number you want to ring: SOUND	{J}
08074e80	Routine 2 to sound sound effect	r0=Sound effect: SONG	r1=?	r2=?	r3=?	{J}
080729a4	Routine 2 to sound sound effect	r0=Sound effect: SONG	r1=?	r2=?	r3=?	{U}
085AE778	&LZ77	Something small compressed data	01	{U}
085B089C	&LZ77	Something small compressed data	02	{U}
089AD6C8	&LZ77	Something small compressed data	03	{U}
089AD934	&LZ77	Something small compressed data	04	{U}
089B4C1C	&LZ77	Something small compressed data	05	{U}
089B73F4	&LZ77	Something small compressed data	06	{U}
089B80E4	&LZ77	Something small compressed data	07	{U}
089E7E0C	&LZ77	Something small compressed data	08	{U}
08A02204	&LZ77	Something small compressed data	09	{U}
08A079B4	&LZ77	Something small compressed data	10	{U}
08A1B7C8	&LZ77	Something small compressed data	11	{U}
08A1B8B8	&LZ77	Something small compressed data	12	{U}
08A1B990	&LZ77	Something small compressed data	13	{U}
08A1B9EC	&LZ77	Something small compressed data	14	{U}
08A1BAE4	&LZ77	Something small compressed data	15	{U}
08A1BBD0	&LZ77	Something small compressed data	16	{U}
08A1BCC0	&LZ77	Something small compressed data	17	{U}
08A1DB80	&LZ77	Something small compressed data	18	{U}
08A1DC1C	&LZ77	Something small compressed data	19	{U}
08A268F8	&LZ77	Something small compressed data	20	{U}
08A29558	&LZ77	Something small compressed data	21	{U}
08A2E4C4	&LZ77	Something small compressed data	22	{U}
08A35FD0	&LZ77	Something small compressed data	23	{U}
08A36284	&LZ77	Something small compressed data	24	{U}
08A400E4	&LZ77	Something small compressed data	25	{U}
08A40204	&LZ77	Something small compressed data	26	{U}
08A4034C	&LZ77	Something small compressed data	27	{U}
08A40470	&LZ77	Something small compressed data	28	{U}
08A4CD40	&LZ77	Something small compressed data	29	{U}
08A98BF8	&LZ77	Something small compressed data	30	{U}
08A9E5DC	&LZ77	Something small compressed data	31	{U}
08B118C4	&LZ77	Something small compressed data	32	{U}
08B11C0C	&LZ77	Something small compressed data	33	{U}
08B176CC	&LZ77	Something small compressed data	34	{U}
085D8A18	&LZ77	Something small compressed data	01	{J}
085DAA7C	&LZ77	Something small compressed data	02	{J}
08A1DD50	&LZ77	Something small compressed data	03	{J}
08A1DFBC	&LZ77	Something small compressed data	04	{J}
08A252A4	&LZ77	Something small compressed data	05	{J}
08A27A7C	&LZ77	Something small compressed data	06	{J}
08A2876C	&LZ77	Something small compressed data	07	{J}
08A58494	&LZ77	Something small compressed data	08	{J}
08A742BC	&LZ77	Something small compressed data	09	{J}
08A79A6C	&LZ77	Something small compressed data	10	{J}
08A98260	&LZ77	Something small compressed data	11	{J}
08A98350	&LZ77	Something small compressed data	12	{J}
08A98428	&LZ77	Something small compressed data	13	{J}
08A98484	&LZ77	Something small compressed data	14	{J}
08A9857C	&LZ77	Something small compressed data	15	{J}
08A98668	&LZ77	Something small compressed data	16	{J}
08A98758	&LZ77	Something small compressed data	17	{J}
08A9AA9C	&LZ77	Something small compressed data	18	{J}
08A9AB38	&LZ77	Something small compressed data	19	{J}
08AA3860	&LZ77	Something small compressed data	20	{J}
08A4DB70	&LZ77	Something small compressed data	22	{J}
08AB6DFC	&LZ77	Something small compressed data	23	{J}
08AB70B0	&LZ77	Something small compressed data	24	{J}
08A4DB70	&LZ77	Something small compressed data	25	{J}
08B1E49C	&LZ77	Something small compressed data	30	{J}
08B23E54	&LZ77	Something small compressed data	31	{J}
08A4DB70	&LZ77	Something small compressed data	32	{J}
08BB071C	&LZ77	Something small compressed data	34	{J}
@BATTLE_ANIME@04	left	Battle animation ID-1
@BATTLE_ANIME@06	Right	Battle animation ID-1
0203E17E	@BATTLE_ANIME	Battle animation relation 1	{J}
0203E108	@BATTLE_ANIME	Battle animation relationship 2	{J}
0203E182	@BATTLE_ANIME	Battle animation relation 1	{U}
0203E10C	@BATTLE_ANIME	Battle animation relationship 2	{U}

02000064	gpProcEkrBattle
02000068	gpProcEkrGauge
0200006c	gpProcEkrDispUP
02001000	gpMapBuffer
02002fdc	gaBattleForecastTextStructs
02003c02	gStatScreenVOffset
02003c08	gpStatScreenUnit
02003c0c	gpStatScreenMoveUnit
02003c10	gpCurrentHelpTextStruct
02003d2c	gpStatScreenPageBg0Map
0200472c	gpStatScreenPageBg2Map
0200d6e0	gSortedUnitList
0200f17c	gStringBufferAlt
020122d4	gPrepScreenItemList
02012f54	gPrepScreenItemListSize
02017648	gSomeFontStruct
02017660	gSomeTextStruct
0201774c	gSomeSubAnim6CCounter
0201776c	gpSome6C_RightUnit
02017770	gpSome6C_LeftUnit
02017774	gpSome6C
02017778	gpEfxSpellCast
0201777c	gpSomeOther6C
02019790	gSomeTSABuffer
0201fb24	gpEkrTogiColor
02020048	gSomeBattleAISStruct_RightUnit
02020054	gpSomeBattleAIS_RightUnit
02020058	gSomeBattleAISStruct_LeftUnit
02020064	gpSomeBattleAIS_LeftUnit
020200b0	gpEkrClasschg
020200b4	gpEkrLevelup
0202010c	gpSomeUnitStruct2
02020112	gLevelUpLevelBase
02020114	gLevelUpHPBase
02020116	gLevelUpPowBase
02020118	gLevelUpSklBase
0202011a	gLevelUpSpdBase
0202011c	gLevelUpLckBase
0202011e	gLevelUpDefBase
02020120	gLevelUpResBase
02020122	gLevelUpConBase
02020124	gLevelUpHPUp
02020126	gLevelUpPowUp
02020128	gLevelUpSklUp
0202012a	gLevelUpSpdUp
0202012c	gLevelUpLckUp
0202012e	gLevelUpDefUp
02020130	gLevelUpResUp
02020144	gBoolPopupEnded
02020188	gGenericBuffer


02024cd4	gTileRegistryNextIndex
02024cd8	gTileRegistryTotalSize
02024cdc	gTileRegistry
02024e68	gProcStatePool
02026968	gProcAllocLookup
02026a90	gIconIndexToDataLookup
02026e10	gIconDataToIndexLookup
02026e30	gDebugTextData
02028e44	gSmallString
02028e4c	gSmallStringEnd
02028e50	gDebugFontObjTileRoot
02028e54	pDebugFontObjPaletteMask
02028e58	gDefaultFontData
02028f78	gAISArray	{U}
0202a68c	gFaceGfxData	{U}
0202b6b0	gPaletteFadeBuffer	{U}
0202bcb0	@BattleMapState	gGameState	{U}
0202bd3c	gPreviousCursorDisplayPosition	{U}
0202bd40	gCursorAnimationClockReference	{U}
0202bd44	gSomeCameraMovementTableMaybe	{U}
0202be44	gActiveUnitIndex	{U}
0202be48	gActiveUnitPosition	{U}
0202be4c	gUnitArray	{U}
0202e4d4	gMapSize	{U}
0202e4d8	gMapUnit	{U}
0202e4dc	gMapTerrain	{U}
0202e4e0	gMapMovement	{U}
0202e4e4	gMapRange	{U}
0202e4e8	gMapFog	{U}
0202e4ec	gMapHidden	{U}
0202e4f0	gMapMovement2	{U}
0202e4f4	gMapUnitPool	{U}
0202ecac	gMapTerrainPool	{U}
0202f464	gMapFogPool	{U}
0202fc1c	gMapHiddenPool	{U}
020303d4	gMapMovement2Pool	{U}
02030b8c	gTileConfigBuffer	{U}
02032f8c	gMapRawTilesPool	{U}
02033efc	gUnitMoveBuffer	{U}
02033f3c	gUnitSubject	{U}
02033f40	gSMSGfxIndexLookup	{U}
02034010	gSMSGfxBuffer_Frame1	{U}
02036010	gSMSGfxBuffer_Frame2	{U}
02038010	gSMSGfxBuffer_Frame3	{U}
0203a010	gSMS16xGfxIndexCounter	{U}
0203a014	gSMS32xGfxIndexCounter	{U}
0203a018	gSMSHandleArray	{U}
0203a4c8	gSMSHandleIt	{U}
0203a4cc	gSMSSyncFlag	{U}
0203a4d0	gMapSpriteSwitchHoverTimer	{U}
0203a5ec	@BattleRound@[7]	gRoundArray	{U}
0203a608	gpCurrentRound	{U}
0203a610	gpTradeMenuProc	{U}
0203a814	gTrapArrayBack	{U}
0203a8e4	gpSomeUnitPool	{U}
0203a8e8	gpSomeUnitIt	{U}
0203a8ec	gSomeUnitCounter	{U}
0203a910	@Unit	gArenaOpponent	{U}
0203a958	@ActionData	gActionData	{U}
0203aa04	@AiData	gAiData	{U}
0203dde8	gTargetPosition	{U}
0203ddec	gTargetArray	{U}
0203e0ec	gTargetArraySize	{U}
0203e0f4	gBoolBattleDeamonActive	{U}
0203e0f8	gpEkrBattleDeamon	{U}
0203e116	gSomeAllegienceIdShort	{U}
0203e118	gBattleSpellAnimationId1	{U}
0203e11a	gBattleSpellAnimationId2	{U}
0203e120	gSomethingRelatedToAnimAndDistance	{U}
0203e12a	gaAISRelatedShorts	array of "battle anim round types"	 Each entry is actually a pair of shorts: one for the right unit, and one for the left unit (which one is which is TODO: invertigate)	{U}
0203e182	gStoredBattleAnimId11Ptr	{U}
0203e184	gStoredBattleAnimId12Ptr	{U}
0203e1e4	gBoolIsArena	{U}

@MapAnimActorData@00	pointer	pointer to battle unit
@MapAnimActorData@04	pointer	another pointer to battle unit?
@MapAnimActorData@08	pointer	pointer to MU
@MapAnimActorData@0C	byte	maximum Hp
@MapAnimActorData@0D	byte	current (displayed) Hp
@MapAnimActorData@0E	short	_unk_0E
@MapAnimActorData@10	byte	_unk_10
@MapAnimActorData@11	byte	_unk_11
@MapAnimActorData@12	byte	_unk_12
@MapAnimActorData@13	byte	_unk_13
@MapAnimStruct@00	@MapAnimActorData	Data1
@MapAnimStruct@14	@MapAnimActorData	Data2
@MapAnimStruct@28	@MapAnimActorData	Data3
@MapAnimStruct@3C	@MapAnimActorData	Data4
@MapAnimStruct@50	pointer	pointer to next displayed round data
@MapAnimStruct@54	word	pointer to item map animation proc script/code
@MapAnimStruct@58	byte	current round attacking actor id
@MapAnimStruct@59	byte	current round defending actor id
@MapAnimStruct@5A	@BattleRound	CurrentBattleRound	4byte data [24-31] damage /[23] other bitfield /[22] Not attack /[19-21] other bitfield /[00-15] big bitfield
@MapAnimStruct@5E	byte	actor count as defined in the spell assoc table
@MapAnimStruct@5F	byte	bool or timer?
@MapAnimStruct@60	byte	some x position
@MapAnimStruct@61	byte	some y position
@MapAnimStruct@62	byte	_pad62
0203e1f0	@MapAnimStruct	gMapAnimStruct	{U}
0203E24F	gMapAnimaionWait	{U}
0203e765	gSomeUnitId	{U}
0203e768	gSomeTextRelatedStuff	{U}
0203e778	gSomeX	{U}
0203e779	gSomeY	{U}
0203e77a	gSomeTextId	{U}
0203e884	gBWLDataArray	{U}
0203e88e	gBoolSramWorking	{U}
0203e890	gpBWLSaveTarget	{U}
0203e894	gBWLDataStorage	{U}
0203ecf4	gChapterWinDataArray	{U}
0203efb8	gEventUnitDataBuffer	{U}
03000010	gKeyStatusIgnore	{U}
03000014	gGameClock	{U}
030000d0	gDialogueText	{U}
03000434	gEventRangeDisplayUnit	{U}
03000438	gEventCallQueue	{U}
03000568	gEventCounter	{U}
03000808	gpCurrentInitMap	{U}
03000810	gMapMovementPool	{U}
03000fc8	gMapRangePool	{U}
030017c8	gAiScriptEndedFlag	{U}
030017cc	gBoolIsAI2	{U}
030017d0	gpAiScriptCurrent	{U}
030017d4	gpCurrentAiFunctionCall	{U}
030017d8	gpAiBattleWeightFactorTable	{U}
03001870	gMenuRelatedList	{U}
03001900	gMoveUnitExtraDataArray	{U}
03001a30	gUsedBuffersBitfield	{U}
03001a34	gExtraLongEventMoveBuffer	{U}
030030f0	gIRQHandlers	{U}
03003128	&ARM	gpARM_FillMovementMap	{U}
03003134	gpHBlankCallback	{U}
03003748	gpHBlankCallback2	{U}
03003750	gStart_IRAMCodeCopied_CallARM	{U}
03004154	&ARM	gpARM_CopyToPrimaryOAM	{U}
03004960	&ARM	gp5	{U}
03004970	gOAMAllocIt	{U}
03004980	gpFaceProcs	{U}
030049a0	gpSubjectMap	{U}
03004e60	gMovementFillConfig	{U}
03004f10	gpAiPerformer	{U}
03004fac	gCurrentUnitIndex	{U}
03005250	gGlobalTriggerData	{U}
0300534e	gSaved	{U}
030067a0	gpReadSramFast	{U}
030067a4	gpVerifySramFast	{U}
03007ff8	IRQCheckFlags	{U}
03007ffc	gpGlobalIRQHandler	{U}


02028F74	gAISArray	{J}
0202A688	gFaceGfxData	{J}
0202B6AC	gPaletteFadeBuffer	{J}
0202BCAC	@BattleMapState	gGameState	{J}
0202bd38	gPreviousCursorDisplayPosition	{J}
0202bd3c	gCursorAnimationClockReference	{J}
0202BD40	gSomeCameraMovementTableMaybe	{J}
0202BE40	gActiveUnitIndex	{J}
0202BE44	gActiveUnitPosition	{J}
0202BE48	gUnitArray	{J}
0202E4D0	gMapSize	{J}
0202E4D4	gMapUnit	{J}
0202E4D8	gMapTerrain	{J}
0202E4DC	gMapMovement	{J}
0202E4E0	gMapRange	{J}
0202E4E4	gMapFog	{J}
0202E4E8	gMapHidden	{J}
0202E4EC	gMapMovement2	{J}
0202E4F0	gMapUnitPool	{J}
0202ECA8	gMapTerrainPool	{J}
0202f460	gMapFogPool	{J}
0202fc18	gMapHiddenPool	{J}
020303d0	gMapMovement2Pool	{J}
02030B88	gTileConfigBuffer	{J}
02032F88	gMapRawTilesPool	{J}
02033EF8	gUnitMoveBuffer	{J}
02033F38	gUnitSubject	{J}
02033F3C	gSMSGfxIndexLookup	{J}
0203400C	gSMSGfxBuffer_Frame1	{J}
0203600C	gSMSGfxBuffer_Frame2	{J}
0203800C	gSMSGfxBuffer_Frame3	{J}
0203A00C	gSMS16xGfxIndexCounter	{J}
0203A010	gSMS32xGfxIndexCounter	{J}
0203A014	gSMSHandleArray	{J}
0203A4C4	gSMSHandleIt	{J}
0203A4C8	gSMSSyncFlag	{J}
0203A4CC	gMapSpriteSwitchHoverTimer	{J}
0203A5E8	@BattleRound@[7]	gRoundArray	{J}
0203A604	gpCurrentRound	{J}
0203A60C	gpTradeMenuProc	{J}
0203A810	gTrapArrayBack	{J}
0203A8E0	gpSomeUnitPool	{J}
0203A8E4	gpSomeUnitIt	{J}
0203A8E8	gSomeUnitCounter	{J}
0203A90C	@Unit	gArenaOpponent	{J}
0203A954	@ActionData	gActionData	{J}
0203AA00	@AiData	gAiData	{J}
0203DDE4	gTargetPosition	{J}
0203DDE8	gTargetArray	{J}
0203E0E8	gTargetArraySize	{J}
0203E0F0	gBoolBattleDeamonActive	{J}
0203E0F4	gpEkrBattleDeamon	{J}
0203e112	gSomeAllegienceIdShort	{J}
0203E114	gBattleSpellAnimationId1	{J}
0203E116	gBattleSpellAnimationId2	{J}
0203E11C	gSomethingRelatedToAnimAndDistance	{J}
0203E126	gaAISRelatedShorts	array of "battle anim round types"	 Each entry is actually a pair of shorts: one for the right unit, and one for the left unit (which one is which is TODO: invertigate)	{J}
0203E17E	gStoredBattleAnimId11Ptr	{J}
0203e180	gStoredBattleAnimId12Ptr	{J}
0203e1e0	gBoolIsArena	{J}
0203E1EC	@MapAnimStruct	gMapAnimStruct	{J}
0203E24B	gMapAnimaionWait	{J}
0203e761	gSomeUnitId	{J}
0203e764	gSomeTextRelatedStuff	{J}
0203e770	gSomeX	{J}
0203e771	gSomeY	{J}
0203E772	gSomeTextId	{J}
0203e880	gBWLDataArray	{J}
0203e888	gBoolSramWorking	{J}
0203E88C	gpBWLSaveTarget	{J}
0203E890	gBWLDataStorage	{J}
0203ECF0	gChapterWinDataArray	{J}
0203EFB4	gEventUnitDataBuffer	{J}

0300000E	gKeyStatusIgnore	{J}
03000010	gGameClock	{J}
030000C8	gDialogueText	{J}
0300042C	gEventRangeDisplayUnit	{J}
03000430	gEventCallQueue	{J}
03000560	gEventCounter	{J}
03000800	gpCurrentInitMap	{J}
03000804	gMapMovementPool	{J}
03000fc0	gMapRangePool	{J}
030017C0	gAiScriptEndedFlag	{J}
030017C4	gBoolIsAI2	{J}
030017C8	gpAiScriptCurrent	{J}
030017CC	gpCurrentAiFunctionCall	{J}
030017D0	gpAiBattleWeightFactorTable	{J}
03001868	gMenuRelatedList	{J}
030018F8	gMoveUnitExtraDataArray	{J}
03001A28	gUsedBuffersBitfield	{J}
03001A2C	gExtraLongEventMoveBuffer	{J}
03003090	gIRQHandlers	{J}
030030C8	&ARM	gpARM_FillMovementMap	{J}
030030D4	gpHBlankCallback	{J}
030036E8	gpHBlankCallback2	{J}
030036F0	gStart_IRAMCodeCopied_CallARM	{J}
03004910	gOAMAllocIt	{J}
03004920	gpFaceProcs	{J}
03004940	gpSubjectMap	{J}
03004E00	gMovementFillConfig	{J}
03004F00	gpAiPerformer	{J}
03004F9C	gCurrentUnitIndex	{J}
03005240	gGlobalTriggerData	{J}

//03005280	gSomeWMEventRelatedStruct	{U}
//03005282	gWMCamera	{U}
//03005291	gWMCurrentNode	{U}
//03005270	gSomeWMEventRelatedStruct	{J}
//03005272	gWMCamera	{J}
//03005281	gWMCurrentNode	{J}
03005280	@WMEventRelatedStruct	gSomeWMEventRelatedStruct	{U}
03005270	@WMEventRelatedStruct	gSomeWMEventRelatedStruct	{J}
@WMEventRelatedStruct@00	Unk00	byte
@WMEventRelatedStruct@01	Unk00	byte
@WMEventRelatedStruct@02	gWMCamera	short
@WMEventRelatedStruct@04	Unk00	short
@WMEventRelatedStruct@06	Unk00	short
@WMEventRelatedStruct@08	Unk08	word
@WMEventRelatedStruct@0C	Unk0C	word
@WMEventRelatedStruct@10	Unk10	byte
@WMEventRelatedStruct@11	gWMCurrentNode	byte
@WMEventRelatedStruct@12	Unk12	short

0300533E	gSaved	{J}
03006790	gpReadSramFast	{J}
03006794	gpVerifySramFast	{J}
03007FF8	IRQCheckFlags	{J}
03007FFC	gpGlobalIRQHandler	{J}
0800bf3c	GetUnitStructFromEventParameter	{J}
08071FD8	GetSomeBattleAISStruct	{J}
0806FA28	GetSomeBattleAISStruct	{U}
08072034	SpecialBattleBackgoundChange	{J}
0806FA84	SpecialBattleBackgoundChange	{U}
08070B68	Activate Defense Skills (Great Shield)	{J}
0806E58C	Activate Defense Skills (Great Shield)	{U}
08070918	Activate Attack skill (Skill Sure Strike)	{J}
0806E310	Activate Attack skill (Skill Sure Strike)	{U}

0203AABE	:0203AABF	Use it in a transformation patch	{J}
0203AB10	:0203AB20	Reserve with solar patch	It seems to be used in solar patches	{J}
0203AB20	:0203AB23	Sun flag	It seems to be used in solar patches	{J}
0203AB40	:0203AB43	(Old)Skill animation display	Use as work memory for skill animation display	{J}
0203AE40	:0203AE43	Skill animation display	Use as work memory for skill animation display	{J}
0203AB48	:0203AD3C	Expansion transporter	Used as a patch to extend transporter250 pieces (250 * 2 = 500 bytes)	{J}
0203ab18	:0203ACA8	Expansion transporter	breaksave 	Used as a patch to extend transporter250 pieces (200 * 2 = 400 bytes)	{J}


0203AFF0	:0203AFFF	UnitSelectSFX patch	Use as patch to reproduce sound when unit is selected	{J}
0203AD0C	It seems that they are trying on skills continuously	{J}
0203AABE	:0203AABF	FE8-Battle Transform	{U}
0203B200	:0203B38F	Expansion transporter	Used as a patch to extend transporter200 pieces (200 * 2 = 400 bytes)	{U}
0203B1F0	:0203B1FF	UnitSelectSFX patch	Use as patch to reproduce sound when unit is selected	{U}
0203AAC0	:0203ABB7	Battle Buffer expansion (Skill System)(0xF8 bytes)	{U}
0203ED40	:0203EF00	(Where debuffs for skill system begin)Debuff glitch fix(Skill system)	{U}
02026E30	:02027268	Extends PurpleUnitFreeSpace	Fourth-Allegiance	{U}

0203A530	Right side with battle animation	Additional information unknown 1		{J}
0203A531	Right side with battle animation	Additional information unknown 2		{J}
0203A532	Right side with battle animation	Additional information unknown 3		{J}
0203A533	Right side with battle animation	Additional information unknown 4		{J}
0203A534	Right side with battle animation	Additional Information Flag 1 0x01 = Attacked 0x40 = Range with a Magic Sword		{J}
0203A535	Right side with battle animation	Additional information flag 2		{J}
0203A536	Right side with battle animation	Additional information flag 3		{J}
0203A537	Right side with battle animation	Additional information flag 4		{J}
0203A542	Right side with battle animation	Attack	{J}
0203A544	Right side with battle animation	Defence	{J}
0203A546	Right side with battle animation	Speed	{J}
0203A548	Right side with battle animation	Hit	{J}
0203A54a	Right side with battle animation	Avoid	{J}
0203A54c	Right side with battle animation	(AttackerHit - DefinerAvoid)	{J}
0203A54e	Right side with battle animation	Crital	{J}
0203A550	Right side with battle animation	Luck	{J}


0203A534	Right side with battle animation	Additional information unknown 1		{U}
0203A535	Right side with battle animation	Additional information unknown 2		{U}
0203A536	Right side with battle animation	Additional information unknown 3		{U}
0203A537	Right side with battle animation	Additional information unknown 4		{U}
0203A538	Right side with battle animation	Additional Information Flag 1 0x01 = Attacked 0x40 = Range with a Magic Sword		{U}
0203A539	Right side with battle animation	Additional information flag 2		{U}
0203A53A	Right side with battle animation	Additional information flag 3		{U}
0203A53B	Right side with battle animation	Additional information flag 4		{U}
0203A535	Right side with battle animation	Additional information flag 2		{J}
0203A536	Right side with battle animation	Additional information flag 3		{J}
0203A537	Right side with battle animation	Additional information flag 4		{J}
0203A546	Right side with battle animation	Attack	{U}
0203A548	Right side with battle animation	Defence	{U}
0203A54a	Right side with battle animation	Speed	{U}
0203A54c	Right side with battle animation	Hit	{U}
0203A54e	Right side with battle animation	Avoid	{U}
0203A550	Right side with battle animation	(AttackerHit - DefinerAvoid)	{U}
0203A552	Right side with battle animation	Crital	{U}
0203A554	Right side with battle animation	Luck	{U}

(攻撃側の命中－防御側の回避)




//thanks hypergammaspaces
//Class Change (Promotion)
08B1271C	ccramify	PROCS	Promotion(Class Change)	{U}
08B12A08	CCRamifyMenuSelect	PROCS	Promotion(Class Change)	{U}
080CCD48	SetupPromotionScreen	Master function for building promotion menu	 Sets up map buffers for BG0, BG1 and BG2 and calls most of child functions below	{U}
080CD47C	SomethingToDoWithButtonPresses	{U}
080CCBF4	LoadUIForPromoScreen	{U}
080CCCE0	SomeKindOfLoop	{U}
080CD408	LoadSomeTextOnPromoScreen	{U}
080CD570	LoadClassBattleSprite	Loads battle animation data for given class, given items in unit's current inventory it determines what (if any) weapon should be shown equipped		{U}
080CCCA4	SomethingToDoWithUnlockingThirdOption	This seems to be function that checks if game has been beaten in order to unlock third promotion option for trainee classes		{U}
080CCAAC	LoadClassReelFontPalette	Loads palette/LZ77 data for fancy font in top left	 This is called once		{U}
080CCB40	LoadClassNameInClassReelFont	References some data after Opening Class Reel data to load class name in curly font used at top of screen		{U}
080CDDDC	Make6C_PromotionMenuSelect	Pretty straightforward: starts proc CCRamifyMenuSelect as a child proc of ccramify		{U}
08B12A08	CCRamifyMenuSelect	{U}
080CDD78	BuildPromotionMenu	{U}
08B129E4	PromotionMenuDefs	{U}
080CDB1C	SomePromoMenuStartRoutine	Calls some func that calls BG_EnableSyncByMask	 Returns 0 in r0		{U}
080CDB28	PromoMenu_RPressHandler	{U}
080CDC14	PromoMenu_BPressHandler	{U}
08B12954	PromotionMenuCommandDefs	{U}
080CDCC4	PopulateClassNamesFrom6CStorage	This function takes a class ID and pulls string for class name so it can be used to populate menu		{U}
080CDB34	Promotion_Actual	Opens "Change/Cancel" menu	{U}
080CDD00	PromotionSelect_OnHover	{U}
080CDD38	HardCodedCheckForThirdOptionUsability	Checks unit's character ID and current class against hard-coded list of trainee classes to see if unit is able to use third option if it exists		{U}
080CCF60	SomeFuncThatDoesBGImageStuff	This looks like it draws everything to screen		{U}
080CD014	LoadBattleSpritesForBranchScreen	runs once per frame while on branched promotion screen		{U}
080CD294	MoveToLabelInParent6C_Unknown1	This probably jumps around to different parts of ccramify 6C based on state changes, but I wasn't able to see this in action	 There seem to be three valid states it checks for		{U}
080CD1D4	DeleteSome6Cs	Based on a state variable, if state is 2 or greater, delete some 6Cs from proc tree	 I also couldn't get this to trigger in my test case		{U}
080CD2CC	MoveToLabelInParent6C_Unknown2	Another one that jumps to some label in ccramify 6C, also wasn't able to trigger in wild	 States 0 and 1 go to label 5 while states 2 and above break out of 6C loop		{U}
080CD618	Make6C_ccramify_end	Starts a new ccramify_end 6C, which presumably cleans stuff up and returns to te previous game state	 This doesn't seem to trigger on autopromotion		{U}
080CCA64	ChangeClassDescription	{U}
020256D8	CCRamifyMenuSelect's proc storage starts	{U}

08BAB76C	ccramify	PROCS	Promotion(Class Change)	{J}
08BABA58	CCRamifyMenuSelect	PROCS	Promotion(Class Change)	{J}
080D1A50	SetupPromotionScreen	{J}
080D216C	SomethingToDoWithButtonPresses	{J}
080D18F0	LoadUIForPromoScreen	{J}
080D2100	LoadSomeTextOnPromoScreen	{J}
080D2260	LoadClassBattleSprite	Loads battle animation data for given class, given items in unit's current inventory it determines what (if any) weapon should be shown equipped		{J}
080D19A0	SomethingToDoWithUnlockingThirdOption	This seems to be function that checks if game has been beaten in order to unlock third promotion option for trainee classes		{J}
080D2AD8	Make6C_PromotionMenuSelect	Pretty straightforward: starts proc CCRamifyMenuSelect as a child proc of ccramify		{J}
08BABA58	CCRamifyMenuSelect	{J}
080D2A74	BuildPromotionMenu	{J}
080D280C	SomePromoMenuStartRoutine	Calls some func that calls BG_EnableSyncByMask	 Returns 0 in r0		{J}
080D2818	PromoMenu_RPressHandler	{J}
080D2904	PromoMenu_BPressHandler	{J}
080D29C0	PopulateClassNamesFrom6CStorage	This function takes a class ID and pulls string for class name so it can be used to populate menu		{J}
080D2824	Promotion_Actual	Opens "Change/Cancel" menu	{J}
080D29FC	PromotionSelect_OnHover	{J}
080D2A34	HardCodedCheckForThirdOptionUsability	Checks unit's character ID and current class against hard-coded list of trainee classes to see if unit is able to use third option if it exists		{J}
080D1C68	SomeFuncThatDoesBGImageStuff	This looks like it draws everything to screen		{J}
080D1F8C	MoveToLabelInParent6C_Unknown1	This probably jumps around to different parts of ccramify 6C based on state changes, but I wasn't able to see this in action	 There seem to be three valid states it checks for		{J}
080D1ECC	DeleteSome6Cs	Based on a state variable, if state is 2 or greater, delete some 6Cs from proc tree	 I also couldn't get this to trigger in my test case		{J}
080D1FC4	MoveToLabelInParent6C_Unknown2	Another one that jumps to some label in ccramify 6C, also wasn't able to trigger in wild	 States 0 and 1 go to label 5 while states 2 and above break out of 6C loop		{J}
080D1780	ChangeClassDescription	{J}
08070390	Silencer animation	{J}
0806E078	Silencer animation	{U}
0877ABF4	&PALETTE	Silencer PAL1	{J}
087456E8	&PALETTE	Silencer PAL1	{U}
08070440	Palette setting of blinking animation	{J}
0806C810	Palette setting of blinking animation	{U}
080C788C	Display of place name of world map	{J}
080C2AD4	Display of place name of world map	{U}
08005E70	Transfer facial images of general soldiers to memory	{J}
08005F6C	Transfer facial images of general soldiers to memory	{U}
//08220D18	:08221CD8	Unused musical instrument table 1	UNUSEDBIN	{U}
//08223BF8	:08223E38	Unused musical instrument table 2	UNUSEDBIN	{U}
//082109C8	:08211988	Unused musical instrument table 1	UNUSEDBIN	{J}
//082138A8	:08214084	Unused musical instrument table 2	UNUSEDBIN	{J}
08011DB0	ChangeAI	{J}
08011CCC	ChangeAI	{U}
08086240	TalkCheck	{J}
08083f68	TalkCheck	{U}
080161C8	GetItemPowBonus	{J}
080161F8	GetItemSklBonus	{J}
08016228	GetItemSpdBonus	{J}
08016258	GetItemDefBonus	{J}
08016288	GetItemResBonus	{J}
080162B8	GetItemLckBonus	{J}
0203E100	gBattleAttackPhaseBool	initial hit side (0: left, 1: right)	{U}
0203E108	gBattleActorTargetOrder	actor/target order (0: actor on the left, 1: actor on the right)	{U}
0203E190	gBatttleUnitID1	{U}
0203E191	gBatttleUnitID2	{U}
0203E0FC	gBattleAttackPhaseBool	initial hit side (0: left, 1: right)	{J}
0203E104	gBattleActorTargetOrder	actor/target order (0: actor on the left, 1: actor on the right)	{J}
0203E18C	gBatttleUnitID1	{J}
0203E18D	gBatttleUnitID2	{J}
080B369C	OP Class Reel Get Class Name	{U}
0809C128	Preparations Screen Shop	{J}
08099E48	Preparations Screen Shop	{U}
080568F4	ROMAnime frame wait processing	{J}
080558F4	ROMAnime frame wait processing	{U}
0802CB24	SetupBattleStructForStaffUser	{U}
0802CA5C	SetupBattleStructForStaffUser	{J}
0802CBC8	SetupBattleStructForStaffTarget	{U}
0802CB00	SetupBattleStructForStaffTarget	{J}
0801FD08	Chapter title logo background	{J}
08020010	Chapter title logo background	{U}
08088E74	Background for preparing for attack	{J}
08086BB8	Background for preparing for attack	{U}
08088FA4	Background of support conversation	{J}
08086CE8	Background of support conversation	{U}
08097E74	Link Arena deny unit judgment	{U}
0809A14C	Link Arena deny unit judgment	{J}
08086AC4	Obtaining start position of structure of support conversation	{J}
080847F8	Obtaining start position of structure of support conversation	{U}
08086A58	Designation of BGM for supporting conversation	However, songs to be played are limited to IDs	Substantially unusable		{J}
0808478C	Designation of BGM for supporting conversation	However, songs to be played are limited to IDs	Substantially unusable		{U}
080598F8	Scarlet weapon's Flash	{J}
08058AC8	Scarlet weapon's Flash	{U}
0203F080	:0203F084	Reserve Gaiden Style Magic Menu	{U}
08A5A618	:08A5A6AF	Event Check Table	FunctionTables	{J}
08002B04	&ARM	CallARM_PushToSecondaryOAM	{J}
085911C4	:085911D7	MMSizeTable	{U}
085B8F5C	:085B8F6F	MMSizeTable	{J}
08001EE4	EnablePaletteSync	{J}
//089991AC	:0899B5AB	UNUSED DATA 2	It seems to be tile animation data not being used	UNUSEDBIN	{U}
0859A140	&PALETTE	Something's palette	01	{U}
0859EEA0	&PALETTE	Something's palette	02	{U}
0859EEC0	&PALETTE	LightRune Palette	{U}
0859EEE0	&PALETTE	Something's palette	04	{U}
0859EF00	&PALETTE	Something's palette	05	{U}
0859EF20	&PALETTE	Something's palette	06	{U}
0859EF60	&PALETTE	Something's palette	07	{U}
0859EFE0	&PALETTE	Something's palette	08	{U}
0859F000	&PALETTE	Something's palette	09	{U}
085A0D2C	&PALETTE	Something's palette	10	{U}
085A206C	&PALETTE	Something's palette	11	{U}
085A208C	&PALETTE	Something's palette	12	{U}
085A2DDC	&PALETTE	Something's palette	13	{U}
085A3490	&PALETTE	Something's palette	14	{U}
085A3944	&PALETTE	Something's palette	15	{U}
085A3AC0	&PALETTE	WeatherLava's firestorm	{U}
085A401C	&PALETTE	Something's palette	17	{U}
085A5760	&PALETTE	Something's palette	18	{U}
085A61A8	&PALETTE	Something's palette	19	{U}
085A643C	&PALETTE	Something's palette	20	{U}
085A7CA0	&PALETTE	Something's palette	21	{U}
085A7EC8	&PALETTE	Something's palette	22	{U}
085ADBE8	&PALETTE	Something's palette	23	{U}
085ADC48	&PALETTE	Something's palette	24	{U}
085ADCC8	&PALETTE	Something's palette	25	{U}
085ADDA8	&PALETTE	Something's palette	26	{U}
085ADDC8	&PALETTE	Something's palette	27	{U}
085ADE08	&PALETTE	Something's palette	28	{U}
085ADE68	&PALETTE	Something's palette	29	{U}
085B081C	&PALETTE4	Something's palette	30	{U}
085B6C14	&PALETTE	Something's palette	31	{U}
085B7560	&PALETTE	Something's palette	32	{U}
085B7580	&PALETTE	Something's palette	33	{U}
085B9244	&PALETTE	Something's palette	34	{U}
0868716C	&PALETTE	Something's palette	35	{U}
08803B10	&PALETTE	Something's palette	37	{U}
089A232C	&PALETTE	Something's palette	38	{U}
089A28E0	&PALETTE	Something's palette	39	{U}
089AC9A8	&PALETTE	Something's palette	40	{U}
089ADD0C	&PALETTE	Something's palette	41	{U}
089AE204	&PALETTE	Something's palette	42	{U}
089AE484	&PALETTE	Something's palette	43	{U}
089AE7C4	&PALETTE	Something's palette	44	{U}
089B068C	&PALETTE	Something's palette	45	{U}
089B0700	&PALETTE	Something's palette	46	{U}
089B20E8	&PALETTE	Something's palette	47	{U}
089B4BFC	&PALETTE	Something's palette	48	{U}
089B73D4	&PALETTE	Something's palette	49	{U}
089B80C4	&PALETTE	Something's palette	50	{U}
089E7DEC	&PALETTE	Something's palette	51	{U}
089E84D4	&PALETTE	Something's palette	52	{U}
08A01EE4	&PALETTE	Something's palette	53	{U}
08A01F04	&PALETTE	Something's palette	54	{U}
08A021E4	&PALETTE	Something's palette	55	{U}
08A03334	&PALETTE	Something's palette	56	{U}
08A09A5C	&PALETTE	Something's palette	57	{U}
08A0AE44	&PALETTE	Something's palette	58	{U}
08A0AE64	&PALETTE	Something's palette	59	{U}
08A1A3FC	&PALETTE	Something's palette	60	{U}
08A1B154	&PALETTE	Something's palette	61	{U}
08A1B638	&PALETTE	Something's palette	62	{U}
08A1BD00	&PALETTE	Something's palette	63	{U}
08A1D79C	&PALETTE	Something's palette	64	{U}
08A1E0D8	&PALETTE	Something's palette	65	{U}
08A1FFB0	&PALETTE	Something's palette	66	{U}
08A1FFD0	&PALETTE	Something's palette	67	{U}
08A25DCC	&PALETTE4	Something's palette	68	{U}
08A268D8	&PALETTE	Something's palette	69	{U}
08A27F68	&PALETTE8	Something's palette	70	{U}
08A295B4	&PALETTE	Something's palette	71	{U}
08A2C11C	&PALETTE	Something's palette	72	{U}
08A2C8A8	&PALETTE3	Something's palette	73	{U}
08A2D2CC	&PALETTE3	Something's palette	74	{U}
08A2E1B8	&PALETTE2	Something's palette	75	{U}
08A2E4A4	&PALETTE	Something's palette	76	{U}
08A2E8F0	&PALETTE2	Something's palette	77	{U}
08A360C8	&PALETTE	Something's palette	78	{U}
08A372C0	&PALETTE	Something's palette	79	{U}
08A37300	&PALETTE	Something's palette	80	{U}
08A3F710	&PALETTE	Something's palette	81	{U}
08A40AD4	&PALETTE	Something's palette	82	{U}
08A4D0CC	&PALETTE	Something's palette	83	{U}
08A97A60	&PALETTE	Something's palette	84	{U}
08A97E28	&PALETTE	Something's palette	85	{U}
08A97FA4	&PALETTE	Something's palette	86	{U}
08A98DCC	&PALETTE	Something's palette	87	{U}
08A98E8C	&PALETTE	Something's palette	88	{U}
08A99120	&PALETTE	Something's palette	89	{U}
08A9E688	&PALETTE	Something's palette	90	{U}
08AA11B0	&PALETTE	Something's palette	91	{U}
08AA239C	&PALETTE	Something's palette	92	{U}
08AADB68	&PALETTE	Something's palette	93	{U}
08AAE8CC	&PALETTE	Something's palette	94	{U}
08AAFCF4	&PALETTE	Something's palette	95	{U}
08AB0114	&PALETTE	Something's palette	96	{U}
08AB0B24	&PALETTE	Something's palette	97	{U}
08AB210C	&PALETTE3	Something's palette	98	{U}
08AB21B8	&PALETTE	Something's palette	99	{U}
085C25C0	&PALETTE	Something's palette	01	{J}
085C73C0	&PALETTE	Something's palette	02	{J}
085C73E0	&PALETTE	LightRune Palette	{J}
085C7400	&PALETTE	Something's palette	04	{J}
085C7420	&PALETTE	Something's palette	05	{J}
085C7440	&PALETTE	Something's palette	06	{J}
085C7480	&PALETTE	Something's palette	07	{J}
085C7500	&PALETTE	Something's palette	08	{J}
085C7520	&PALETTE	Something's palette	09	{J}
085C924C	&PALETTE	Something's palette	10	{J}
085CA58C	&PALETTE	Something's palette	11	{J}
085CA5AC	&PALETTE	Something's palette	12	{J}
085CB2FC	&PALETTE	Something's palette	13	{J}
085CB9B0	&PALETTE	Something's palette	14	{J}
085CBE64	&PALETTE	Something's palette	15	{J}
085CBFE4	&PALETTE	WeatherLava's firestorm	{J}
085CC540	&PALETTE	Something's palette	17	{J}
085CDC84	&PALETTE	Something's palette	18	{J}
085CF9BC	&PALETTE	Something's palette	19	{J}
085CFC50	&PALETTE	Something's palette	20	{J}
085D14B4	&PALETTE	Something's palette	21	{J}
085D1DD0	&PALETTE	Something's palette	22	{J}
085D7E88	&PALETTE	Something's palette	23	{J}
085D7EE8	&PALETTE	Something's palette	24	{J}
085D7F68	&PALETTE	Something's palette	25	{J}
085D8048	&PALETTE	Something's palette	26	{J}
085D8068	&PALETTE	Something's palette	27	{J}
085D80A8	&PALETTE	Something's palette	28	{J}
085D8108	&PALETTE	Something's palette	29	{J}
085DA9FC	&PALETTE4	Something's palette	30	{J}
085E0DF4	&PALETTE	Something's palette	31	{J}
085E1740	&PALETTE	Something's palette	32	{J}
085E1760	&PALETTE	Something's palette	33	{J}
085E3424	&PALETTE	Something's palette	34	{J}
086B3D44	&PALETTE	Something's palette	35	{J}
08858068	&PALETTE	Something's palette	37	{J}
08A12AA0	&PALETTE	Something's palette	38	{J}
08A12F68	&PALETTE	Something's palette	39	{J}
08A1D030	&PALETTE	Something's palette	40	{J}
08A1E394	&PALETTE	Something's palette	41	{J}
08A1E88C	&PALETTE	Something's palette	42	{J}
08A1EB0C	&PALETTE	Something's palette	43	{J}
08A1EE4C	&PALETTE	Something's palette	44	{J}
08A20D14	&PALETTE	Something's palette	45	{J}
08A20D88	&PALETTE	Something's palette	46	{J}
08A22770	&PALETTE	Something's palette	47	{J}
08A25284	&PALETTE	Something's palette	48	{J}
08A27A5C	&PALETTE	Something's palette	49	{J}
08A2874C	&PALETTE	Something's palette	50	{J}
08A58474	&PALETTE	Something's palette	51	{J}
08A5A5F8	&PALETTE	Something's palette	52	{J}
08A73F9C	&PALETTE	Something's palette	53	{J}
08A73FBC	&PALETTE	Something's palette	54	{J}
08A7429C	&PALETTE	Something's palette	55	{J}
08A753EC	&PALETTE	Something's palette	56	{J}
08A7CD1C	&PALETTE	Something's palette	57	{J}
08A7E104	&PALETTE	Something's palette	58	{J}
08A7E124	&PALETTE	Something's palette	59	{J}
08A96C4C	&PALETTE	Something's palette	60	{J}
08A97BEC	&PALETTE	Something's palette	61	{J}
08A980D0	&PALETTE	Something's palette	62	{J}
08A98798	&PALETTE	Something's palette	63	{J}
08A99FA8	&PALETTE	Something's palette	64	{J}
08A9B004	&PALETTE	Something's palette	65	{J}
08A9CEDC	&PALETTE	Something's palette	66	{J}
08A9CEFC	&PALETTE	Something's palette	67	{J}
08AA2D34	&PALETTE4	Something's palette	68	{J}
08AA3840	&PALETTE	Something's palette	69	{J}
08A980D0	&PALETTE8	Something's palette	70	{J}
08AA7310	&PALETTE	Something's palette	71	{J}
08AA9E78	&PALETTE	Something's palette	72	{J}
08AAAA38	&PALETTE3	Something's palette	73	{J}
08AAEAE4	&PALETTE2	Something's palette	75	{J}
08A79B70	&PALETTE	Something's palette	76	{J}
08AAF654	&PALETTE2	Something's palette	77	{J}
08AB6EF4	&PALETTE	Something's palette	78	{J}
08AB8044	&PALETTE	Something's palette	79	{J}
08A97C0C	&PALETTE	Something's palette	80	{J}
08AC30D4	&PALETTE	Something's palette	81	{J}
08AC6C98	&PALETTE	Something's palette	82	{J}
08AD1424	&PALETTE	Something's palette	83	{J}
08B1CCF4	&PALETTE	Something's palette	84	{J}
08B1D0BC	&PALETTE	Something's palette	85	{J}
08B1D238	&PALETTE	Something's palette	86	{J}
085E0DF4	&PALETTE	Something's palette	88	{J}
08B1E998	&PALETTE	Something's palette	89	{J}
08B23F00	&PALETTE	Something's palette	90	{J}
08B2699C	&PALETTE	Something's palette	91	{J}
08B3B72C	&PALETTE	Something's palette	92	{J}
08B4678C	&PALETTE	Something's palette	93	{J}
08B474F0	&PALETTE	Something's palette	94	{J}
08B48918	&PALETTE	Something's palette	95	{J}
08B48D38	&PALETTE	Something's palette	96	{J}
08B49B4C	&PALETTE	Something's palette	97	{J}
08B4B134	&PALETTE3	Something's palette	98	{J}
08B4B1E0	&PALETTE	Something's palette	99	{J}
089B7414	&LZ77	Something small compressed data	35	{U}
089B743C	&LZ77	Something small compressed data	36	{U}
089B7468	&LZ77	Something small compressed data	37	{U}
089B749C	&LZ77	Something small compressed data	38	{U}
089B74D4	&LZ77	Something small compressed data	39	{U}
089B7514	&LZ77	Something small compressed data	40	{U}
089B7554	&LZ77	Something small compressed data	41	{U}
089B759C	&LZ77	Something small compressed data	42	{U}
089B75D8	&LZ77	Something small compressed data	43	{U}
089B7414	&LZ77	Something small compressed data	44	{U}
089B743C	&LZ77	Something small compressed data	45	{U}
089B7468	&LZ77	Something small compressed data	46	{U}
089B749C	&LZ77	Something small compressed data	47	{U}
089B74D4	&LZ77	Something small compressed data	48	{U}
089B7514	&LZ77	Something small compressed data	49	{U}
089B7554	&LZ77	Something small compressed data	50	{U}
089B759C	&LZ77	Something small compressed data	51	{U}
089B75D8	&LZ77	Something small compressed data	52	{U}
089E7E2C	&LZ77	Something small compressed data	53	{U}
089E7E50	&LZ77	Something small compressed data	54	{U}
089E7E78	&LZ77	Something small compressed data	55	{U}
089E7EA0	&LZ77	Something small compressed data	56	{U}
089E7ECC	&LZ77	Something small compressed data	57	{U}
089E7EFC	&LZ77	Something small compressed data	58	{U}
089E7F2C	&LZ77	Something small compressed data	59	{U}
089E7F5C	&LZ77	Something small compressed data	60	{U}
089E7F8C	&LZ77	Something small compressed data	61	{U}
089E7FBC	&LZ77	Something small compressed data	62	{U}
089E7FFC	&LZ77	Something small compressed data	63	{U}
089E8040	&LZ77	Something small compressed data	64	{U}
089E8090	&LZ77	Something small compressed data	65	{U}
089E80EC	&LZ77	Something small compressed data	66	{U}
089E8148	&LZ77	Something small compressed data	67	{U}
089E81A4	&LZ77	Something small compressed data	68	{U}
089E8200	&LZ77	Something small compressed data	69	{U}
08A27A9C	&LZ77	Something small compressed data	35	{J}
08A27AC4	&LZ77	Something small compressed data	36	{J}
08A27AF0	&LZ77	Something small compressed data	37	{J}
08A27B24	&LZ77	Something small compressed data	38	{J}
08A27B5C	&LZ77	Something small compressed data	39	{J}
08A27B9C	&LZ77	Something small compressed data	40	{J}
08A27BDC	&LZ77	Something small compressed data	41	{J}
08A27C24	&LZ77	Something small compressed data	42	{J}
08A27C60	&LZ77	Something small compressed data	43	{J}
08A27A9C	&LZ77	Something small compressed data	44	{J}
08A27AC4	&LZ77	Something small compressed data	45	{J}
08A27AF0	&LZ77	Something small compressed data	46	{J}
08A27B24	&LZ77	Something small compressed data	47	{J}
08A27B5C	&LZ77	Something small compressed data	48	{J}
08A27B9C	&LZ77	Something small compressed data	49	{J}
08A27BDC	&LZ77	Something small compressed data	50	{J}
08A27C24	&LZ77	Something small compressed data	51	{J}
08A27C60	&LZ77	Something small compressed data	52	{J}
08A584B4	&LZ77	Something small compressed data	53	{J}
08A584D8	&LZ77	Something small compressed data	54	{J}
08A58500	&LZ77	Something small compressed data	55	{J}
08A58528	&LZ77	Something small compressed data	56	{J}
08A58554	&LZ77	Something small compressed data	57	{J}
08A58584	&LZ77	Something small compressed data	58	{J}
08A585B4	&LZ77	Something small compressed data	59	{J}
08A585E4	&LZ77	Something small compressed data	60	{J}
08A58614	&LZ77	Something small compressed data	61	{J}
08A58644	&LZ77	Something small compressed data	62	{J}
08A58684	&LZ77	Something small compressed data	63	{J}
08A586C8	&LZ77	Something small compressed data	64	{J}
08A58718	&LZ77	Something small compressed data	65	{J}
08A58774	&LZ77	Something small compressed data	66	{J}
08A587D0	&LZ77	Something small compressed data	67	{J}
08A5882C	&LZ77	Something small compressed data	68	{J}
08A58888	&LZ77	Something small compressed data	69	{J}
08A71F3C	&EVENT	Debug room, Event 1	{J}
08A71FCC	&EVENT	Debug room, Event 2	{J}
08A72044	&EVENT	Debug room, Event 3	{J}
08A720EC	&EVENT	Debug room, Event 4	{J}
08A72158	&EVENT	Debug room, Event 5	{J}
08A721F4	&EVENT	Debug room, Event 6	{J}
08A72264	&EVENT	Debug room, Event 7	{J}
08A72318	&EVENT	Debug room, Event 8	{J}
08A72158	&EVENT	Debug room, Event 9	{J}
08A721F4	&EVENT	Debug room, Event 10	{J}
08A723A8	&EVENT	Debug room, Event 11	{J}
089FFE84	&EVENT	Debug room, Event 1	{U}
089FFF14	&EVENT	Debug room, Event 2	{U}
089FFF8C	&EVENT	Debug room, Event 3	{U}
08A00034	&EVENT	Debug room, Event 4	{U}
08A000A0	&EVENT	Debug room, Event 5	{U}
08A0013C	&EVENT	Debug room, Event 6	{U}
08A001AC	&EVENT	Debug room, Event 7	{U}
08A00260	&EVENT	Debug room, Event 8	{U}
08A000A0	&EVENT	Debug room, Event 9	{U}
08A0013C	&EVENT	Debug room, Event 10	{U}
08A002F0	&EVENT	Debug room, Event 11	{U}
08083DF0	Set up scar damage recovery effect	{J}
08081B40	Set up scar damage recovery effect	{U}
08A20600	:08A2067F	Restoration of wound medicine Effect pallet Animation	{J}
089AFF78	:089AFFF7	Restoration of wound medicine Effect pallet Animation	{U}
//08BBD970	:08BC39FF	UNUSED DATA Unknown 1	UNUSEDBIN	{J}
//08BBB6C8	:08BBD3F7	UNUSED DATA Unknown 2	UNUSEDBIN	{J}
//08BB8ED0	:08BBB33C	UNUSED DATA Unknown 3	UNUSEDBIN	{J}
//08BB310C	:08BB8787	Network Arena Data	{J}
//08FE0000	:08FE1553	UNUSED DATA ROM termination 1	UNUSEDBIN	{J}
//08FE281C	:08FE308F	UNUSED DATA ROM termination 2	UNUSEDBIN	{J}
//08B1FE7C	:08B2A5D3	UNUSED DATA Unknown 1	UNUSEDBIN	{U}
//08B1A0B8	:08B1FA3B	UNUSED DATA Unknown 2	UNUSEDBIN	{U}
//08FE0000	:08FE1553	UNUSED DATA ROM termination 1	UNUSEDBIN	{U}
//08FE281C	:08FE308F	UNUSED DATA ROM termination 2	UNUSEDBIN	{U}
080837b0	Forced game over	{U}
08018ff0	AreAnyPlayerUnitDead	{U}
08085AE8	Forced game over	{J}
08018D04	AreAnyPlayerUnitDead	{J}
080021A8	Acquire playing BGM	{J}
08002258	Acquire playing BGM	{U}
080BEDE8	BGM selection of world map	{J}
080B9F54	BGM selection of world map	{U}
080c1e20	Acquire base ID of next destination in world map	{J}
080bd014	Acquire base ID of next destination in world map	{U}
080374B0	RMenu_Procs_BKSEL relationship of battle prediction dialog	{J}
080373F0	RMenu_Procs_BKSEL relationship of battle prediction dialog	{U}
0808B414	Battle prediction dialog is a wrapper function to register RMenu	{J}
08089188	Battle prediction dialog is a wrapper function to register RMenu	{U}
08A73210	:08A732BF	Character string ID referred to by game system	{J}
08A01158	:08A01207	Character string ID referred to by game system	{U}
08670D40	:0867169F	What data related to live wand 1	0x0854	{U}
086716A0	:08671FFF	What data 2 related to live wand 2	0x0854	{U}
0866F774	:086700D3	What data related to live wand 3	0x1F	{U}
086700D4	:086702D3	Heal staff pallet relationship 1	{U}
08672000	:0867221F	Palette of Heal staff relationship 2	{U}
08672220	:0867243F	Data of live wand something	{U}
0869D918	:0869E277	What data related to live wand 1	0x0854	{J}
0869E278	:0869EBD7	What data 2 related to live wand 2	0x0854	{J}
0869C34C	:0869CCAB	What data related to live wand 3	0x1F	{J}
0869CCAC	:0869CEAB	Heal staff pallet relationship 1	{J}
080E29E6	:080E2A17	Palette of Heal staff relationship 2	{J}
0869EDF8	:0869EFF8	Palette of Heal staff relationship 3	{J}
080E2A18	:080E2C37	Data of live wand something	{J}
085879D8	&ASM_POINTER_ARRAY	Procs(6c) Function	{U}
08577688	&ASM_POINTER_ARRAY	Procs(6c) Function	{J}
08206954	:082069D7	Monster occurrence rate relationship	Always 100% table	{U}
081F6620	:081F66A3	Monster occurrence rate relationship	Always 100% table	{J}
08207190	&ASM_POINTER_ARRAY	MPlayJumpTable Midi Function	M4ALIB	{U}
08207220	:08207267	MidiKeyToFreqTable1	M4ALIB	{U}
08207268	:082072DB	Unknown	However, it seems to be music related	M4ALIB	{U}
082072DC	:08207303	MidiKeyToFreqTable2	M4ALIB	{U}
08207304	:0820731B	SampleFreqSetTable	M4ALIB	{U}
0820731C	:0820739F	MidiKeyToCgbFreq Data Table1	M4ALIB	{U}
082073A0	:082073B7	MidiKeyToCgbFreq Data Table2	M4ALIB	{U}
082073B8	:082073F3	MidiKeyToCgbFreq Data Table3	M4ALIB	{U}
082073F4	:08207403	CgbSound Data Table	M4ALIB	{U}
08207404	:08207437	ply_note_Table	M4ALIB	{U}
08207438	&ASM_POINTER_ARRAY	ply_xcmd Function	M4ALIB	{U}
081F6E40	&ASM_POINTER_ARRAY	MPlayJumpTable Midi Function	M4ALIB	{J}
081F6ED0	:081F6F17	MidiKeyToFreqTable1	M4ALIB	{J}
081F6F18	:081F6F8B	Unknown	However, it seems to be music related	M4ALIB	{J}
081F6F8C	:081F6FB3	MidiKeyToFreqTable2	M4ALIB	{J}
081F6FB4	:081F6FCB	SampleFreqSetTable	M4ALIB	{J}
081F6FCC	:081F704F	MidiKeyToCgbFreq Data Table1	M4ALIB	{J}
081F7050	:081F7067	MidiKeyToCgbFreq Data Table2	M4ALIB	{J}
081F7068	:081F70A3	MidiKeyToCgbFreq Data Table3	M4ALIB	{J}
081F70A4	:081F70B3	CgbSound Data Table	M4ALIB	{J}
081F70B4	:081F70E7	ply_note_Table	M4ALIB	{J}
081F70E8	&ASM_POINTER_ARRAY	ply_xcmd Function	M4ALIB	{J}
08AB988C	&LZ77	Mystery data	Mystery image may be related to OP	{U}
08B53254	&LZ77	Mystery data	Mystery image may be related to OP	{J}
08A09A7C	&LZ77	Mystery data	Image of rectangle	{U}
08A7CD3C	&LZ77	Mystery data	Image of rectangle	{J}
085A0FF8	&ROMTCS	Any ROMTCS data	05	{U}
085A129C	&ROMTCS	Any ROMTCS data	06	{U}
085A14B8	&ROMTCS	Any ROMTCS data	07	{U}
085A2384	&ROMTCS	Any ROMTCS data	08	{U}
085A2DFC	&ROMTCS	Any ROMTCS data	09	{U}
085A33C8	&ROMTCS	Any ROMTCS data	10	{U}
085A3420	&ROMTCS	Any ROMTCS data	11	{U}
085A3730	&ROMTCS	Any ROMTCS data	12	{U}
085A38CC	&ROMTCS	Any ROMTCS data	13	{U}
085A3908	&ROMTCS	Any ROMTCS data	14	{U}
089AC194	&ROMTCS	Any ROMTCS data	15	{U}
089AC440	&ROMTCS	Any ROMTCS data	16	{U}
089A6FD8	&ROMTCS	Any ROMTCS data	17	{U}
089A6F40	&ROMTCS	Any ROMTCS data	18	{U}
089A61F8	&ROMTCS	Any ROMTCS data	19	{U}
089B2108	&ROMTCS	Any ROMTCS data	20	{U}
089B1A10	&ROMTCS	Any ROMTCS data	21	{U}
089B2748	&ROMTCS	Any ROMTCS data	22	{U}
089A6254	&ROMTCS	Any ROMTCS data	23	{U}
089A5314	&ROMTCS	Any ROMTCS data	24	{U}
089A5A6C	&ROMTCS	Any ROMTCS data	25	{U}
08A1B194	&ROMTCS	Any ROMTCS data	26	{U}
08A280A8	&ROMTCS	Any ROMTCS data	27	{U}
08AA1C70	&ROMTCS	Any ROMTCS data	28	{U}
085A7E34	&ROMTCS	Any ROMTCS data	29	{U}
089A56C4	&ROMTCS	Any ROMTCS data	30	{U}
089A6684	&ROMTCS	Any ROMTCS data	31	{U}
089A80A4	&ROMTCS	Any ROMTCS data	32	{U}
089A66C8	&ROMTCS	Any ROMTCS data	33	{U}
089A80D4	&ROMTCS	Any ROMTCS data	34	{U}
089A8EC8	&ROMTCS	Any ROMTCS data	35	{U}
085C9518	&ROMTCS	Any ROMTCS data	05	{J}
085C97BC	&ROMTCS	Any ROMTCS data	06	{J}
085C99D8	&ROMTCS	Any ROMTCS data	07	{J}
085CA8A4	&ROMTCS	Any ROMTCS data	08	{J}
085CB31C	&ROMTCS	Any ROMTCS data	09	{J}
085CB8E8	&ROMTCS	Any ROMTCS data	10	{J}
085CB940	&ROMTCS	Any ROMTCS data	11	{J}
085CBC50	&ROMTCS	Any ROMTCS data	12	{J}
085CBDEC	&ROMTCS	Any ROMTCS data	13	{J}
085CBE28	&ROMTCS	Any ROMTCS data	14	{J}
08A1C81C	&ROMTCS	Any ROMTCS data	15	{J}
08A1CAC8	&ROMTCS	Any ROMTCS data	16	{J}
08A17660	&ROMTCS	Any ROMTCS data	17	{J}
08A175C8	&ROMTCS	Any ROMTCS data	18	{J}
08A16880	&ROMTCS	Any ROMTCS data	19	{J}
08A22790	&ROMTCS	Any ROMTCS data	20	{J}
08A22098	&ROMTCS	Any ROMTCS data	21	{J}
08A22DD0	&ROMTCS	Any ROMTCS data	22	{J}
08A168DC	&ROMTCS	Any ROMTCS data	23	{J}
08A1599C	&ROMTCS	Any ROMTCS data	24	{J}
08A160F4	&ROMTCS	Any ROMTCS data	25	{J}
08A97C2C	&ROMTCS	Any ROMTCS data	26	{J}
08AA52FC	&ROMTCS	Any ROMTCS data	27	{J}
08B2759C	&ROMTCS	Any ROMTCS data	28	{J}
085D1D3C	&ROMTCS	Any ROMTCS data	29	{J}
08A15D4C	&ROMTCS	Any ROMTCS data	30	{J}
08A16D0C	&ROMTCS	Any ROMTCS data	31	{J}
08A1872C	&ROMTCS	Any ROMTCS data	32	{J}
08A16D50	&ROMTCS	Any ROMTCS data	33	{J}
08A1875C	&ROMTCS	Any ROMTCS data	34	{J}
08A19550	&ROMTCS	Any ROMTCS data	35	{J}
08AA6EA4	:08AA702F	A table defining mysterious 60 bytes fixed data	{U}
08AF4C9C	&NAZO60	Mysterious 60 bytes fixed data	01	{U}
08AF5100	&NAZO60	Mysterious 60 bytes fixed data	02	{U}
08AF5578	&NAZO60	Mysterious 60 bytes fixed data	03	{U}
08AF59EC	&NAZO60	Mysterious 60 bytes fixed data	04	{U}
08AF5E5C	&NAZO60	Mysterious 60 bytes fixed data	05	{U}
08AF62CC	&NAZO60	Mysterious 60 bytes fixed data	06	{U}
08AF6744	&NAZO60	Mysterious 60 bytes fixed data	07	{U}
08AF6BBC	&NAZO60	Mysterious 60 bytes fixed data	08	{U}
08AF7034	&NAZO60	Mysterious 60 bytes fixed data	09	{U}
08AF74AC	&NAZO60	Mysterious 60 bytes fixed data	10	{U}
08AF7924	&NAZO60	Mysterious 60 bytes fixed data	11	{U}
08AF7D98	&NAZO60	Mysterious 60 bytes fixed data	12	{U}
08AF8210	&NAZO60	Mysterious 60 bytes fixed data	13	{U}
08AF8688	&NAZO60	Mysterious 60 bytes fixed data	14	{U}
08AF8AFC	&NAZO60	Mysterious 60 bytes fixed data	15	{U}
08AF8F74	&NAZO60	Mysterious 60 bytes fixed data	16	{U}
08AF93EC	&NAZO60	Mysterious 60 bytes fixed data	17	{U}
08AF9864	&NAZO60	Mysterious 60 bytes fixed data	18	{U}
08AF9CDC	&NAZO60	Mysterious 60 bytes fixed data	19	{U}
08AFA154	&NAZO60	Mysterious 60 bytes fixed data	20	{U}
08AFA5CC	&NAZO60	Mysterious 60 bytes fixed data	21	{U}
08AFAA44	&NAZO60	Mysterious 60 bytes fixed data	22	{U}
08AFAEBC	&NAZO60	Mysterious 60 bytes fixed data	23	{U}
08AFB334	&NAZO60	Mysterious 60 bytes fixed data	24	{U}
08AFB7AC	&NAZO60	Mysterious 60 bytes fixed data	25	{U}
08AFBC24	&NAZO60	Mysterious 60 bytes fixed data	26	{U}
08AFC098	&NAZO60	Mysterious 60 bytes fixed data	27	{U}
08AFC50C	&NAZO60	Mysterious 60 bytes fixed data	28	{U}
08AFC978	&NAZO60	Mysterious 60 bytes fixed data	29	{U}
08AFCDEC	&NAZO60	Mysterious 60 bytes fixed data	30	{U}
08AFD260	&NAZO60	Mysterious 60 bytes fixed data	31	{U}
08AFD6C4	&NAZO60	Mysterious 60 bytes fixed data	32	{U}
08AFDB28	&NAZO60	Mysterious 60 bytes fixed data	33	{U}
08AFDF98	&NAZO60	Mysterious 60 bytes fixed data	34	{U}
08AFE40C	&NAZO60	Mysterious 60 bytes fixed data	35	{U}
08AFE880	&NAZO60	Mysterious 60 bytes fixed data	36	{U}
08AFECF4	&NAZO60	Mysterious 60 bytes fixed data	37	{U}
08AFF16C	&NAZO60	Mysterious 60 bytes fixed data	38	{U}
08AFF5DC	&NAZO60	Mysterious 60 bytes fixed data	39	{U}
08AFFA44	&NAZO60	Mysterious 60 bytes fixed data	40	{U}
08AFFEAC	&NAZO60	Mysterious 60 bytes fixed data	41	{U}
08B0031C	&NAZO60	Mysterious 60 bytes fixed data	42	{U}
08B00794	&NAZO60	Mysterious 60 bytes fixed data	43	{U}
08B00C0C	&NAZO60	Mysterious 60 bytes fixed data	44	{U}
08B0107C	&NAZO60	Mysterious 60 bytes fixed data	45	{U}
08B014F0	&NAZO60	Mysterious 60 bytes fixed data	46	{U}
08B01968	&NAZO60	Mysterious 60 bytes fixed data	47	{U}
08B01DDC	&NAZO60	Mysterious 60 bytes fixed data	48	{U}
08B02244	&NAZO60	Mysterious 60 bytes fixed data	49	{U}
08B026B8	&NAZO60	Mysterious 60 bytes fixed data	50	{U}
08B02B20	&NAZO60	Mysterious 60 bytes fixed data	51	{U}
08B02F90	&NAZO60	Mysterious 60 bytes fixed data	52	{U}
08B033FC	&NAZO60	Mysterious 60 bytes fixed data	53	{U}
08B03870	&NAZO60	Mysterious 60 bytes fixed data	54	{U}
08B03CE0	&NAZO60	Mysterious 60 bytes fixed data	55	{U}
08B04158	&NAZO60	Mysterious 60 bytes fixed data	56	{U}
08B045D0	&NAZO60	Mysterious 60 bytes fixed data	57	{U}
08B04A48	&NAZO60	Mysterious 60 bytes fixed data	58	{U}
08B04EB4	&NAZO60	Mysterious 60 bytes fixed data	59	{U}
08B05328	&NAZO60	Mysterious 60 bytes fixed data	60	{U}
08B05794	&NAZO60	Mysterious 60 bytes fixed data	61	{U}
08B05BFC	&NAZO60	Mysterious 60 bytes fixed data	62	{U}
08B06070	&NAZO60	Mysterious 60 bytes fixed data	63	{U}
08B064E8	&NAZO60	Mysterious 60 bytes fixed data	64	{U}
08B06960	&NAZO60	Mysterious 60 bytes fixed data	65	{U}
08B06DD4	&NAZO60	Mysterious 60 bytes fixed data	66	{U}
08B07244	&NAZO60	Mysterious 60 bytes fixed data	67	{U}
08B076B4	&NAZO60	Mysterious 60 bytes fixed data	68	{U}
08B07B2C	&NAZO60	Mysterious 60 bytes fixed data	69	{U}
08B07F94	&NAZO60	Mysterious 60 bytes fixed data	70	{U}
08B08404	&NAZO60	Mysterious 60 bytes fixed data	71	{U}
08B0887C	&NAZO60	Mysterious 60 bytes fixed data	72	{U}
08B08CF4	&NAZO60	Mysterious 60 bytes fixed data	73	{U}
08B09160	&NAZO60	Mysterious 60 bytes fixed data	74	{U}
08B095D0	&NAZO60	Mysterious 60 bytes fixed data	75	{U}
08B09A48	&NAZO60	Mysterious 60 bytes fixed data	76	{U}
08B09EBC	&NAZO60	Mysterious 60 bytes fixed data	77	{U}
08B0A334	&NAZO60	Mysterious 60 bytes fixed data	78	{U}
08B0A7A8	&NAZO60	Mysterious 60 bytes fixed data	79	{U}
08B0AC20	&NAZO60	Mysterious 60 bytes fixed data	80	{U}
08B0B098	&NAZO60	Mysterious 60 bytes fixed data	81	{U}
08B0B508	&NAZO60	Mysterious 60 bytes fixed data	82	{U}
08B0B97C	&NAZO60	Mysterious 60 bytes fixed data	83	{U}
08B0BDF4	&NAZO60	Mysterious 60 bytes fixed data	84	{U}
08B0C268	&NAZO60	Mysterious 60 bytes fixed data	85	{U}
08B0C6DC	&NAZO60	Mysterious 60 bytes fixed data	86	{U}
08B0CB4C	&NAZO60	Mysterious 60 bytes fixed data	87	{U}
08B0CFC0	&NAZO60	Mysterious 60 bytes fixed data	88	{U}
08B0D3F8	&NAZO60	Mysterious 60 bytes fixed data	89	{U}
08B0D860	&NAZO60	Mysterious 60 bytes fixed data	90	{U}
08B0DCA8	&NAZO60	Mysterious 60 bytes fixed data	91	{U}
08B0E0D4	&NAZO60	Mysterious 60 bytes fixed data	92	{U}
08B0E548	&NAZO60	Mysterious 60 bytes fixed data	93	{U}
08B0E9A4	&NAZO60	Mysterious 60 bytes fixed data	94	{U}
08B0EE18	&NAZO60	Mysterious 60 bytes fixed data	95	{U}
08B0F264	&NAZO60	Mysterious 60 bytes fixed data	96	{U}
08B0F6DC	&NAZO60	Mysterious 60 bytes fixed data	97	{U}
08B0FAE0	&NAZO60	Mysterious 60 bytes fixed data	98	{U}
08B0FF30	&NAZO60	Mysterious 60 bytes fixed data	99	{U}
08B1039C	&NAZO60	Mysterious 60 bytes fixed data	100	{U}
08B3F498	:08B3F627	A table defining mysterious 60 bytes fixed data	{J}
08B8EAA4	&NAZO60	Mysterious 60 bytes fixed data	01	{J}
08B8EF08	&NAZO60	Mysterious 60 bytes fixed data	02	{J}
08B8F380	&NAZO60	Mysterious 60 bytes fixed data	03	{J}
08B8F7F4	&NAZO60	Mysterious 60 bytes fixed data	04	{J}
08B8FC64	&NAZO60	Mysterious 60 bytes fixed data	05	{J}
08B900D4	&NAZO60	Mysterious 60 bytes fixed data	06	{J}
08B9054C	&NAZO60	Mysterious 60 bytes fixed data	07	{J}
08B909C4	&NAZO60	Mysterious 60 bytes fixed data	08	{J}
08B90E3C	&NAZO60	Mysterious 60 bytes fixed data	09	{J}
08B912B4	&NAZO60	Mysterious 60 bytes fixed data	10	{J}
08B9172C	&NAZO60	Mysterious 60 bytes fixed data	11	{J}
08B91BA0	&NAZO60	Mysterious 60 bytes fixed data	12	{J}
08B92018	&NAZO60	Mysterious 60 bytes fixed data	13	{J}
08B92490	&NAZO60	Mysterious 60 bytes fixed data	14	{J}
08B92904	&NAZO60	Mysterious 60 bytes fixed data	15	{J}
08B92D7C	&NAZO60	Mysterious 60 bytes fixed data	16	{J}
08B931F4	&NAZO60	Mysterious 60 bytes fixed data	17	{J}
08B9366C	&NAZO60	Mysterious 60 bytes fixed data	18	{J}
08B93AE4	&NAZO60	Mysterious 60 bytes fixed data	19	{J}
08B93F5C	&NAZO60	Mysterious 60 bytes fixed data	20	{J}
08B943D4	&NAZO60	Mysterious 60 bytes fixed data	21	{J}
08B9484C	&NAZO60	Mysterious 60 bytes fixed data	22	{J}
08B94CC4	&NAZO60	Mysterious 60 bytes fixed data	23	{J}
08B9513C	&NAZO60	Mysterious 60 bytes fixed data	24	{J}
08B955B4	&NAZO60	Mysterious 60 bytes fixed data	25	{J}
08B95A2C	&NAZO60	Mysterious 60 bytes fixed data	26	{J}
08B95EA0	&NAZO60	Mysterious 60 bytes fixed data	27	{J}
08B96314	&NAZO60	Mysterious 60 bytes fixed data	28	{J}
08B96780	&NAZO60	Mysterious 60 bytes fixed data	29	{J}
08B96BF4	&NAZO60	Mysterious 60 bytes fixed data	30	{J}
08B97068	&NAZO60	Mysterious 60 bytes fixed data	31	{J}
08B974CC	&NAZO60	Mysterious 60 bytes fixed data	32	{J}
08B97930	&NAZO60	Mysterious 60 bytes fixed data	33	{J}
08B97DA0	&NAZO60	Mysterious 60 bytes fixed data	34	{J}
08B98214	&NAZO60	Mysterious 60 bytes fixed data	35	{J}
08B98688	&NAZO60	Mysterious 60 bytes fixed data	36	{J}
08B98AFC	&NAZO60	Mysterious 60 bytes fixed data	37	{J}
08B98F74	&NAZO60	Mysterious 60 bytes fixed data	38	{J}
08B993E4	&NAZO60	Mysterious 60 bytes fixed data	39	{J}
08B9984C	&NAZO60	Mysterious 60 bytes fixed data	40	{J}
08B99CB4	&NAZO60	Mysterious 60 bytes fixed data	41	{J}
08B9A124	&NAZO60	Mysterious 60 bytes fixed data	42	{J}
08B9A59C	&NAZO60	Mysterious 60 bytes fixed data	43	{J}
08B9AA14	&NAZO60	Mysterious 60 bytes fixed data	44	{J}
08B9AE84	&NAZO60	Mysterious 60 bytes fixed data	45	{J}
08B9B2F8	&NAZO60	Mysterious 60 bytes fixed data	46	{J}
08B9B770	&NAZO60	Mysterious 60 bytes fixed data	47	{J}
08B9BBE4	&NAZO60	Mysterious 60 bytes fixed data	48	{J}
08B9C04C	&NAZO60	Mysterious 60 bytes fixed data	49	{J}
08B9C4C0	&NAZO60	Mysterious 60 bytes fixed data	50	{J}
08B9C928	&NAZO60	Mysterious 60 bytes fixed data	51	{J}
08B9CD98	&NAZO60	Mysterious 60 bytes fixed data	52	{J}
08B9D204	&NAZO60	Mysterious 60 bytes fixed data	53	{J}
08B9D678	&NAZO60	Mysterious 60 bytes fixed data	54	{J}
08B9DAE8	&NAZO60	Mysterious 60 bytes fixed data	55	{J}
08B9DF60	&NAZO60	Mysterious 60 bytes fixed data	56	{J}
08B9E3D8	&NAZO60	Mysterious 60 bytes fixed data	57	{J}
08B9E850	&NAZO60	Mysterious 60 bytes fixed data	58	{J}
08B9ECBC	&NAZO60	Mysterious 60 bytes fixed data	59	{J}
08B9F130	&NAZO60	Mysterious 60 bytes fixed data	60	{J}
08B9F59C	&NAZO60	Mysterious 60 bytes fixed data	61	{J}
08B9FA04	&NAZO60	Mysterious 60 bytes fixed data	62	{J}
08B9FE78	&NAZO60	Mysterious 60 bytes fixed data	63	{J}
08BA02F0	&NAZO60	Mysterious 60 bytes fixed data	64	{J}
08BA0768	&NAZO60	Mysterious 60 bytes fixed data	65	{J}
08BA0BDC	&NAZO60	Mysterious 60 bytes fixed data	66	{J}
08BA104C	&NAZO60	Mysterious 60 bytes fixed data	67	{J}
08BA14BC	&NAZO60	Mysterious 60 bytes fixed data	68	{J}
08BA1934	&NAZO60	Mysterious 60 bytes fixed data	69	{J}
08BA1D9C	&NAZO60	Mysterious 60 bytes fixed data	70	{J}
08BA220C	&NAZO60	Mysterious 60 bytes fixed data	71	{J}
08BA2684	&NAZO60	Mysterious 60 bytes fixed data	72	{J}
08BA2AFC	&NAZO60	Mysterious 60 bytes fixed data	73	{J}
08BA2F68	&NAZO60	Mysterious 60 bytes fixed data	74	{J}
08BA33D8	&NAZO60	Mysterious 60 bytes fixed data	75	{J}
08BA3850	&NAZO60	Mysterious 60 bytes fixed data	76	{J}
08BA3CC4	&NAZO60	Mysterious 60 bytes fixed data	77	{J}
08BA413C	&NAZO60	Mysterious 60 bytes fixed data	78	{J}
08BA45B0	&NAZO60	Mysterious 60 bytes fixed data	79	{J}
08BA4A28	&NAZO60	Mysterious 60 bytes fixed data	80	{J}
08BA4EA0	&NAZO60	Mysterious 60 bytes fixed data	81	{J}
08BA5310	&NAZO60	Mysterious 60 bytes fixed data	82	{J}
08BA5784	&NAZO60	Mysterious 60 bytes fixed data	83	{J}
08BA5BFC	&NAZO60	Mysterious 60 bytes fixed data	84	{J}
08BA6070	&NAZO60	Mysterious 60 bytes fixed data	85	{J}
08BA64E4	&NAZO60	Mysterious 60 bytes fixed data	86	{J}
08BA6954	&NAZO60	Mysterious 60 bytes fixed data	87	{J}
08BA6DC8	&NAZO60	Mysterious 60 bytes fixed data	88	{J}
08BA7200	&NAZO60	Mysterious 60 bytes fixed data	89	{J}
08BA7668	&NAZO60	Mysterious 60 bytes fixed data	90	{J}
08BA7AB0	&NAZO60	Mysterious 60 bytes fixed data	91	{J}
08BA7EDC	&NAZO60	Mysterious 60 bytes fixed data	92	{J}
08BA8350	&NAZO60	Mysterious 60 bytes fixed data	93	{J}
08BA87AC	&NAZO60	Mysterious 60 bytes fixed data	94	{J}
08BA8C20	&NAZO60	Mysterious 60 bytes fixed data	95	{J}
08BA906C	&NAZO60	Mysterious 60 bytes fixed data	96	{J}
08BA94E4	&NAZO60	Mysterious 60 bytes fixed data	97	{J}
08BA98E8	&NAZO60	Mysterious 60 bytes fixed data	98	{J}
08BA9D38	&NAZO60	Mysterious 60 bytes fixed data	99	{J}
08BAA1A4	&NAZO60	Mysterious 60 bytes fixed data	100	{J}
089EE0DC	&EVENT	Any event function	Difficulty level determination	1	{U}
089EE104	&EVENT	Any event function	Get chapter ID	{U}
089EE120	&EVENT	Any event function	Acquire editing	1	{U}
089EE140	&EVENT	Any event function	Acquire editing	2	{U}
089EE218	&EVENT	Any event function	Difficulty level determination	2	{U}
089EE330	&EVENT	Any event function	Tile Changes	{U}
089EE340	&EVENT	Any event function	Mystery	1	{U}
089EE354	&EVENT	Any event function	Mystery	2	{U}
089EE368	&EVENT	Any event function	Mystery	3	{U}
089EE37C	&EVENT	If active unit's allegiance matches the value in slot 2, trigger the tile change at the active unit's coordinates	{U}
089EE3F4	&EVENT	If unit in memory slot 2 is alive, do something	{U}
089EE6A0	&EVENT	Any event function	Mystery	5	{U}
089EE6C8	&EVENT	Any event function	Mystery	6	{U}
089F35FC	&EVENT	Any event function	Bifurcation to Ephrata	{U}
089FC6C4	&EVENT	Any event function	Mystery reinforcement data	{U}
089FF480	&EVENT	Any event function	Mystery	7	{U}
089FFD64	&EVENT	Debug Room Event	details unknown	{U}
08591F88	&EVENT	Any event function	Mystery	8	{U}
08591F9C	&EVENT	Any event function	Mystery	9	{U}
08591FA8	&EVENT	When a chest is opened, triggers the tile change and gives either an item (if slot3 <= 0xFF) or gold (if slot3 > 0xFF)	{U}
08592114	&EVENT	Any event function	Mystery	11	{U}
08592140	&EVENT	Clear fade-out and show map	if faded to black, clean background and fade back to map.	if not faded to black, don't do anything.		{U}
08A60214	&EVENT	Any event function	Difficulty level determination	1	{J}
08A6023C	&EVENT	Any event function	Get chapter ID	{J}
08A60258	&EVENT	Any event function	Acquire editing	1	{J}
08A60278	&EVENT	Any event function	Acquire editing	2	{J}
08A60350	&EVENT	Any event function	Difficulty level determination	2	{J}
08A60468	&EVENT	Any event function	Tile Changes	{J}
08A60478	&EVENT	Any event function	Mystery	1	{J}
08A6048C	&EVENT	Any event function	Mystery	2	{J}
08A604A0	&EVENT	Any event function	Mystery	3	{J}
08A604B4	&EVENT	If active unit's allegiance matches the value in slot 2, trigger the tile change at the active unit's coordinates	{J}
08A6052C	&EVENT	If unit in memory slot 2 is alive, do something	{J}
08A607D8	&EVENT	Any event function	Mystery	5	{J}
08A60800	&EVENT	Any event function	Mystery	6	{J}
08A628A8	&EVENT	An event explaining visit in tutorial	{J}
08A632C8	&EVENT	Events that explain Garcia and Ross in tutorial	{J}
08A632EC	&EVENT	Event to explain weapons shop in tutorial	{J}
08A65730	&EVENT	Any event function	Bifurcation to Ephrata	{J}
08A6E7A4	&EVENT	Any event function	Mystery reinforcement data	{J}
08A71538	&EVENT	Any event function	Mystery	7	{J}
08A71CE8	&EVENT	skirmish beginning events	{J}
085B9D6C	&EVENT	Any event function	Mystery	8	{J}
085B9D80	&EVENT	Any event function	Mystery	9	{J}
085B9D8C	&EVENT	Any event function	Mystery	10	{J}
085B9EF8	&EVENT	When a chest is opened, triggers the tile change and gives either an item (if slot3 <= 0xFF) or gold (if slot3 > 0xFF)	{J}
085B9F24	&EVENT	Clear fade-out and show map	if faded to black, clean background and fade back to map.	if not faded to black, don't do anything.	{J}
085B9F54	&EVENT	Any event function	Mystery	13	{J}
08A0186C	:08A0189B	Something's FillTileRect tile table	{U}
08A175B4	&HEADERTSA	Something tiled FillTileRect	40	{U}
08A175C8	&HEADERTSA	Something tiled FillTileRect	41	{U}
08A175DC	&HEADERTSA	Something tiled FillTileRect	42	{U}
08A175F0	&HEADERTSA	Something tiled FillTileRect	43	{U}
08A1763C	&HEADERTSA	Something tiled FillTileRect	44	{U}
08A17650	&HEADERTSA	Something tiled FillTileRect	45	{U}
08A17664	&HEADERTSA	Something tiled FillTileRect	46	{U}
08A17678	&HEADERTSA	Something tiled FillTileRect	47	{U}
00A73924	:00A7394B	Something's FillTileRect tile table	{J}
08A93300	&HEADERTSA	Something tiled FillTileRect	40	{J}
08A93314	&HEADERTSA	Something tiled FillTileRect	41	{J}
08A93328	&HEADERTSA	Something tiled FillTileRect	42	{J}
08A9333C	&HEADERTSA	Something tiled FillTileRect	43	{J}
08A93388	&HEADERTSA	Something tiled FillTileRect	44	{J}
08A9339C	&HEADERTSA	Something tiled FillTileRect	45	{J}
08A933B0	&HEADERTSA	Something tiled FillTileRect	46	{J}
08A933C4	&HEADERTSA	Something tiled FillTileRect	47	{J}
08577F4C	&FONTCOLOR0x200	FontColor	01	{J}
0857814C	&FONTCOLOR0x200	FontColor	02	{J}
0857834C	&FONTCOLOR0x200	FontColor	03	{J}
0857854C	&FONTCOLOR0x200	FontColor	04	{J}
0857874C	&FONTCOLOR0x200	FontColor	05	{J}
0857894C	&FONTCOLOR0x200	FontColor	06	{J}
08578B4C	&FONTCOLOR0x200	FontColor	07	{J}
08578D4C	&FONTCOLOR0x200	FontColor	08	{J}
08578F4C	&FONTCOLOR0x200	FontColor	09	{J}
0857914C	&FONTCOLOR0x200	FontColor	10	{J}
0857934C	&FONTCOLOR0x200	FontColor	11	{J}
0857954C	&FONTCOLOR0x200	FontColor	12	{J}
0857974C	&FONTCOLOR0x200	FontColor	13	{J}
0858829C	&FONTCOLOR0x200	FontColor	01	{U}
0858849C	&FONTCOLOR0x200	FontColor	02	{U}
0858869C	&FONTCOLOR0x200	FontColor	03	{U}
0858889C	&FONTCOLOR0x200	FontColor	04	{U}
08588A9C	&FONTCOLOR0x200	FontColor	05	{U}
08588C9C	&FONTCOLOR0x200	FontColor	06	{U}
08588E9C	&FONTCOLOR0x200	FontColor	07	{U}
0858909C	&FONTCOLOR0x200	FontColor	08	{U}
0858929C	&FONTCOLOR0x200	FontColor	09	{U}
0858949C	&FONTCOLOR0x200	FontColor	10	{U}
0858969C	&FONTCOLOR0x200	FontColor	11	{U}
0858989C	&FONTCOLOR0x200	FontColor	12	{U}
08589A9C	&FONTCOLOR0x200	FontColor	13	{U}
085D84D4	:085D8523	Mysterious 0x50 byte data	1	{U}
085D8524	:085D8573	Mysterious 0x50 byte data	2	{U}
085D8574	:085D85C3	Mysterious 0x50 byte data	3	{U}
085D85C4	:085D8613	Mysterious 0x50 byte data	4	{U}
085D8614	:085D8663	Mysterious 0x50 byte data	5	{U}
085D8664	:085D86B3	Mysterious 0x50 byte data	6	{U}
085D86B4	:085D8703	Mysterious 0x50 byte data	7	{U}
08602B24	:08602B73	Mysterious 0x50 byte data	1	{J}
08602B74	:08602BC3	Mysterious 0x50 byte data	2	{J}
08602BC4	:08602C13	Mysterious 0x50 byte data	3	{J}
08602C14	:08602C63	Mysterious 0x50 byte data	4	{J}
08602C64	:08602CB3	Mysterious 0x50 byte data	5	{J}
08602CB4	:08602D03	Mysterious 0x50 byte data	6	{J}
08602D04	:08602D53	Mysterious 0x50 byte data	7	{J}
085B9804	:085B9883	QuakePure Table	{U}
080DA4BA	:080DA4DB	QuakePure	01	{U}
080DA4DC	:080DA525	QuakePure	02	{U}
080DA526	:080DA56F	QuakePure	03	{U}
080DA570	:080DA5BB	QuakePure	04	{U}
080DA5BA	:080DA603	QuakePure	05	{U}
080DA720	:080DA731	QuakePure	07	{U}
080DA732	:080DA753	QuakePure	08	{U}
080DA754	:080DA765	QuakePure	09	{U}
080DA766	:080DA777	QuakePure	10	{U}
080DA778	:080DA789	QuakePure	11	{U}
080DA78A	:080DA83F	QuakePure	12	{U}
080DA840	:080DA851	QuakePure	13	{U}
080DA852	:080DA863	QuakePure	14	{U}
080DA864	:080DA875	QuakePure	15	{U}
080DA876	:080DA9F7	QuakePure	16	{U}
080DA9F8	:080DAA8D	HitQuake	01	{U}
080DAA8E	:080DABBF	HitQuake	02	{U}
085E39E4	:085E3A63	QuakePure Table	{J}
080DF4A6	:080DF4C7	QuakePure	01	{J}
080DF4C8	:080DF511	QuakePure	02	{J}
080DF512	:080DF55B	QuakePure	03	{J}
080DF55C	:080DF5A5	QuakePure	04	{J}
080DF5A6	:080DF5EF	QuakePure	05	{J}
080DF5F0	:080DF70B	QuakePure	06	{J}
080DF70C	:080DF71D	QuakePure	07	{J}
080DF71E	:080DF73F	QuakePure	08	{J}
080DF740	:080DF751	QuakePure	09	{J}
080DF752	:080DF763	QuakePure	10	{J}
080DF764	:080DF775	QuakePure	11	{J}
080DF776	:080DF82B	QuakePure	12	{J}
080DF82C	:080DF83D	QuakePure	13	{J}
080DF83E	:080DF84F	QuakePure	14	{J}
080DF850	:080DF861	QuakePure	15	{J}
080DF862	:080DF9E3	QuakePure	16	{J}
080DF9E4	:080DFA79	HitQuake	01	{J}
080DFA7A	:080DFBAB	HitQuake	02	{J}
08791D5C	&PALETTE	Something's palette	100	{U}
08791D7C	&PALETTE	Something's palette	101	{U}
08802884	:08802903	Maybe, something multiple palette	A2	{U}
08802904	:08802B03	Maybe, something multiple palette	A3	{U}
08802B24	:08802B83	Maybe, something multiple palette	A4	{U}
08802B84	:08802C83	When struck palette (for all factions apparently)	{U}
08802C84	:08802D23	Another array of palettes	player HP bar flashing,enemy HP bar flashing,NPC HP bar flashing,presumably other allegiace HP bar flashing	{U}
08802D24	:08802D43	Maybe, something multiple palette	A7	{U}
08802D44	:088030C3	Uncompressed Image	frame	{U}
088030C4	:088033C3	Uncompressed Image	Bar chart parts	{U}
088033C4	:08803523	Uncompressed Image	A number	{U}
08803524	:0880358F	Mysterious TSA data	1	{U}
0859A120	&PALETTE	A pure black palette	{U}
085BEF94	&PALETTE4	Maybe, something multiple palette	A8	{U}
085BF014	&PALETTE4	Maybe, something multiple palette	A9	{U}
085BF094	&PALETTE4	Maybe, something multiple palette	A10	{U}
085B93D0	:085B940B	Any AIS data	01	{U}
085B940C	:085B9423	Any AIS data	02	{U}
085B9424	:085B949B	Any AIS data	03	{U}
085B949C	:085B94EF	Any AIS data	04	{U}
085B94F0	:085B9543	Any AIS data	05	{U}
085B9544	:085B955B	Any AIS data	06	{U}
085B955C	:085B9573	Any AIS data	07	{U}
085B9574	:085B958B	Any AIS data	08	{U}
085B958C	:085B95A3	Any AIS data	09	{U}
085B95A4	:085B95BB	Any AIS data	10	{U}
085B95BC	:085B95D3	Any AIS data	11	{U}
085B95D4	:085B95EB	Any AIS data	12	{U}
087E62B4	&PALETTE	Something's palette	100	{J}
087E62D4	&PALETTE	Something's palette	101	{J}
08856DDC	:08856E5B	Maybe, something multiple palette	A2	{J}
08856E5C	:0885705B	Maybe, something multiple palette	A3	{J}
0885705C	:088570DB	Maybe, something multiple palette	A4	{J}
088570DC	:088571DB	When struck palette (for all factions apparently)	{J}
088571DC	:0885727B	Another array of palettes	player HP bar flashing,enemy HP bar flashing,NPC HP bar flashing,presumably other allegiace HP bar flashing	{J}
0885727C	:0885729B	Maybe, something multiple palette	A7	{J}
0885729C	:0885761B	Uncompressed Image	frame	{J}
0885761C	:0885791B	Uncompressed Image	Bar chart parts	{J}
0885791C	:08857A7B	Uncompressed Image	A number	{J}
08857A7C	:08857AE7	Mysterious TSA data	1	{J}
085C25A0	&PALETTE	A pure black palette	{J}
085E91C4	&PALETTE4	Maybe, something multiple palette	A8	{J}
085E9244	&PALETTE4	Maybe, something multiple palette	A9	{J}
085E92C4	&PALETTE4	Maybe, something multiple palette	A10	{J}
085E35B0	:085E35EB	Any AIS data	01	{J}
085E35EC	:085E3603	Any AIS data	02	{J}
085E3604	:085E367B	Any AIS data	03	{J}
085E367C	:085E36CF	Any AIS data	04	{J}
085E36D0	:085E3723	Any AIS data	05	{J}
085E3724	:085E373B	Any AIS data	06	{J}
085E373C	:085E3753	Any AIS data	07	{J}
085E3754	:085E376B	Any AIS data	08	{J}
085E376C	:085E3783	Any AIS data	09	{J}
085E3784	:085E379B	Any AIS data	10	{J}
085E379C	:085E37B3	Any AIS data	11	{J}
085E37B4	:085E37CB	Any AIS data	12	{J}
08B467EC	&PALETTE	Palette data referenced when ROM is started	{J}
08B4680C	&PALETTE	Opening relation pallet data	1	{J}
08AADBC8	&PALETTE	Palette data referenced when ROM is started	{U}
08AADBE8	&PALETTE	Opening relation pallet data	1	{U}
08B75700	:08B7585F	Something about opening relationship	{J}
08ABAD10	:08ABB14B	Something about opening relationship	{U}
080CB650	Logo at ROM start	1	{J}
080D0DB4	Logo at ROM start	2	{J}
080D0DD8	Nitendo at ROM startFunction to read Logo and ISLogo	{J}
080C6704	Logo at ROM start	1	{U}
080CBDD8	Logo at ROM start	2	{U}
080CBE0C	Nitendo at ROM startFunction to read Logo and ISLogo	{U}
0802a38c	SetupBattleStructFromUnitAndWeapon	{J}
08005890	CreateMinimug	This routine draws minimug to VRAM and writes its tilemap	{J}
080C1298	Set menu definition of world map	{J}
080BC454	Set menu definition of world map	{U}
080C13F4	Set menu definition of world map shop	{J}
080BC5B4	Set menu definition of world map shop	{U}
08A987D8	&PALETTE	Something's palette	102	{J}
085C74E0	&PALETTE	Something's palette	103	{J}
085D8088	&PALETTE	Something's palette	104	{J}
085D80E8	&PALETTE	Something's palette	105	{J}
08A987D8	&PALETTE	Something's palette	106	{J}
080E186C	&PALETTE	Something's palette	107	{J}
08A99F60	&PALETTE	Something's palette	108	{J}
08A987F8	&PALETTE	Something's palette	109	{J}
08AA52DC	&PALETTE	Something's palette	110	{J}
08A99EE0	&PALETTE	Something's palette	111	{J}
08B1CD60	&PALETTE	Something's palette	112	{J}
08B1E65C	&PALETTE	Something's palette	113	{J}
08B27220	&PALETTE	Something's palette	114	{J}
08A9A8D4	&LZ77	Something's TSA	1	{J}
08A1BD40	&PALETTE	Something's palette	102	{U}
0859EFC0	&PALETTE	Something's palette	103	{U}
085ADDE8	&PALETTE	Something's palette	104	{U}
085ADE48	&PALETTE	Something's palette	105	{U}
08A1BD40	&PALETTE	Something's palette	106	{U}
080DC85C	&PALETTE	Something's palette	107	{U}
08A1D4C8	&PALETTE	Something's palette	108	{U}
08A1BD60	&PALETTE	Something's palette	109	{U}
08A28088	&PALETTE	Something's palette	110	{U}
08A1D448	&PALETTE	Something's palette	111	{U}
08A97ACC	&PALETTE	Something's palette	112	{U}
08AA1950	&PALETTE	Something's palette	114	{U}
089DD4E8	&LZ77	Something's TSA	1	{U}
08B8B4E0	&PALETTE	OP related pallet	1	{J}
08B8B978	&PALETTE	OP related pallet	2	{J}
08B8C43C	&PALETTE	OP related pallet	3	{J}
08B8CF14	&PALETTE	OP related pallet	4	{J}
08AF1B18	&PALETTE	OP related pallet	1	{U}
08AF1FB0	&PALETTE	OP related pallet	2	{U}
08AF2634	&PALETTE	OP related pallet	3	{U}
08AF310C	&PALETTE	OP related pallet	4	{U}
08B8E5F8	&PALETTE	Something's palette	115	{J}
08BAA1E0	&PALETTE8	Something's palette	116	{J}
08B75840	&PALETTE	Something's palette	117	{J}
08AF47F0	&PALETTE	Something's palette	115	{U}
08B103D8	&PALETTE8	Something's palette	116	{U}
08ADBE78	&PALETTE	Something's palette	117	{U}
080B40EC	Opening class demoReading lottery table	{U}
080B8C80	Opening class demoReading lottery table	{J}
08A2FBE0	:08A2FCE3	Opening class demoLottery table	{U}
08AB0A44	:08AB0B47	Opening class demoLottery table	{J}
08A2FBD4	:08A2FBDF	Opening class demoNumber to shift lottery table	{U}
08AB0A38	:08AB0A43	Opening class demoNumber to shift lottery table	{J}
085B0FA8	&LZ77	UNUSED DATA	Image of FE 6	There is no pointer in FE8U	UNUSEDBIN	{U}
085B4B44	&LZ77	UNUSED DATA	TSA of image of FE 6	There is no pointer in FE8U	UNUSEDBIN	{U}
085B50A8	&PALETTE16	UNUSED DATA	FE 6 image palette	There is no pointer in FE8U	UNUSEDBIN	{U}
0801474C	Apply uncompressed TSA and read animation pattern	{U}
089B17A4	&HEADERTSA	Anime pattern using something uncompressed TSA	1	{U}
089B0864	&HEADERTSA	Anime pattern using something uncompressed TSA	2	{U}
089B343C	&HEADERTSA	Anime pattern using something uncompressed TSA	3	{U}
089B0840	&HEADERTSA	Anime pattern using something uncompressed TSA	4	{U}
08014760	Apply uncompressed TSA and read animation pattern	{J}
08A21E2C	&HEADERTSA	Anime pattern using something uncompressed TSA	1	{J}
08A20EEC	&HEADERTSA	Anime pattern using something uncompressed TSA	2	{J}
08A23AC4	&HEADERTSA	Anime pattern using something uncompressed TSA	3	{J}
08A20EC8	&HEADERTSA	Anime pattern using something uncompressed TSA	4	{J}
089B8140	&LZ77	Something small compressed data	70	{U}
089B81A4	&LZ77	Something small compressed data	71	{U}
089B8214	&LZ77	Something small compressed data	72	{U}
089B828C	&LZ77	Something small compressed data	73	{U}
089B82F0	&LZ77	Something small compressed data	74	{U}
089B835C	&LZ77	Something small compressed data	75	{U}
085BF114	&LZ77	Something's anime pattern	1	{U}
085B5888	&LZ77	Mystery dialog and numeric data	{U}
085F1620	:085F1681	Something's palette	118	{U}
085F3F40	:085F3FE1	Something's palette	119	{U}
085F7D64	&PALETTE	Something's palette	120	{U}
08603B50	:08603D4F	Something's palette	121	{U}
08622F4C	:08622FEB	Something's palette	122	{U}
0862D424	&PALETTE	Something's palette	123	{U}
08645F44	&PALETTE	Something's palette	124	{U}
08652554	:08652733	Something's palette	125	{U}
0865BAB8	:0865BAF9	Something's palette	126	{U}
086671B0	&LZ77	Something's anime pattern	2	{U}
08670528	&PALETTE	Something's palette	127	{U}
088017E0	&PALETTE	Something's palette	128	{U}
08A287C8	&LZ77	Something small compressed data	70	{J}
08A2882C	&LZ77	Something small compressed data	71	{J}
08A2889C	&LZ77	Something small compressed data	72	{J}
08A28914	&LZ77	Something small compressed data	73	{J}
08A28978	&LZ77	Something small compressed data	74	{J}
08A289E4	&LZ77	Something small compressed data	75	{J}
085E9344	&LZ77	Something's anime pattern	1	{J}
085DFA68	&LZ77	Mystery dialog and numeric data	{J}
085E04C4	&PALETTE	Mystery dialog and numeric data palette	{J}
085DFA48	&PALETTE	Palette of Japanese version only	1	{J}
0861E1F8	:0861E259	Something's palette	118	{J}
08620B18	:08620BB9	Something's palette	119	{J}
0862493C	&PALETTE	Something's palette	120	{J}
08630728	:8630927	Something's palette	121	{J}
0864FB24	:864FBC3	Something's palette	122	{J}
08659FFC	&PALETTE	Something's palette	123	{J}
08672B1C	&PALETTE	Something's palette	124	{J}
0867F12C	:867F30B	Something's palette	125	{J}
08688690	:86886D1	Something's palette	126	{J}
08693D88	&LZ77	Something's anime pattern	2	{J}
0869D100	&PALETTE	Something's palette	127	{J}
08855D38	&PALETTE	Something's palette	128	{J}
08A3E9A0	&OAMREGS_ARRAY	Unk OAMREGS	{U}
08AC2360	&OAMREGS_ARRAY	Unk OAMREGS2	{J}
08A17C20	&OAMREGS_ARRAY	Unk OAMREGS2	{U}
08A9396C	&OAMREGS_ARRAY	Unk OAMREGS2	{J}
089A3AB8	:089A3B3B	Unk Small Image	{U}
089B4C80	&LZ77	Something small compressed data	76	{U}
089B4CE8	&LZ77	Something small compressed data	77	{U}
089B4D64	&LZ77	Something small compressed data	78	{U}
089B4DDC	&LZ77	Something small compressed data	79	{U}
089B4E4C	&LZ77	Something small compressed data	80	{U}
089B4EB8	&LZ77	Something small compressed data	81	{U}
089B4F2C	&LZ77	Something small compressed data	82	{U}
089B4FA4	&LZ77	Something small compressed data	83	{U}
089B501C	&LZ77	Something small compressed data	84	{U}
089B5094	&LZ77	Something small compressed data	85	{U}
089B5118	&LZ77	Something small compressed data	86	{U}
089B519C	&LZ77	Something small compressed data	87	{U}
089B5220	&LZ77	Something small compressed data	88	{U}
089B52A4	&LZ77	Something small compressed data	89	{U}
089B5310	&LZ77	Something small compressed data	90	{U}
089B5398	&LZ77	Something small compressed data	91	{U}
089B5434	&LZ77	Something small compressed data	92	{U}
089B54F0	&LZ77	Something small compressed data	93	{U}
089B55EC	&LZ77	Something small compressed data	94	{U}
089B5720	&LZ77	Something small compressed data	95	{U}
089B58DC	&LZ77	Something small compressed data	96	{U}
089B5B38	&LZ77	Something small compressed data	97	{U}
089B5C6C	&LZ77	Something small compressed data	98	{U}
089B5E0C	&LZ77	Something small compressed data	99	{U}
089B6050	&LZ77	Something small compressed data	100	{U}
089B6174	&LZ77	Something small compressed data	101	{U}
089B630C	&LZ77	Something small compressed data	102	{U}
089B6510	&LZ77	Something small compressed data	103	{U}
089B65D4	&LZ77	Something small compressed data	104	{U}
089B66BC	&LZ77	Something small compressed data	105	{U}
089B6808	&LZ77	Something small compressed data	106	{U}
089B69BC	&LZ77	Something small compressed data	107	{U}
08A14140	:08A141C3		Unk Small Image	{J}
08A25308	&LZ77	Something small compressed data	76	{J}
08A25370	&LZ77	Something small compressed data	77	{J}
08A253EC	&LZ77	Something small compressed data	78	{J}
08A25464	&LZ77	Something small compressed data	79	{J}
08A254D4	&LZ77	Something small compressed data	80	{J}
08A25540	&LZ77	Something small compressed data	81	{J}
08A255B4	&LZ77	Something small compressed data	82	{J}
08A2562C	&LZ77	Something small compressed data	83	{J}
08A256A4	&LZ77	Something small compressed data	84	{J}
08A2571C	&LZ77	Something small compressed data	85	{J}
08A257A0	&LZ77	Something small compressed data	86	{J}
08A25824	&LZ77	Something small compressed data	87	{J}
08A258A8	&LZ77	Something small compressed data	88	{J}
08A2592C	&LZ77	Something small compressed data	89	{J}
08A25998	&LZ77	Something small compressed data	90	{J}
08A25A20	&LZ77	Something small compressed data	91	{J}
08A25ABC	&LZ77	Something small compressed data	92	{J}
08A25B78	&LZ77	Something small compressed data	93	{J}
08A25C74	&LZ77	Something small compressed data	94	{J}
08A25DA8	&LZ77	Something small compressed data	95	{J}
08A25F64	&LZ77	Something small compressed data	96	{J}
08A261C0	&LZ77	Something small compressed data	97	{J}
08A262F4	&LZ77	Something small compressed data	98	{J}
08A26494	&LZ77	Something small compressed data	99	{J}
08A266D8	&LZ77	Something small compressed data	100	{J}
08A267FC	&LZ77	Something small compressed data	101	{J}
08A26994	&LZ77	Something small compressed data	102	{J}
08A26B98	&LZ77	Something small compressed data	103	{J}
08A26C5C	&LZ77	Something small compressed data	104	{J}
08A26D44	&LZ77	Something small compressed data	105	{J}
08A26E90	&LZ77	Something small compressed data	106	{J}
08A27044	&LZ77	Something small compressed data	107	{J}
085B0F2C	&HEADERTSA	Anime pattern using something uncompressed TSA	5	{U}
080DA2F4	:080DA313	Menu tile data	{U}
080DA334	&PALETTE	Something's palette	130	{U}
080DA354	&PALETTE	Something's palette	131	{U}
080DA314	&PALETTE	Something's palette	132	{U}
085B7560	&PALETTE	Something's palette	133	{U}
085B7E54	&PALETTE	Something's palette	134	{U}
085B8714	&PALETTE	Something's palette	135	{U}
085B8F90	&PALETTE	Something's palette	136	{U}
085B6BB4	&PALETTE	Something's palette	137	{U}
085B6BD4	&PALETTE	Something's palette	138	{U}
085B6BF4	&PALETTE	Something's palette	139	{U}
085B6C14	&PALETTE	Something's palette	140	{U}
085DD518	&LZ77	I think that it is an image of a snowstorm	{U}
085DB10C	&HEADERTSA	Anime pattern using something uncompressed TSA	5	{J}
080DF2E0	:080DF2FF	Menu tile data	{J}
080DF320	&PALETTE	Something's palette	130	{J}
080DF340	&PALETTE	Something's palette	131	{J}
080DF300	&PALETTE	Something's palette	132	{J}
085E1740	&PALETTE	Something's palette	133	{J}
085E2034	&PALETTE	Something's palette	134	{J}
085E28F4	&PALETTE	Something's palette	135	{J}
085E3170	&PALETTE	Something's palette	136	{J}
085E0D94	&PALETTE	Something's palette	137	{J}
085E0DB4	&PALETTE	Something's palette	138	{J}
085E0DD4	&PALETTE	Something's palette	139	{J}
085E0DF4	&PALETTE	Something's palette	140	{J}
08607C40	&LZ77	I think that it is an image of a snowstorm	{J}
08a36338	&LZ77	OP(Promotion) Class Name Font	{U}
08A372c0	&PALETTE	OP(Promotion) Class Name Font Palette	{U}
08AB7164	&LZ77	OP(Promotion) Class Name Font	{J}
08AB8044	&PALETTE	OP(Promotion) Class Name Font Palette	{J}
08903C80	:08903DBF	Removal of individual animation data of FE 7	{J}
08903DC0	:08903E0B	Removal of individual animation table of FE 7	{J}
088AF6F4	:088AF833	Removal of individual animation data of FE 7	{U}
088AF834	:088AF87F	Removal of individual animation table of FE 7	{U}
08904BC4	:08904E1B	Cleared FE6 credit pointers	{J}
08A12FA8	:08A12FBF	Unk Small Palette	{J}
085C25E0	&PALETTE	Something's palette	141	{J}
085C2600	&PALETTE	Something's palette	142	{J}
085C2620	&PALETTE	Something's palette	143	{J}
085C2640	&PALETTE	Something's palette	144	{J}
085AA824	:085AA83B	Unk Small Palette	{U}
0859A160	&PALETTE	Something's palette	141	{U}
0859A180	&PALETTE	Something's palette	142	{U}
0859A1A0	&PALETTE	Something's palette	143	{U}
0859A1C0	&PALETTE	Something's palette	144	{U}
085D4A44	&OAMREGS_ARRAY	Unk OAMREGS3	{J}
085AA9A0	&OAMREGS_ARRAY	Unk OAMREGS3	{U}
085D4A58	&OAMREGS_ARRAY	Unk OAMREGS4	{J}
085AA9B4	&OAMREGS_ARRAY	Unk OAMREGS4	{U}
08058BF4	Acquire image ID of battle cartoon floor tile	{J}
08058D1C	Acquire image ID of background of battle animation	{J}
08057DA8	Acquire image ID of battle cartoon floor tile	{U}
08057ED0	Acquire image ID of background of battle animation	{U}
088618D0	:0886194F	TextID of terrain nameNot used in FE8J	{J}
08A0035C	&EVENT	Sky event	1	{J}
08A00364	&EVENT	Sky event	2	{J}
08A95650	:08A9590F	Any arithmetic lookup table	{J}
085B9BC4	:085B9CE3	Unk OAMSP1	{U}
085E3E14	:085E3F13	Unk OAMSP1	{J}
08604784	&PALETTE	Something's palette	145	{J}
0860A374	&PALETTE8	Something's palette	146	{J}
0860B53C	&PALETTE	Something's palette	147	{J}
0860C600	&PALETTE	Something's palette	148	{J}
0860C620	&PALETTE	Something's palette	149	{J}
0862DC64	&PALETTE	Something's palette	150	{J}
08630DE8	&PALETTE	Something's palette	151	{J}
08650674	&PALETTE	Something's palette	152	{J}
0869BE8C	&PALETTE	Something's palette	153	{J}
0867E214	&PALETTE	Something's palette	154	{J}
086886B0	&PALETTE	Something's palette	155	{J}
086B3D64	&PALETTE	Something's palette	156	{J}
086B97E8	&PALETTE	Something's palette	157	{J}
086BB044	&PALETTE	Something's palette	158	{J}
087554F8	&PALETTE	Something's palette	159	{J}
08756BB4	&PALETTE16	Something's palette	160	{J}
0875A9DC	&PALETTE	Something's palette	161	{J}
0875D358	&PALETTE	Something's palette	162	{J}
08762170	&PALETTE	Something's palette	163	{J}
087611E4	&PALETTE	Something's palette	164	{J}
08760304	&PALETTE	Something's palette	165	{J}
0875CE7C	&PALETTE	Something's palette	166	{J}
08762C54	&PALETTE	Something's palette	167	{J}
0876361C	&PALETTE	Something's palette	168	{J}
08753BCC	&PALETTE	Something's palette	169	{J}
08776F94	&PALETTE	Something's palette	170	{J}
08779A94	&PALETTE	Something's palette	171	{J}
087A0EF4	&PALETTE	Something's palette	172	{J}
087A22E8	&PALETTE	Something's palette	173	{J}
087A22E8	&PALETTE	Something's palette	174	{J}
086CE8B8	&PALETTE	Something's palette	175	{J}
086BF6E8	&PALETTE	Something's palette	176	{J}
087F9CA4	&PALETTE	Something's palette	177	{J}
087F9670	&PALETTE	Something's palette	178	{J}
087FA744	&PALETTE	Something's palette	179	{J}
086F4504	&PALETTE	Something's palette	180	{J}
086F4524	&PALETTE	Something's palette	181	{J}
086EA344	&PALETTE	Something's palette	182	{J}
086F5FD4	&PALETTE	Something's palette	183	{J}
0872BF7C	&PALETTE	Something's palette	184	{J}
0872C914	&PALETTE	Something's palette	185	{J}
0860C640	&PALETTE	Something's palette	186	{J}
086CF1EC	&PALETTE	Something's palette	187	{J}
086CF8C0	&PALETTE	Something's palette	188	{J}
086E93FC	&PALETTE	Something's palette	189	{J}
086E2604	&PALETTE	Something's palette	190	{J}
086E24B4	&PALETTE	Something's palette	191	{J}
08706F14	&PALETTE	Something's palette	192	{J}
08716FC4	&PALETTE	Something's palette	193	{J}
086E24B4	&PALETTE	Something's palette	194	{J}
0872A61C	&PALETTE	Something's palette	195	{J}
08614CE0	&PALETTE16	Something's palette	196	{J}
085FAA50	&PALETTE	Something's palette	197	{J}
0860C5E0	&PALETTE	Something's palette	198	{J}
0861E218	&PALETTE	Something's palette	199	{J}
0861E238	&PALETTE	Something's palette	200	{J}
086073AC	&PALETTE	Something's palette	201	{J}
0861589C	&PALETTE	Something's palette	202	{J}
087E66EC	&PALETTE	Something's palette	203	{J}
085DA05C	&PALETTE	Something's palette	145	{U}
085DE964	&PALETTE	Something's palette	147	{U}
085DFA28	&PALETTE	Something's palette	148	{U}
085DFA48	&PALETTE	Something's palette	149	{U}
0860108C	&PALETTE	Something's palette	150	{U}
08604210	&PALETTE	Something's palette	151	{U}
08623A9C	&PALETTE	Something's palette	152	{U}
0866F2B4	&PALETTE	Something's palette	153	{U}
0865163C	&PALETTE	Something's palette	154	{U}
0865BAD8	&PALETTE	Something's palette	155	{U}
0868718C	&PALETTE	Something's palette	156	{U}
0868CC10	&PALETTE	Something's palette	157	{U}
0868E46C	&PALETTE	Something's palette	158	{U}
08728920	&PALETTE	Something's palette	159	{U}
08652554	&PALETTE	Something's palette	160	{U}
0872DE04	&PALETTE	Something's palette	161	{U}
08730780	&PALETTE	Something's palette	162	{U}
08732228	&PALETTE	Something's palette	164	{U}
08731348	&PALETTE	Something's palette	165	{U}
087302A4	&PALETTE	Something's palette	166	{U}
085F1620	&PALETTE	Something's palette	168	{U}
08726FF4	&PALETTE	Something's palette	169	{U}
08751DB4	&PALETTE	Something's palette	173	{U}
08751DB4	&PALETTE	Something's palette	174	{U}
086A1CE0	&PALETTE	Something's palette	175	{U}
08692B10	&PALETTE	Something's palette	176	{U}
087A574C	&PALETTE	Something's palette	177	{U}
087A5118	&PALETTE	Something's palette	178	{U}
087A61EC	&PALETTE	Something's palette	179	{U}
086C792C	&PALETTE	Something's palette	180	{U}
086C794C	&PALETTE	Something's palette	181	{U}
086BD76C	&PALETTE	Something's palette	182	{U}
086C93FC	&PALETTE	Something's palette	183	{U}
086FF3A4	&PALETTE	Something's palette	184	{U}
086FFD3C	&PALETTE	Something's palette	185	{U}
085DFA68	&PALETTE	Something's palette	186	{U}
086A2614	&PALETTE	Something's palette	187	{U}
086A2CE8	&PALETTE	Something's palette	188	{U}
086BC824	&PALETTE	Something's palette	189	{U}
086B5A2C	&PALETTE	Something's palette	190	{U}
086B58DC	&PALETTE	Something's palette	191	{U}
086DA33C	&PALETTE	Something's palette	192	{U}
086EA3EC	&PALETTE	Something's palette	193	{U}
086B58DC	&PALETTE	Something's palette	194	{U}
086FDA44	&PALETTE	Something's palette	195	{U}
085E8108	&PALETTE16	Something's palette	196	{U}
085D0820	&PALETTE	Something's palette	197	{U}
085DFA08	&PALETTE	Something's palette	198	{U}
085F1640	&PALETTE	Something's palette	199	{U}
085F1660	&PALETTE	Something's palette	200	{U}
085DCC84	&PALETTE	Something's palette	201	{U}
085E8CC4	&PALETTE	Something's palette	202	{U}
08792194	&PALETTE	Something's palette	203	{U}
085DF4B8	&HEADERTSA	Something's TSA	2	{J}
085DF554	&HEADERTSA	Something's TSA	3	{J}
08A74308	&HEADERTSA	Something's TSA	4	{J}
08AAEE9C	&HEADERTSA	Something's TSA	5	{J}
08A96C84	&HEADERTSA	Something's TSA	6	{J}
08AA71D4	&HEADERTSA	Something's TSA	7	{J}
08AC3F5C	&HEADERTSA	Something's TSA	8	{J}
08AC3AA8	&HEADERTSA	Something's TSA	9	{J}
08AC484C	&HEADERTSA	Something's TSA	10	{J}
08AC4398	&HEADERTSA	Something's TSA	11	{J}
08AC718C	&HEADERTSA	Something's TSA	12	{J}
08B1E73C	&HEADERTSA	Something's TSA	13	{J}
08B1E7B8	&HEADERTSA	Something's TSA	14	{J}
08B1E5FC	&HEADERTSA	Something's TSA	15	{J}
08B1E61C	&HEADERTSA	Something's TSA	16	{J}
08B1E634	&HEADERTSA	Something's TSA	17	{J}
08AC2BE0	&HEADERTSA	Something's TSA	19	unused	UNUSEDBIN	{J}
085B52D8	&HEADERTSA	Something's TSA	2	{U}
085B5374	&HEADERTSA	Something's TSA	3	{U}
08A02250	&HEADERTSA	Something's TSA	4	{U}
08A1A434	&HEADERTSA	Something's TSA	6	{U}
08A1768C	&HEADERTSA	Something's TSA	18	{U}
08A3F21C	&HEADERTSA	Something's TSA	19	unused	UNUSEDBIN	{U}
08004998	Load font for status screen	{J}
08004A90	Load font for status screen	{U}
085B91C8	&OAMREGS_ARRAY	Unk OAMREGS4	{J}
08591430	&OAMREGS_ARRAY	Unk OAMREGS4	{U}
080DCDD8	&ASM_POINTER_ARRAY	AI Script Function	{J}
080D80FC	&ASM_POINTER_ARRAY	AI Script Function	{U}
0859B938	&SECONDARYOAM_ARRAY	Secondary OAM	1	{U}
0859B898	&SECONDARYOAM_ARRAY	Secondary OAM	2	{U}
0859B7F4	&SECONDARYOAM_ARRAY	Secondary OAM	3	{U}
0859B858	&SECONDARYOAM_ARRAY	Secondary OAM	4	{U}
0859B968	&SECONDARYOAM	Secondary OAM 1	{U}
085921AC	&SECONDARYOAM	Secondary OAM 2	{U}
0859B144	&SECONDARYOAM	Secondary OAM 3	{U}
0802792C	&SECONDARYOAM	Secondary OAM 4	{U}
08A2E986	&SECONDARYOAM	Secondary OAM 5	{U}
08A39498	&SECONDARYOAM	Secondary OAM 6	{U}
080ba788	Arena	Show serif	{J}
080BA51C	Arena	Serving entrance	{J}
080BA550	Arena	Display premium	{J}
080BA570	Arena	Show opponent	{J}
080BA5BC	Arena	Pay premium	{J}
080BA600	Arena	Serif of "Can cancel with B button"	{J}
080BA614	Arena	Cancel	To be cool or to go away	{J}
080BA628	Arena	Play Changling's sound	{J}
080BA638	Arena	Combat start	{J}
080BA69C	Arena	Serve as a result of winning or losing	{J}
080B5C04	Arena	Show serif	{U}
080B5998	Arena	Serving entrance	{U}
080B59CC	Arena	Display premium	{U}
080B59EC	Arena	Show opponent	{U}
080B5A38	Arena	Pay premium	{U}
080B5A78	Arena	Serif of "Can cancel with B button"	{U}
080B5A8C	Arena	Cancel	To be cool or to go away	{U}
080B5AA0	Arena	Play Changling's sound	{U}
080B5AB4	Arena	Combat start	{U}
080B5B18	Arena	Serve as a result of winning or losing	{U}
08A1DDD4	&LZ77	Something small compressed data	108	{J}
089AD74C	&LZ77	Something small compressed data	108	{U}
08A595A4	&HEADERTSA	Something's TSA	20	unused	UNUSEDBIN	{J}
08A98838	&HEADERTSA	Something's TSA	21	unused	UNUSEDBIN	{J}
08A1BDA0	&HEADERTSA	Something's TSA	21	unused	UNUSEDBIN	{U}
08A9D57C	&OAMREGS_ARRAY	Unk OAMREGS	05	{J}
08A20650	&OAMREGS_ARRAY	Unk OAMREGS	05	{U}
08A9E470	&OAMREGS_ARRAY	Unk OAMREGS	06	{J}
08A21508	&OAMREGS_ARRAY	Unk OAMREGS	06	{U}
085C2940	&OAMREGS_ARRAY	Unk OAMREGS	07	{J}
0859A4C0	&OAMREGS_ARRAY	Unk OAMREGS	07	{U}
085C29BC	&OAMREGS_ARRAY	Unk OAMREGS	08	{J}
0859A530	&OAMREGS_ARRAY	Unk OAMREGS	08	{U}
085C662C	&OAMREGS_ARRAY	Unk OAMREGS	09	{J}
0859E14C	&OAMREGS_ARRAY	Unk OAMREGS	09	{U}
085D35EC	&OAMREGS_ARRAY	Unk OAMREGS	10	{J}
085A96E4	&OAMREGS_ARRAY	Unk OAMREGS	10	{U}
085D35DC	&OAMREGS_ARRAY	Unk OAMREGS	11	{J}
085A96D4	&OAMREGS_ARRAY	Unk OAMREGS	11	{U}
085D4B4C	&OAMREGS_ARRAY	Unk OAMREGS	12	{J}
085AAAA8	&OAMREGS_ARRAY	Unk OAMREGS	12	{U}
085D4B54	&OAMREGS_ARRAY	Unk OAMREGS	13	{J}
085AAAB0	&OAMREGS_ARRAY	Unk OAMREGS	13	{U}
085D4B80	&OAMREGS_ARRAY	Unk OAMREGS	14	{J}
085AAADC	&OAMREGS_ARRAY	Unk OAMREGS	14	{U}
080DF1B6	&OAMREGS_ARRAY	Unk OAMREGS	15	{J}
080DA1CA	&OAMREGS_ARRAY	Unk OAMREGS	15	{U}
085D4C5C	&OAMREGS_ARRAY	Unk OAMREGS	16	{J}
085AABB8	&OAMREGS_ARRAY	Unk OAMREGS	16	{U}
085E0678	&OAMREGS	OAMREGS	{J}
085B6498	&OAMREGS	OAMREGS	{U}
08A60AD4	&OAMREGS	OAMREGS	{J}
089EE99C	&OAMREGS	OAMREGS	{U}
08A72414	&EVENT	Empty event	1	{J}
08A7241C	&EVENT	Empty event	2	{J}
085C4144	&EVENT	Tutorial	Inventory change	1	{J}
085C4188	&EVENT	Tutorial	Inventory change	2	{J}
085C41D4	&EVENT	Tutorial	Inventory change	3	{J}
085C4220	&EVENT	Tutorial	Inventory change	4	{J}
085D3E50	&EVENT	For debugging	Would you like to delete all saved data?	{J}
085D4358	&EVENT	Communication stadium	Do you surrender?	{J}
085D437C	&EVENT	Communication stadium	I can not give damage	Do you want to end it? 	{J}
08A71E1C	&EVENT	For debugging	Mysterious branch	{J}
08A71FC0	&EVENT	For debugging	Branch	1	{J}
08A72038	&EVENT	For debugging	Branch	2	{J}
08A720E0	&EVENT	For debugging	Branch	3	{J}
08A7214C	&EVENT	For debugging	Branch	4	{J}
08A721E8	&EVENT	For debugging	Branch	5	{J}
08A72258	&EVENT	For debugging	Branch	6	{J}
08A7230C	&EVENT	For debugging	Branch	7	{J}
08A7239C	&EVENT	For debugging	Branch	8	{J}
08A721E8	&EVENT	For debugging	Branch	9	{J}
08A72258	&EVENT	For debugging	Branch	10	{J}
08A72408	&EVENT	For debugging	Branch	11	{J}
0804874C	Delete all saved data	{J}
0804C46C	Communication stadium	Battle end	{J}
08A0035C	&EVENT	Empty event	1	{U}
0859BC64	&EVENT	Tutorial	Inventory change	1	{U}
0859BCA8	&EVENT	Tutorial	Inventory change	2	{U}
0859BCF4	&EVENT	Tutorial	Inventory change	3	{U}
0859BD40	&EVENT	Tutorial	Inventory change	4	{U}
085A9F48	&EVENT	For debugging	Would you like to delete all saved data?	{U}
085AA2B4	&EVENT	Communication stadium	Do you surrender?	{U}
085AA2D8	&EVENT	Communication stadium	I can not give damage	Do you want to end it? 	{U}
089FFC30	&EVENT	skirmish beginning events	{U}
089FFE84	&EVENT	For debugging	Branch	1	{U}
089FFF14	&EVENT	For debugging	Branch	2	{U}
089FFF8C	&EVENT	For debugging	Branch	3	{U}
08A00034	&EVENT	For debugging	Branch	4	{U}
08A000A0	&EVENT	For debugging	Branch	5	{U}
08A0013C	&EVENT	For debugging	Branch	6	{U}
08A001AC	&EVENT	For debugging	Branch	7	{U}
08A00260	&EVENT	For debugging	Branch	8	{U}
08A000A0	&EVENT	For debugging	Branch	9	{U}
08A0013C	&EVENT	For debugging	Branch	10	{U}
08A002F0	&EVENT	For debugging	Branch	11	{U}
0804874C	Delete all saved data	{U}
0804B6CC	Communication stadium	Battle end	{U}
0809B600	Drawing item arrangement menu on attack advancement screen	{J}
08099328	Drawing item arrangement menu on attack advancement screen	{U}
0802CC54	FinishUpItemBattle	Register motion when using items	r1=ITEM ID	{U}
0802CB8C	FinishUpItemBattle	Register motion when using items	r1=ITEM ID	{J}
08013220	Number_Tile_Copy_Func	{J}
08013168	Number_Tile_Copy_Func	{U}
08A9534C	&OAMREGS_ARRAY	Unk OAMREGS	17	Light up the selection field of items in the Supply	{J}
08A19608	&OAMREGS_ARRAY	Unk OAMREGS	17	Light up the selection field of items in the Supply	{U}
08A95478	&OAMREGS_ARRAY	Unk OAMREGS	18	FE8JONLY	{J}
08A1A474	&HEADERTSA	Something's TSA	20	{U}
08A96CC4	&HEADERTSA	Something's TSA	20	{J}
//08A9C874	:08A9C997	UNUSED DATA	Tile Changes	1	unused	UNUSEDBIN	{J}
//08A9BEFC	:08A9C01F	UNUSED DATA	Tile Changes	2	unused	UNUSEDBIN	{J}
//08A1F3A8	:08A1F3BF	UNUSED DATA	Tile Changes	3	unused	UNUSEDBIN	{J}
//08A1F948	:08A1FA6B	UNUSED DATA	Tile Changes	1	unused	UNUSEDBIN	{U}
//08A1EFD0	:08A1F0F3	UNUSED DATA	Tile Changes	2	unused	UNUSEDBIN	{U}
//08A1F3A8	:08A1F3BF	UNUSED DATA	Tile Changes	3	unused	UNUSEDBIN	{U}
08A2C94C	&HEADERTSA	Something's TSA	21	unused	UNUSEDBIN	{U}
08AAAADC	&HEADERTSA	Something's TSA	21	unused	UNUSEDBIN	{J}
08A2F1D0	&OAMREGS_ARRAY	Unk OAMREGS	19	{U}
08AAFF34	&OAMREGS_ARRAY	Unk OAMREGS	19	{J}
085B7E74	&PALETTE	Something's palette	203	{U}
085B8734	&PALETTE	Something's palette	204	{U}
085B8FB0	&PALETTE2	Something's palette	205	{U}
085E2054	&PALETTE	Something's palette	203	{J}
085E2914	&PALETTE	Something's palette	204	{J}
085E3190	&PALETTE2	Something's palette	205	{J}
0822415C	:082243D3	Data related to m4a	1	MAYBE	FE8UONLY	{U}
0822440C	:08224463	Data related to m4a	2	MAYBE	{U}
082140BC	:0821411F	Data related to m4a	2	MAYBE	{J}
08577444	:0857747F	Data related to _localeconv_r	{J}
08587794	:085877CF	Data related to _localeconv_r	{U}
080B3240	RegistTSAAnime2	{J}
080AE7C4	RegistTSAAnime2	{U}
08012CFC	Register animation of destroying statue	{U}
08012DB4	Register animation of destroying statue	{J}
//088BC5E8	:088BC60F	Unit movement in unused unit placement	1	UNUSEDBIN	{U}
//088BCCC8	:088BCD03	Unused unit arrangement	1	UNUSEDBIN	{U}
//088C179C	:088C17D3	Unit movement in unused unit placement	2	UNUSEDBIN	{U}
//088C1D30	:088C1DCF	Unused unit arrangement	2	UNUSEDBIN	{U}
//088C9C40	:088C9CAF	Unit movement in unused unit placement	3	UNUSEDBIN	{U}
//088CA250	:088CA463	Unused unit arrangement	3	UNUSEDBIN	{U}
//088CA60C	:088CA63B	Unit movement in unused unit placement	4	UNUSEDBIN	{U}
//088CAEAC	:088CAF87	Unused unit arrangement	4	UNUSEDBIN	{U}
//088CB020	:088CB057	Unit movement in unused unit placement	5	UNUSEDBIN	{U}
//088CB574	:088CB613	Unused unit arrangement	5	UNUSEDBIN	{U}
//088D1448	:088D164F	Unused unit arrangement	6	enemy	UNUSEDBIN	{U}
//08910B48	:08910B6F	Unit movement in unused unit placement	1	UNUSEDBIN	{J}
//08911200	:0891123B	Unused unit arrangement	1	UNUSEDBIN	{J}
//08915C84	:08915CBB	Unit movement in unused unit placement	2	UNUSEDBIN	{J}
//08916218	:089162B7	Unused unit arrangement	2	UNUSEDBIN	{J}
//0891E0A8	:0891E117	Unit movement in unused unit placement	3	UNUSEDBIN	{J}
//0891E6A4	:0891E8D3	Unused unit arrangement	3	UNUSEDBIN	{J}
//0891EA60	:0891EA8F	Unit movement in unused unit placement	4	UNUSEDBIN	{J}
//0891F300	:0891F3DB	Unused unit arrangement	4	UNUSEDBIN	{J}
//0891F474	:0891F4AB	Unit movement in unused unit placement	5	UNUSEDBIN	{J}
//0891F9C8	:0891FA57	Unused unit arrangement	5	UNUSEDBIN	{J}
//0892589C	:08925AA3	Unused unit arrangement	6	enemy	UNUSEDBIN	{J}
087FF448	&PALETTE	Something's palette	206	{U}
088019F4	:08801A95	Mystery data	Battle screen relation	1	{U}
08801A96	:08801AD3	Mystery data	Battle screen relation	2	{U}
08801AD4	:08801B13	Mystery data	Battle screen relation	3	{U}
08801B14	:08801B53	Mystery data	Battle screen relation	4	{U}
08801B54	:08801C13	Mystery data	Battle screen relation	5	{U}
08801AAC	:08801AD3	Mystery data	Battle screen relation	Array	{U}
088539A0	&PALETTE	Something's palette	206	{J}
08855F4C	:08855FED	Mystery data	Battle screen relation	1	{J}
08855FEE	:0885602B	Mystery data	Battle screen relation	2	{J}
0885602C	:0885606B	Mystery data	Battle screen relation	3	{J}
0885606C	:088560AB	Mystery data	Battle screen relation	4	{J}
088560AC	:0885616B	Mystery data	Battle screen relation	5	{J}
08856004	:0885602B	Mystery data	Battle screen relation	Array	{J}
08A187A0	&OAMREGS_ARRAY	Unk OAMREGS	20	{U}
08A944E4	&OAMREGS_ARRAY	Unk OAMREGS	20	{J}
08A187F0	&OAMREGS_ARRAY	Unk OAMREGS	21	{U}
08A94534	&OAMREGS_ARRAY	Unk OAMREGS	21	{J}
08A9DA70	&OAMREGS_ARRAY	Unk OAMREGS	23	{J}
080144E0	NewPaletteAnimator_2	{J}
080144CC	NewPaletteAnimator_2	{U}
089B0820	&PALETTE	Something's palette	207	{U}
08A20EA8	&PALETTE	Something's palette	207	{J}
085AF0F0	&PALETTE	Something's palette	208	{U}
085AF110	&PALETTE	Something's palette	209	{U}
085AF130	&PALETTE	Something's palette	210	{U}
085AF150	&PALETTE	Something's palette	211	{U}
085D92D0	&PALETTE	Something's palette	208	{J}
085D92F0	&PALETTE	Something's palette	209	{J}
085D9310	&PALETTE	Something's palette	210	{J}
085D9330	&PALETTE	Something's palette	211	{J}
0805F660	MagicAnime	efxResireBG2_2	{U}
08060760	MagicAnime	efxResireBG2_2	{J}
08758D20	&SOUND_85COMMAND_POINTER_ARRAY	C85 1B	{U}
08758E00	&SOUND_85COMMAND_POINTER_ARRAY	C85 59	{U}
08758E8C	&SOUND_85COMMAND_POINTER_ARRAY	C85 5D	{U}
08758F18	&SOUND_85COMMAND_POINTER_ARRAY	C85 66	{U}
08758FA4	&SOUND_85COMMAND_POINTER_ARRAY	C85 67	{U}
087A9254	&SOUND_85COMMAND_POINTER_ARRAY	C85 1B	{J}
087A9334	&SOUND_85COMMAND_POINTER_ARRAY	C85 59	{J}
087A93C0	&SOUND_85COMMAND_POINTER_ARRAY	C85 5D	{J}
087A944C	&SOUND_85COMMAND_POINTER_ARRAY	C85 66	{J}
087A94D8	&SOUND_85COMMAND_POINTER_ARRAY	C85 67	{J}
08A25E50	&PALETTE	Something's palette	212	{U}
08A25E68	&PALETTE2	Something's palette	213	{U}
08A25E80	&PALETTE2	Something's palette	214	{U}
08A29438	&PALETTE4	Something's palette	215	{U}
08A3595C	&PALETTE7	Something's palette	216	{U}
08A36318	&PALETTE	Something's palette	217	{U}
08AA2DB8	&PALETTE	Something's palette	212	{J}
08AA2DD0	&PALETTE2	Something's palette	213	{J}
08AA2DE8	&PALETTE2	Something's palette	214	{J}
08AA70B4	&PALETTE4	Something's palette	215	{J}
08AB6788	&PALETTE7	Something's palette	216	{J}
08AB7144	&PALETTE	Something's palette	217	{J}
08A1FB08	&TEXTBATCH	&TEXTBATCH3	{U}
08A9CA34	&TEXTBATCH	&TEXTBATCH3	{J}
08A196BC	&TEXTBATCH	&TEXTBATCH4	{U}
08A188F8	&TEXTBATCH	&TEXTBATCH5	{U}
08A18614	&OAMREGS_ARRAY	Unk OAMREGS	20	{U}
08A94358	&OAMREGS_ARRAY	Unk OAMREGS	20	{J}
08A1D850	&PALETTE	Something's palette	218	{U}
08A1D870	&PALETTE	Something's palette	219	{U}
08A1D890	&PALETTE	Something's palette	220	{U}
08A1D8B0	&PALETTE	Something's palette	221	{U}
08667D90	&PALETTE	Something's palette	222	{U}
08A9A5A4	&PALETTE	Something's palette	218	{J}
08A9A5C4	&PALETTE	Something's palette	219	{J}
08A9A5E4	&PALETTE	Something's palette	220	{J}
08A9A604	&PALETTE	Something's palette	221	{J}
08694968	&PALETTE	Something's palette	222	{J}
08592170	&EVENT	Any event function	Mystery	13	{U}
089A37E8	&NAZO8_DATA_POINTER_ARRAY	Unknown8 table	1	{U}
089A3770	&NAZO8_DATA_POINTER_ARRAY	Unknown8 table	2	{U}
08678740	&PALETTE	Something's palette	223	unused	{U}
08678760	&PALETTE	Something's palette	224	unused	{U}
08678780	&PALETTE	Something's palette	225	unused	{U}
086787A0	&PALETTE	Something's palette	226	unused	{U}
086787C0	&PALETTE	Something's palette	227	unused	{U}
086787E0	&PALETTE	Something's palette	228	unused	{U}
08678800	&PALETTE	Something's palette	229	unused	{U}
08678820	&PALETTE	Something's palette	230	unused	{U}
08678840	&PALETTE	Something's palette	231	unused	{U}
08678860	&PALETTE	Something's palette	232	unused	{U}
08678880	&PALETTE	Something's palette	233	unused	{U}
086788A0	&PALETTE	Something's palette	234	unused	{U}
086788C0	&PALETTE	Something's palette	235	unused	{U}
086788E0	&PALETTE	Something's palette	236	unused	{U}
08678900	&PALETTE	Something's palette	237	unused	{U}
086A5318	&PALETTE	Something's palette	223	unused	{J}
086A5338	&PALETTE	Something's palette	224	unused	{J}
086A5358	&PALETTE	Something's palette	225	unused	{J}
086A5378	&PALETTE	Something's palette	226	unused	{J}
086A5398	&PALETTE	Something's palette	227	unused	{J}
086A53B8	&PALETTE	Something's palette	228	unused	{J}
086A53D8	&PALETTE	Something's palette	229	unused	{J}
086A53F8	&PALETTE	Something's palette	230	unused	{J}
086A5418	&PALETTE	Something's palette	231	unused	{J}
086A5438	&PALETTE	Something's palette	232	unused	{J}
086A5458	&PALETTE	Something's palette	233	unused	{J}
086A5478	&PALETTE	Something's palette	234	unused	{J}
086A5498	&PALETTE	Something's palette	235	unused	{J}
086A54B8	&PALETTE	Something's palette	236	unused	{J}
086A54D8	&PALETTE	Something's palette	237	unused	{J}
08678940	&PALETTE	Something's palette	238	unused	{U}
08678960	&PALETTE	Something's palette	239	unused	{U}
08678980	&PALETTE	Something's palette	240	unused	{U}
086789A0	&PALETTE	Something's palette	241	unused	{U}
086789C0	&PALETTE	Something's palette	242	unused	{U}
086789E0	&PALETTE	Something's palette	243	unused	{U}
08678A00	&PALETTE	Something's palette	244	unused	{U}
08678A20	&PALETTE	Something's palette	245	unused	{U}
08678A40	&PALETTE	Something's palette	246	unused	{U}
08678A60	&PALETTE	Something's palette	247	unused	{U}
08678A80	&PALETTE	Something's palette	248	unused	{U}
08678AA0	&PALETTE	Something's palette	249	unused	{U}
08678AC0	&PALETTE	Something's palette	250	unused	{U}
08678AE0	&PALETTE	Something's palette	251	unused	{U}
08678B00	&PALETTE	Something's palette	252	unused	{U}
08678B20	&PALETTE16	Something's palette	253	{U}
08678D20	&LZ77	Image of something	1	unused	UNUSEDBIN		{U}
//086792A4	:08679B03	Unknown	Unused data	1	UNUSEDBIN		{U}
//0867EA48	:0867EE03	Unknown	Unused data	2	UNUSEDBIN		{U}
0868CC30	&PALETTE	Something's palette	254	Background color	{U}
0868CC50	&PALETTE	Something's palette	255	Background color	{U}
0868CC70	&PALETTE	Something's palette	256	Background color	{U}
0868CC90	&PALETTE	Something's palette	257	Background color	{U}
0868CCB0	&PALETTE	Something's palette	258	Background color	{U}
0868CCD0	&PALETTE	Something's palette	259	Background color	{U}
0868CCF0	&PALETTE	Something's palette	260	Background color	{U}
0868CD10	&PALETTE	Something's palette	261	Background color	{U}
0868CD30	&PALETTE	Something's palette	262	Background color	{U}
086A5518	&PALETTE	Something's palette	238	unused	{J}
086A5538	&PALETTE	Something's palette	239	unused	{J}
086A5558	&PALETTE	Something's palette	240	unused	{J}
086A5578	&PALETTE	Something's palette	241	unused	{J}
086A5598	&PALETTE	Something's palette	242	unused	{J}
086A55B8	&PALETTE	Something's palette	243	unused	{J}
086A55D8	&PALETTE	Something's palette	244	unused	{J}
086A55F8	&PALETTE	Something's palette	245	unused	{J}
086A5618	&PALETTE	Something's palette	246	unused	{J}
086A5638	&PALETTE	Something's palette	247	unused	{J}
086A5658	&PALETTE	Something's palette	248	unused	{J}
086A5678	&PALETTE	Something's palette	249	unused	{J}
086A5698	&PALETTE	Something's palette	250	unused	{J}
086A56B8	&PALETTE	Something's palette	251	unused	{J}
086A56D8	&PALETTE	Something's palette	252	unused	{J}
086A56F8	&PALETTE16	Something's palette	253	{J}
086A58F8	&LZ77	Image of something	1	unused	{J}
086A5E7C	:086A66DB	Unknown	Unused data	1	{J}
086AB620	:086AB9DB	Unknown	Unused data	2	{J}
086B9808	&PALETTE	Something's palette	254	Background color	{J}
086B9828	&PALETTE	Something's palette	255	Background color	{J}
086B9848	&PALETTE	Something's palette	256	Background color	{J}
086B9868	&PALETTE	Something's palette	257	Background color	{J}
086B9888	&PALETTE	Something's palette	258	Background color	{J}
086B98A8	&PALETTE	Something's palette	259	Background color	{J}
086B98C8	&PALETTE	Something's palette	260	Background color	{J}
086B98E8	&PALETTE	Something's palette	261	Background color	{J}
086B9908	&PALETTE	Something's palette	262	Background color	{J}
085924F8	&PROC	Unused PROC	1	{U}
08592518	&PROC	Unused PROC	2	{U}
085BA274	&PROC	Unused PROC	1	{J}
085BA294	&PROC	Unused PROC	2	{J}
08599FB4	&ASM_POINTER_ARRAY	UnLZ77Decompress_Inner	{U}
085C2438	&ASM_POINTER_ARRAY	UnLZ77Decompress_Inner	{J}
08599F94	&PALETTE	Something's palette	263	{U}
085C1D10	&PALETTE	Something's palette	263	{U}
0859A598	&TEXTBATCH	&TEXTBATCH6	{U}
085C2A18	&TEXTBATCH	&TEXTBATCH6	{J}
08A0A9F8	&HEADERTSA	Something's TSA	22	{U}
08A7DCB8	&HEADERTSA	Something's TSA	22	{J}
08A20B08	&OAMREGS_ARRAY	Unk OAMREGS	24	{U}
085D0840	&PALETTE	Something's palette	263	unused	{U}
085D0860	&PALETTE	Something's palette	264	unused	{U}
085D0880	&PALETTE	Something's palette	265	unused	{U}
085D08A0	&PALETTE	Something's palette	266	unused	{U}
085D08C0	&PALETTE	Something's palette	267	unused	{U}
085D08E0	&PALETTE	Something's palette	268	unused	{U}
085D0900	&PALETTE	Something's palette	269	unused	{U}
085D0920	&PALETTE	Something's palette	270	unused	{U}
085D0940	&PALETTE	Something's palette	271	unused	{U}
085D0960	&PALETTE	Something's palette	272	unused	{U}
085D0980	&PALETTE	Something's palette	273	unused	{U}
085D09A0	&PALETTE	Something's palette	274	unused	{U}
085D09C0	&PALETTE	Something's palette	275	unused	{U}
085D09E0	&PALETTE	Something's palette	276	unused	{U}
085D0A00	&PALETTE	Something's palette	277	unused	{U}
085DBB70	&PALETTE	Something's palette	278	{U}
085D7298	:085D7397	ExcaliburData	details unknown	{U}
085D7030	:085D70EF	LunaData	details unknown	{U}
085D88AC	:085D895F	CrimsonEyeData	details unknown	{U}
085D9154	:085D9243	SRankWeaponEffect	details unknown	{U}
085D9430	&ASM_POINTER_ARRAY	ROMMagicTable	{U}
//089EDE80	:089EDE97	UNUSED DATA	Trap	unused	UNUSEDBIN	{U}
085FAA70	&PALETTE	Something's palette	263	unused	{J}
085FAA90	&PALETTE	Something's palette	264	unused	{J}
085FAAB0	&PALETTE	Something's palette	265	unused	{J}
085FAAD0	&PALETTE	Something's palette	266	unused	{J}
085FAAF0	&PALETTE	Something's palette	267	unused	{J}
085FAB10	&PALETTE	Something's palette	268	unused	{J}
085FAB30	&PALETTE	Something's palette	269	unused	{J}
085FAB50	&PALETTE	Something's palette	270	unused	{J}
085FAB70	&PALETTE	Something's palette	271	unused	{J}
085FAB90	&PALETTE	Something's palette	272	unused	{J}
085FABB0	&PALETTE	Something's palette	273	unused	{J}
085FABD0	&PALETTE	Something's palette	274	unused	{J}
085FABF0	&PALETTE	Something's palette	275	unused	{J}
085FAC10	&PALETTE	Something's palette	276	unused	{J}
085FAC30	&PALETTE	Something's palette	277	unused	{J}
08601530	:0860162F	ExcaliburData	details unknown	{J}
086012C8	:08601387	LunaData	details unknown	{J}
08602EFC	:08602FAF	CrimsonEyeData	details unknown	{J}
086037A4	:08603893	SRankWeaponEffect	details unknown	{J}
08603B58	&ASM_POINTER_ARRAY	ROMMagicTable	{J}
//08A5FFB8	:08A5FFCF	UNUSED DATA	Trap	unused	UNUSEDBIN	{J}
08A59A58	&PALETTE	Something's palette	279	{J}
08A59A78	&PALETTE	Something's palette	280	{J}
08A59A98	&PALETTE	Something's palette	281	{J}
08A59AB8	&PALETTE	Something's palette	282	{J}
08A59AD8	&LZ77	Image of GameOver	{J}
08A59E88	&HEADERTSA	Something's TSA	23	{J}
08A736F0	&PROC	Unused PROC	3	{J}
08A01638	&PROC	Unused PROC	3	{U}
08A07AB8	&PALETTE	Something's palette	283	{U}
08A07AD8	&PALETTE	Something's palette	284	{U}
08A07AF8	&PALETTE	Something's palette	285	{U}
08A07B18	&PALETTE	Something's palette	286	{U}
08A07B38	&PALETTE	Something's palette	287	{U}
08A07B58	&PALETTE	Something's palette	288	{U}
08A07B78	&PALETTE	Something's palette	289	{U}
08A07B98	&PALETTE	Something's palette	290	{U}
08A07BB8	&PALETTE	Something's palette	291	{U}
08A07BD8	&PALETTE	Something's palette	292	{U}
08A07BF8	&PALETTE	Something's palette	293	{U}
08A07C18	&PALETTE	Something's palette	294	{U}
08A07C38	&PALETTE	Something's palette	295	{U}
08A07C58	&PALETTE	Something's palette	296	{U}
08A07C78	&PALETTE	Something's palette	297	{U}
08A07C98	&PALETTE	Something's palette	298	{U}
08A07CB8	&PALETTE	Something's palette	299	{U}
08A07CD8	&PALETTE	Something's palette	300	{U}
08A07CF8	&PALETTE	Something's palette	301	{U}
08A07D18	&PALETTE	Something's palette	302	{U}
08A07D38	&PALETTE	Something's palette	303	{U}
08A07D58	&PALETTE	Something's palette	304	{U}
08A07D78	&PALETTE	Something's palette	305	{U}
08A07D98	&PALETTE	Something's palette	306	{U}
08A07DB8	&PALETTE	Something's palette	307	{U}
08A79B90	&PALETTE	Something's palette	284	{J}
08A79BB0	&PALETTE	Something's palette	285	{J}
08A79BD0	&PALETTE	Something's palette	286	{J}
08A79BF0	&PALETTE	Something's palette	287	{J}
08A79C10	&PALETTE	Something's palette	288	{J}
08A79C30	&PALETTE	Something's palette	289	{J}
08A79C50	&PALETTE	Something's palette	290	{J}
08A79C70	&PALETTE	Something's palette	291	{J}
08A79C90	&PALETTE	Something's palette	292	{J}
08A79CB0	&PALETTE	Something's palette	293	{J}
08A79CD0	&PALETTE	Something's palette	294	{J}
08A79CF0	&PALETTE	Something's palette	295	{J}
08A79D10	&PALETTE	Something's palette	296	{J}
08A79D30	&PALETTE	Something's palette	297	{J}
08A79D50	&PALETTE	Something's palette	298	{J}
08A79D70	&PALETTE	Something's palette	299	{J}
08A79D90	&PALETTE	Something's palette	300	{J}
08A79DB0	&PALETTE	Something's palette	301	{J}
08A79DD0	&PALETTE	Something's palette	302	{J}
08A79DF0	&PALETTE	Something's palette	303	{J}
08A79E10	&PALETTE	Something's palette	304	{J}
08A79E30	&PALETTE	Something's palette	305	{J}
08A79E50	&PALETTE	Something's palette	306	{J}
08A79E70	&PALETTE	Something's palette	307	{J}
089FFF08	&EVENT	SVAL 0x2,0x07	{U}
089FFF80	&EVENT	SVAL 0x2,0x0B	{U}
08A00028	&EVENT	SVAL 0x2,0x0D	{U}
08A00094	&EVENT	SVAL 0x2,0x11	{U}
08A00130	&EVENT	SVAL 0x2,0x12	{U}
08A001A0	&EVENT	SVAL 0x2,0x14	{U}
08A00254	&EVENT	SVAL 0x2,0x1A	{U}
08A002E4	&EVENT	SVAL 0x2,0x39	{U}
08A00350	&EVENT	SVAL 0x2,0x4	{U}
089F1194	&EVENT	Events called from tutorial Chapter 2	2	{U}
089F11B8	&EVENT	Events called from tutorial Chapter 2	3	{U}
089F0770	&EVENT	Events called from tutorial 1 chapter	3	{U}
089AF910	&PALETTE	Something's palette	308	{U}
089AF930	&PALETTE	Something's palette	309	{U}
08AA1190	&PALETTE	Something's palette	310	{U}
08A98DEC	&PALETTE	Something's palette	311	{U}
08A98E0C	&PALETTE	Something's palette	312	{U}
08A98E2C	&PALETTE	Something's palette	313	{U}
08A98E4C	&PALETTE	Something's palette	314	{U}
08A98E6C	&PALETTE	Something's palette	315	{U}
085ADC08	&PALETTE	Something's palette	316	{U}
085ADC28	&PALETTE	Something's palette	317	{U}
085ADC68	&PALETTE	Something's palette	318	{U}
085ADC88	&PALETTE	Something's palette	319	{U}
085ADCA8	&PALETTE	Something's palette	320	{U}
085ADC68	&PALETTE	Something's palette	321	{U}
085ADC88	&PALETTE	Something's palette	322	{U}
085ADCA8	&PALETTE	Something's palette	323	{U}
085ADCE8	&PALETTE	Something's palette	325	{U}
085ADD08	&PALETTE	Something's palette	326	{U}
085ADD28	&PALETTE	Something's palette	327	{U}
085ADD48	&PALETTE	Something's palette	328	{U}
085ADD68	&PALETTE	Something's palette	329	{U}
085ADD88	&PALETTE	Something's palette	330	{U}
085ADE28	&PALETTE	Something's palette	331	{U}
085B542C	&PALETTE	Something's palette	331	{U}
085B62E4	&PALETTE	Something's palette	332	{U}
085B6304	&PALETTE	Something's palette	333	{U}
085B6324	&PALETTE	Something's palette	334	{U}
085B6344	&PALETTE	Something's palette	335	{U}
085B9264	&PALETTE	Something's palette	336	{U}
085B9284	&PALETTE	Something's palette	337	{U}
085B92A4	&PALETTE	Something's palette	338	{U}
085BA2E0	&PALETTE	Something's palette	339	{U}
085BA300	&PALETTE	Something's palette	340	{U}
085BA320	&PALETTE	Something's palette	341	{U}
085F369C	&PALETTE	Something's palette	342	{U}
085F371C	&PALETTE	Something's palette	343	{U}
085F373C	&PALETTE	Something's palette	344	{U}
085F375C	&PALETTE	Something's palette	345	{U}
085F377C	&PALETTE	Something's palette	346	{U}
085F379C	&PALETTE	Something's palette	347	{U}
085F37BC	&PALETTE	Something's palette	348	{U}
085F37DC	&PALETTE	Something's palette	349	{U}
085F37FC	&PALETTE	Something's palette	350	{U}
085F381C	&PALETTE	Something's palette	351	{U}
085F383C	&PALETTE	Something's palette	352	{U}
085F385C	&PALETTE	Something's palette	353	{U}
08608858	&PALETTE	Something's palette	354	{U}
08608878	&PALETTE	Something's palette	355	{U}
08652574	&PALETTE	Something's palette	356	{U}
08652594	&PALETTE	Something's palette	357	{U}
086525A4	&PALETTE	Something's palette	358	{U}
086525C4	&PALETTE	Something's palette	359	{U}
086525E4	&PALETTE	Something's palette	360	{U}
08652614	&PALETTE	Something's palette	361	{U}
08652634	&PALETTE	Something's palette	362	{U}
08652654	&PALETTE	Something's palette	363	{U}
08652674	&PALETTE	Something's palette	364	{U}
08652694	&PALETTE	Something's palette	365	{U}
086526A4	&PALETTE	Something's palette	366	{U}
086526C4	&PALETTE	Something's palette	367	{U}
086526E4	&PALETTE	Something's palette	368	{U}
08652714	&PALETTE	Something's palette	369	{U}
08729FDC	&PALETTE	Something's palette	370	{U}
08729FFC	&PALETTE	Something's palette	371	{U}
0872A01C	&PALETTE	Something's palette	372	{U}
0872A03C	&PALETTE	Something's palette	373	{U}
0872A05C	&PALETTE	Something's palette	374	{U}
0872A07C	&PALETTE	Something's palette	375	{U}
0872A09C	&PALETTE	Something's palette	376	{U}
0872A0BC	&PALETTE8	Something's palette	377	{U}
0872A0DC	&PALETTE	Something's palette	378	{U}
0872A0FC	&PALETTE	Something's palette	379	{U}
0872A11C	&PALETTE	Something's palette	380	{U}
0872A13C	&PALETTE	Something's palette	381	{U}
0872A15C	&PALETTE	Something's palette	382	{U}
0872A17C	&PALETTE	Something's palette	383	{U}
0872A19C	&PALETTE	Something's palette	384	{U}
0872E64C	&PALETTE	Something's palette	385	{U}
0872E66C	&PALETTE	Something's palette	386	{U}
0872E68C	&PALETTE	Something's palette	387	{U}
0872E6AC	&PALETTE	Something's palette	388	{U}
0872E6CC	&PALETTE	Something's palette	389	{U}
0872E6EC	&PALETTE	Something's palette	390	{U}
0872E70C	&PALETTE	Something's palette	391	{U}
0872E72C	&PALETTE	Something's palette	392	{U}
0872E74C	&PALETTE	Something's palette	393	{U}
0872E76C	&PALETTE	Something's palette	394	{U}
0872E78C	&PALETTE	Something's palette	395	{U}
0872E7AC	&PALETTE	Something's palette	396	{U}
0872E7CC	&PALETTE	Something's palette	397	{U}
0872FA04	&PALETTE	Something's palette	398	{U}
0872FA24	&PALETTE	Something's palette	399	{U}
0872FA44	&PALETTE	Something's palette	400	{U}
0872FA64	&PALETTE	Something's palette	401	{U}
087302C4	&PALETTE	Something's palette	402	{U}
087302E4	&PALETTE	Something's palette	403	{U}
08730304	&PALETTE	Something's palette	404	{U}
08731368	&PALETTE	Something's palette	405	{U}
08731388	&PALETTE	Something's palette	406	{U}
087313A8	&PALETTE	Something's palette	407	{U}
08732248	&PALETTE	Something's palette	408	{U}
08732268	&PALETTE	Something's palette	409	{U}
08732288	&PALETTE	Something's palette	410	{U}
087322A8	&PALETTE	Something's palette	411	{U}
087322C8	&PALETTE	Something's palette	412	{U}
087322E8	&PALETTE	Something's palette	413	{U}
08732308	&PALETTE	Something's palette	414	{U}
08732328	&PALETTE	Something's palette	415	{U}
08732348	&PALETTE	Something's palette	416	{U}
08754890	&PALETTE	Something's palette	417	{U}
087548B0	&PALETTE	Something's palette	418	{U}
087548D0	&PALETTE	Something's palette	419	{U}
087548F0	&PALETTE	Something's palette	420	{U}
089B2728	&PALETTE	Something's palette	421	{U}
08A0AAEC	&PALETTE	Something's palette	422	{U}
08A1BD20	&PALETTE	Something's palette	423	{U}
08A1BD80	&PALETTE	Something's palette	424	{U}
0859EF80	&PALETTE	Something's palette	425	{U}
0859EFA0	&PALETTE	Something's palette	426	{U}
085DD734	&PALETTE	Something's palette	427	{U}
085DD754	&PALETTE	Something's palette	428	{U}
085DD774	&PALETTE	Something's palette	429	{U}
085DD794	&PALETTE	Something's palette	430	{U}
085DD7B4	&PALETTE	Something's palette	431	{U}
085DD7D4	&PALETTE	Something's palette	432	{U}
085DD7F4	&PALETTE	Something's palette	433	{U}
085DD814	&PALETTE	Something's palette	434	{U}
085DD834	&PALETTE	Something's palette	435	{U}
085DD854	&PALETTE	Something's palette	436	{U}
085DD874	&PALETTE	Something's palette	437	{U}
085DD894	&PALETTE	Something's palette	438	{U}
085DD8B4	&PALETTE	Something's palette	439	{U}
085DD8D4	&PALETTE	Something's palette	440	{U}
085DD8F4	&PALETTE	Something's palette	441	{U}
085DD914	&PALETTE	Something's palette	442	{U}
085DD934	&PALETTE	Something's palette	443	{U}
085DD954	&PALETTE	Something's palette	444	{U}
085DD974	&PALETTE	Something's palette	445	{U}
085DD994	&PALETTE	Something's palette	446	{U}
085DD9B4	&PALETTE	Something's palette	447	{U}
085DD9D4	&PALETTE	Something's palette	448	{U}
085DD9F4	&PALETTE	Something's palette	449	{U}
085DDA14	&PALETTE	Something's palette	450	{U}
085DDA34	&PALETTE	Something's palette	451	{U}
085DDA54	&PALETTE	Something's palette	452	{U}
085DDA74	&PALETTE	Something's palette	453	{U}
085DDA94	&PALETTE	Something's palette	454	{U}
085DDAB4	&PALETTE	Something's palette	455	{U}
085DDAD4	&PALETTE	Something's palette	456	{U}
085F36BC	&PALETTE	Something's palette	457	{U}
085F36DC	&PALETTE	Something's palette	458	{U}
085F36FC	&PALETTE	Something's palette	459	{U}
087FF468	&PALETTE	Something's palette	460	{U}
08803CB0	&PALETTE	Something's palette	461	{U}
089A2900	&PALETTE	Something's palette	462	{U}
089AD648	&PALETTE	Something's palette	463	{U}
089AD668	&PALETTE	Something's palette	464	{U}
089AD688	&PALETTE	Something's palette	465	{U}
089AD6A8	&PALETTE	Something's palette	466	{U}
089ADD2C	&PALETTE	Something's palette	467	{U}
08A1B174	&PALETTE	Something's palette	468	{U}
08A30780	&PALETTE	Something's palette	469	{U}
08A307A0	&PALETTE	Something's palette	470	{U}
08A307C0	&PALETTE	Something's palette	471	{U}
08A307E0	&PALETTE	Something's palette	472	{U}
08B18EF4	&PALETTE	Something's palette	473	{U}
08B18F14	&PALETTE	Something's palette	474	{U}
08A40AF4	&PALETTE	Something's palette	475	{U}
08AADB88	&PALETTE	Something's palette	476	{U}
086BC804	&PALETTE	Something's palette	502	{U}
086BC844	&PALETTE	Something's palette	503	{U}
086BC864	&PALETTE	Something's palette	504	{U}
085BA340	&LZ77	Image of something	2	{U}
085BA7B4	&LZ77	Image of something	3	{U}
085BAC54	&LZ77	Image of something	4	{U}
08A1FF98	&PALETTE	Something's palette	308	{J}
08A1FFB8	&PALETTE	Something's palette	309	{J}
08B2697C	&PALETTE	Something's palette	310	{J}
08B1E67C	&PALETTE	Something's palette	311	{J}
08B1E69C	&PALETTE	Something's palette	312	{J}
08B1E71C	&PALETTE	Something's palette	313	{J}
085D7EA8	&PALETTE	Something's palette	316	{J}
085D7EC8	&PALETTE	Something's palette	317	{J}
085D7F08	&PALETTE	Something's palette	318	{J}
085D7F28	&PALETTE	Something's palette	319	{J}
085D7F48	&PALETTE	Something's palette	320	{J}
085D7F08	&PALETTE	Something's palette	321	{J}
085D7F28	&PALETTE	Something's palette	322	{J}
085D7F48	&PALETTE	Something's palette	323	{J}
085D7F88	&PALETTE	Something's palette	325	{J}
085D7FA8	&PALETTE	Something's palette	326	{J}
085D7FC8	&PALETTE	Something's palette	327	{J}
085D7FE8	&PALETTE	Something's palette	328	{J}
085D8008	&PALETTE	Something's palette	329	{J}
085D8028	&PALETTE	Something's palette	330	{J}
085D80C8	&PALETTE	Something's palette	331	{J}
085DF60C	&PALETTE	Something's palette	331	{J}
085E04E4	&PALETTE	Something's palette	333	{J}
085E0504	&PALETTE	Something's palette	334	{J}
085E0524	&PALETTE	Something's palette	335	{J}
085E3444	&PALETTE	Something's palette	336	{J}
085E3464	&PALETTE	Something's palette	337	{J}
085E3484	&PALETTE	Something's palette	338	{J}
085E4510	&PALETTE	Something's palette	339	{J}
085E4530	&PALETTE	Something's palette	340	{J}
085E4550	&PALETTE	Something's palette	341	{J}
08620274	&PALETTE	Something's palette	342	{J}
086202F4	&PALETTE	Something's palette	343	{J}
08620314	&PALETTE	Something's palette	344	{J}
08620334	&PALETTE	Something's palette	345	{J}
08620354	&PALETTE	Something's palette	346	{J}
08620374	&PALETTE	Something's palette	347	{J}
08620394	&PALETTE	Something's palette	348	{J}
086203B4	&PALETTE	Something's palette	349	{J}
086203D4	&PALETTE	Something's palette	350	{J}
086203F4	&PALETTE	Something's palette	351	{J}
08620414	&PALETTE	Something's palette	352	{J}
08620434	&PALETTE	Something's palette	353	{J}
08635430	&PALETTE	Something's palette	354	{J}
08635450	&PALETTE	Something's palette	355	{J}
0867F14C	&PALETTE	Something's palette	371	{J}
0867F16C	&PALETTE	Something's palette	372	{J}
0867F18C	&PALETTE	Something's palette	373	{J}
0867F1AC	&PALETTE	Something's palette	374	{J}
0867F1CC	&PALETTE	Something's palette	375	{J}
0867F1EC	&PALETTE	Something's palette	376	{J}
0867F20C	&PALETTE8	Something's palette	377	{J}
08756CB4	&PALETTE	Something's palette	378	{J}
08756CD4	&PALETTE	Something's palette	379	{J}
08756CF4	&PALETTE	Something's palette	380	{J}
08756D14	&PALETTE	Something's palette	381	{J}
08756D34	&PALETTE	Something's palette	382	{J}
08756D54	&PALETTE	Something's palette	383	{J}
08756D74	&PALETTE	Something's palette	384	{J}
0875B224	&PALETTE	Something's palette	385	{J}
0875B244	&PALETTE	Something's palette	386	{J}
0875B264	&PALETTE	Something's palette	387	{J}
0875B284	&PALETTE	Something's palette	388	{J}
0875B2A4	&PALETTE	Something's palette	389	{J}
0875B2C4	&PALETTE	Something's palette	390	{J}
0875B2E4	&PALETTE	Something's palette	391	{J}
0875B304	&PALETTE	Something's palette	392	{J}
0875B324	&PALETTE	Something's palette	393	{J}
0875B344	&PALETTE	Something's palette	394	{J}
0875B364	&PALETTE	Something's palette	395	{J}
0875B384	&PALETTE	Something's palette	396	{J}
0875B3A4	&PALETTE	Something's palette	397	{J}
0875C5DC	&PALETTE	Something's palette	398	{J}
0875C5FC	&PALETTE	Something's palette	399	{J}
0875C61C	&PALETTE	Something's palette	400	{J}
0875C63C	&PALETTE	Something's palette	401	{J}
0875CE9C	&PALETTE	Something's palette	402	{J}
0875CEBC	&PALETTE	Something's palette	403	{J}
0875CEDC	&PALETTE	Something's palette	404	{J}
08760324	&PALETTE	Something's palette	405	{J}
08760344	&PALETTE	Something's palette	406	{J}
08760364	&PALETTE	Something's palette	407	{J}
08761204	&PALETTE	Something's palette	408	{J}
08761224	&PALETTE	Something's palette	409	{J}
08761244	&PALETTE	Something's palette	410	{J}
08761264	&PALETTE	Something's palette	411	{J}
08761284	&PALETTE	Something's palette	412	{J}
087612A4	&PALETTE	Something's palette	413	{J}
087612C4	&PALETTE	Something's palette	414	{J}
087612E4	&PALETTE	Something's palette	415	{J}
08761304	&PALETTE	Something's palette	416	{J}
087A4DC4	&PALETTE	Something's palette	417	{J}
087A4DE4	&PALETTE	Something's palette	418	{J}
087A4E04	&PALETTE	Something's palette	419	{J}
087A4E24	&PALETTE	Something's palette	420	{J}
08A22DB0	&PALETTE	Something's palette	421	{J}
08A7DDAC	&PALETTE	Something's palette	422	{J}
08A987B8	&PALETTE	Something's palette	423	{J}
08A98818	&PALETTE	Something's palette	424	{J}
085C74A0	&PALETTE	Something's palette	425	{J}
085C74C0	&PALETTE	Something's palette	426	{J}
08607E5C	&PALETTE	Something's palette	427	{J}
08607E7C	&PALETTE	Something's palette	428	{J}
08607E9C	&PALETTE	Something's palette	429	{J}
08607EBC	&PALETTE	Something's palette	430	{J}
08607EDC	&PALETTE	Something's palette	431	{J}
08607EFC	&PALETTE	Something's palette	432	{J}
08607F1C	&PALETTE	Something's palette	433	{J}
08607F3C	&PALETTE	Something's palette	434	{J}
08607F5C	&PALETTE	Something's palette	435	{J}
08607F7C	&PALETTE	Something's palette	436	{J}
08607F9C	&PALETTE	Something's palette	437	{J}
08607FBC	&PALETTE	Something's palette	438	{J}
08607FDC	&PALETTE	Something's palette	439	{J}
08607FFC	&PALETTE	Something's palette	440	{J}
0860801C	&PALETTE	Something's palette	441	{J}
0860803C	&PALETTE	Something's palette	442	{J}
0860805C	&PALETTE	Something's palette	443	{J}
0860807C	&PALETTE	Something's palette	444	{J}
0860809C	&PALETTE	Something's palette	445	{J}
086080BC	&PALETTE	Something's palette	446	{J}
086080DC	&PALETTE	Something's palette	447	{J}
086080FC	&PALETTE	Something's palette	448	{J}
0860811C	&PALETTE	Something's palette	449	{J}
0860813C	&PALETTE	Something's palette	450	{J}
0860815C	&PALETTE	Something's palette	451	{J}
0860817C	&PALETTE	Something's palette	452	{J}
0860819C	&PALETTE	Something's palette	453	{J}
086081BC	&PALETTE	Something's palette	454	{J}
086081DC	&PALETTE	Something's palette	455	{J}
086081FC	&PALETTE	Something's palette	456	{J}
08620294	&PALETTE	Something's palette	457	{J}
086202B4	&PALETTE	Something's palette	458	{J}
086202D4	&PALETTE	Something's palette	459	{J}
088539C0	&PALETTE	Something's palette	460	{J}
08858208	&PALETTE	Something's palette	461	{J}
08A12F88	&PALETTE	Something's palette	462	{J}
08A1DCD0	&PALETTE	Something's palette	463	{J}
08A1DCF0	&PALETTE	Something's palette	464	{J}
08A1DD10	&PALETTE	Something's palette	465	{J}
08A1DD30	&PALETTE	Something's palette	466	{J}
08A1E3B4	&PALETTE	Something's palette	467	{J}
08AB15AC	&PALETTE	Something's palette	469	{J}
08AB15CC	&PALETTE	Something's palette	470	{J}
08AB15EC	&PALETTE	Something's palette	471	{J}
08AB160C	&PALETTE	Something's palette	472	{J}
08BB1F48	&PALETTE	Something's palette	473	{J}
08BB1F68	&PALETTE	Something's palette	474	{J}
08AC6CB8	&PALETTE	Something's palette	475	{J}
08B467AC	&PALETTE	Something's palette	476	{J}
08AA51BC	&PALETTE	Something's palette	477	{J}
08AA51DC	&PALETTE	Something's palette	478	{J}
08AA51FC	&PALETTE	Something's palette	479	{J}
08AA521C	&PALETTE	Something's palette	480	{J}
08AA523C	&PALETTE	Something's palette	481	{J}
08AA525C	&PALETTE	Something's palette	482	{J}
08AA9E98	&PALETTE	Something's palette	483	{J}
08AA9EB8	&PALETTE	Something's palette	484	{J}
08AA9ED8	&PALETTE	Something's palette	485	{J}
08AAB440	&PALETTE3	Something's palette	486	{J}
08AB8084	&PALETTE	Something's palette	487	{J}
08B1E6BC	&PALETTE	Something's palette	488	{J}
08B1E6DC	&PALETTE	Something's palette	489	{J}
08B1E6FC	&PALETTE	Something's palette	490	{J}
08BB05BC	&PALETTE	Something's palette	491	{J}
08BB05DC	&PALETTE	Something's palette	492	{J}
08BB05FC	&PALETTE	Something's palette	493	{J}
08BB061C	&PALETTE	Something's palette	494	{J}
08BB063C	&PALETTE	Something's palette	495	{J}
08BB065C	&PALETTE	Something's palette	496	{J}
08BB067C	&PALETTE	Something's palette	497	{J}
08BB069C	&PALETTE	Something's palette	498	{J}
08BB06BC	&PALETTE	Something's palette	499	{J}
08BB06DC	&PALETTE	Something's palette	500	{J}
08BB06FC	&PALETTE	Something's palette	501	{J}
086E93DC	&PALETTE	Something's palette	502	{J}
086E941C	&PALETTE	Something's palette	503	{J}
086E943C	&PALETTE	Something's palette	504	{J}
085E4570	&LZ77	Image of something	2	{J}
085E49E4	&LZ77	Image of something	3	{J}
085E4570	&LZ77	Image of something	4	{J}
08A13E70	&NAZO8_DATA_POINTER_ARRAY	Unknown8 table	1	{J}
08A13DF8	&NAZO8_DATA_POINTER_ARRAY	Unknown8 table	2	{J}
085A7F94	&ASM_POINTER_ARRAY	Unknown1 Script Function	{U}
085D1E9C	&ASM_POINTER_ARRAY	Unknown1 Script Function	{J}
087A5800	:087A582D	Unknown data	OAMSP Maybe	1	{U}
087A5A1C	:087A5A49	Unknown data	OAMSP Maybe	2	{U}
087A64F8	:087A6669	Unknown data	OAMSP Maybe	3	{U}
087A6684	:087A6DE3	Unknown data	OAMSP Maybe	4	{U}
087A6F78	:087A725F	Unknown data	OAMSP Maybe	5	{U}
0868454C	:08684907	Unknown data	OAMSP Maybe	6	{U}
0868B254	:0868BBED	Unknown data	OAMSP Maybe	7	{U}
0868FD38	:0868FEB5	Unknown data	OAMSP Maybe	8	{U}
087F9D58	:087F9D85	Unknown data	OAMSP Maybe	1	{J}
087F9F74	:087F9FA1	Unknown data	OAMSP Maybe	2	{J}
087FAA50	:087FABC1	Unknown data	OAMSP Maybe	3	{J}
087FABDC	:087FB33B	Unknown data	OAMSP Maybe	4	{J}
087FB4D0	:087FB7B7	Unknown data	OAMSP Maybe	5	{J}
085AABF0	:085AAE0B	Debug menu	Direct Attack / Indirect Attack	Maybe	{U}
080DA2D8	&CSTRING	Debug menu string	{U}
080DA2E4	&CSTRING	Debug menu string	{U}
085D4C94	:085D4EAF	Debug menu	Direct Attack / Indirect Attack	Maybe	{J}
080DF2C4	&CSTRING	Debug menu string	{J}
080DF2D0	&CSTRING	Debug menu string	{J}
080D9D34	&TEXTBATCH	NetworkMessage	{U}
080DED10	&TEXTBATCH	NetworkMessage	{J}
08045CEC	ShowNetworkMessage	{U}
08045C8C	ShowNetworkMessage	{J}
080DC760	&NAZO8_DATA_POINTER_ARRAY	Unknown8 table	3	{J}
080D7AB4	&NAZO8_DATA_POINTER_ARRAY	Unknown8 table	3	{U}
081F6D2C	&TEXTBATCH	Trainee CC serif	{J}
0820707C	&TEXTBATCH	Trainee CC serif	{U}
080D779C	&CSTRING	Hex	{U}
080D74D0	&CSTRING	Build time	{U}
080D74EC	&CSTRING	Release year	{U}
080D74F4	:080D7503	Mysterious data 16 bytes	{U}
080D7504	:080D751B	Mysterious data 18 bytes	{U}
080DC3DC	&CSTRING	Hex	{J}
080DC110	&CSTRING	Build time	{J}
080DC12C	&CSTRING	Release year	{J}
080DC134	:080DC143	Mysterious data 16 bytes	{J}
080DC144	:080DC157	Mysterious data 18 bytes	{J}
080D8740	:080D9D33	Mystery data	2	{U}
080DD41C	:080DED0F	Mystery data	2	{J}
080E1164	&PALETTE	Burning flame palette	{U}
080E6544	&PALETTE	Burning flame palette	{J}
08673168	:08674027	Unknown data	OAMSP Maybe	9	{U}
08727014	&PALETTE	Something's palette	505	{U}
08727034	&PALETTE	Something's palette	506	{U}
08727054	&PALETTE	Something's palette	507	{U}
08727074	&PALETTE	Something's palette	508	{U}
0868DF7C	&PALETTE	Something's palette	509	{U}
086852B8	&PALETTE	Something's palette	510	{U}
0869FD40	:086A0BFF	Unknown data	OAMSP Maybe	9	{J}
08753BEC	&PALETTE	Something's palette	505	{J}
08753C0C	&PALETTE	Something's palette	506	{J}
08753C2C	&PALETTE	Something's palette	507	{J}
08753C4C	&PALETTE	Something's palette	508	{J}
086BAB54	&PALETTE	Something's palette	509	{J}
086B1E90	&PALETTE	Something's palette	510	{J}
0803830C	Battle record display	{J}
080381E0	Battle record display	{U}
080BD02C	Draw capture assessment	ending	{J}
080BCC90	Setting background of screen for evaluating capture	ending	I have a bug		{J}
080BC044	Display Fin screen Procs launch	{J}
08AC5558	&PALETTE2	Palette of tactics evaluation screen	1	{J}
08AC6C58	&PALETTE2	Palette of tactics evaluation screen	2	{J}
08AC6BF8	&PALETTE	Palette of tactics evaluation screen	3	{J}
08AC6C18	&PALETTE2	Palette of tactics evaluation screen	4	{J}
080BC1B8	Draw total number of turns	ending	{J}
080BC0F4	Preparing to draw background of screen with total number of turns	ending		{J}
080BCECC	Set background of screen with total number of turns	ending		{J}
080B7598	Display Fin screen Procs launch	{U}
080B770C	Draw total number of turns	ending	{U}
080B7648	Preparing to draw background of screen with total number of turns	ending		{U}
080B8014	Set background of screen with total number of turns	ending		{U}
080ba8f8	Acquire of "tactics evaluation" of tactics evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{J}
080ba9f0	Acquire "survival evaluation" of tactics evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{J}
080bab54	Acquire "asset valuation" of tactics evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{J}
080baa28	Acquire of "experience evaluation" of tactics evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{J}
080bab20	Acquire of "Battle Evaluation" of Capture Evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{J}
080babf4	Acquire "comprehensive evaluation" of tactics evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{J}
080A93E8	Subroutine of "Battle evaluation" of tactics evaluation	{J}
080BADB0	Subroutine of "evaluation of survival evaluation" of tactics evaluation	Unit's life / death determination	{J}
080bade8	Subroutine of "Battle evaluation" of tactics evaluation	{J}
080171F8	Acquire of values ​​for calculating asset valuation	{J}
080BACC8	Calculate 'tactics evaluation' of tactics evaluation at time of chapter clearance	{J}
080BAE60	Calculate "asset valuation" of tactics evaluation at time of clearing chapter	{J}
080BAFA8	Calculate "experience value evaluation" of tactics evaluation at time of clearing chapter	{J}
080B5D74	Acquire of "tactics evaluation" of tactics evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{U}
080B5E6C	Acquire "survival evaluation" of tactics evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{U}
080B5FD0	Acquire "asset valuation" of tactics evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{U}
080B5EA4	Acquire of "experience evaluation" of tactics evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{U}
080B5F9C	Acquire of "Battle Evaluation" of Capture Evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{U}
080B6070	Acquire "comprehensive evaluation" of tactics evaluation	0=E 1=D 2=C 3=B 4=A 5=S	{U}
080A49A4	Subroutine of "Battle evaluation" of tactics evaluation	{U}
080B622C	Subroutine of "evaluation of survival evaluation" of tactics evaluation	Unit's life / death determination	{U}
080B6264	Subroutine of "Battle evaluation" of tactics evaluation	{U}
08017450	Acquire of values ​​for calculating asset valuation	{U}
080B6144	Calculate 'tactics evaluation' of tactics evaluation at time of chapter clearance	{U}
080B62DC	Calculate "asset valuation" of tactics evaluation at time of clearing chapter	{U}
080B6424	Calculate "experience value evaluation" of tactics evaluation at time of clearing chapter	{U}
08097D24	Draw purpose of upper right chapter of attack advancement screen	{J}
08030C10	Display results under status	{J}
08A98130	&LZ77	Something's TSA	24	{J}
08A980F0	&LZ77	Something's TSA	25	{J}
08097F64	Draw advancement preparation screen	{J}
08097F30	Retrieve image of chapter number of advancement screen	{J}
08098DA0	Acquire current chapter ID on attack advancement screen	{J}
08098C3C	Register and display image of current chapter ID on advancement preparation screen as Obj	{J}
08098C84	Register and display image of current chapter ID on advancement preparation screen as Obj	(Chapter ID)	{J}
08098C98	Register and display image of current chapter ID on advancement preparation screen as Obj	(Tower)	{J}
08098CAC	Register and display image of current chapter ID on advancement preparation screen as Obj	(Remains)	{J}
08098CC0	Register and display image of current chapter ID on advancement preparation screen as Obj	(Extra)	{J}
080C572C	Determine whether it is a free map ExtraMap	{U}
08095A44	Draw purpose of upper right chapter of attack advancement screen	{U}
08030CC0	Display results under status	{U}
08A1B698	&LZ77	Something's TSA	24	{U}
08A1B658	&LZ77	Something's TSA	25	{U}
08095C84	Draw advancement preparation screen	{U}
08095C50	Retrieve image of chapter number of advancement screen	{U}
08096ABC	Acquire current chapter ID on attack advancement screen	{U}
08096958	Register and display image of current chapter ID on advancement preparation screen as Obj	{U}
080969A0	Register and display image of current chapter ID on advancement preparation screen as Obj	(Chapter ID)	{U}
080969B4	Register and display image of current chapter ID on advancement preparation screen as Obj	(Tower)	{U}
080969C8	Register and display image of current chapter ID on advancement preparation screen as Obj	(Remains)	{U}
080969DC	Register and display image of current chapter ID on advancement preparation screen as Obj	(Extra)	{U}
080C0960	Determine whether it is a free map ExtraMap	{U}

080D668C	nullsub_1	{J}
08003328	nullsub_2	{J}
08008F28	nullsub_15	{J}
08019860	nullsub_8	{J}
0802346C	nullsub_23	{J}
08024BA4	nullsub_24	{J}
080299D4	nullsub_22	{J}
0802CA30	nullsub_11	{J}
08030660	nullsub_12	{J}
0804D148	nullsub_13	{J}
08077390	nullsub_17	{J}
0807ACB8	nullsub_18	{J}
08087CB4	nullsub_19	{J}
0809D634	nullsub_20	{J}
080BD0C8	nullsub_5	{J}
080BDE98	nullsub_21	{J}
08009F38	__malloc_unlock	{J}
0800CFB0	__malloc_unlock_0	{J}
0800D000	__malloc_unlock_1	{J}
0800D0B0	__malloc_unlock_2	{J}
0804D144	__malloc_unlock_3	{J}
08061388	__malloc_unlock_4	{J}
0807B070	__malloc_unlock_5	{J}
0808FA64	__malloc_unlock_6	{J}
080975B0	__malloc_unlock_7	{J}
080A29F8	__malloc_unlock_8	{J}
080A82B0	__malloc_unlock_9	{J}
080B3E48	__malloc_unlock_10	{J}
080BD058	__malloc_unlock_11	{J}
080D2AD4	__malloc_unlock_12	{J}
080D6360	__malloc_unlock_13	{J}
080D9964	__malloc_unlock_14	{J}

080BAD48	GetChapterSurvivalRank	{J}
080B61C4	GetChapterSurvivalRank	{U}
080BAE08	GetChapterDeathCount	{J}
080B6284	GetChapterDeathCount	{U}
080BAE60	GetChapterFundsRank	{J}
080B62DC	GetChapterFundsRank	{U}
080BAEDC	GetChapterWinPerc	{J}
080B6358	GetChapterWinPerc	{U}
080BAF74	GetChapterCombatRank	{J}
080B63F0	GetChapterCombatRank	{U}
080BB088	ComputeChapterRankings	{J}
080B6504	ComputeChapterRankings	{U}
080D74C0	ComputeChecksum32	{U}
080dc0fc	ComputeChecksum32	{J}
@ArenaData@00	&Unit	playerUnit
@ArenaData@04	&Unit	opponentUnit
@ArenaData@08	short	betMoney
@ArenaData@0A	byte	battleResults
@ArenaData@0B	byte	unk0B
@ArenaData@0C	byte	range
@ArenaData@0D	byte	playerWpnType
@ArenaData@0E	byte	opponentWpnType
@ArenaData@0F	byte	playerClassId
@ArenaData@10	byte	opponentClassId
@ArenaData@11	byte	playerLevel
@ArenaData@12	byte	oppenentLevel
@ArenaData@13	byte	playerIsMagic
@ArenaData@14	byte	opponentIsMagic
@ArenaData@15	byte	_pad_15
@ArenaData@16	short	playerPowerWeight
@ArenaData@18	short	opponentPowerWeight
@ArenaData@1a	short	playerWeapon
@ArenaData@1c	short	opponentWeapon
@ArenaData@1e	short	_pad_1e
0203A8EC	@ArenaData	Temporary data of Arena	{J}
0203A8F0	@ArenaData	Temporary data of Arena	{U}
08031960	GetUnitArenaWeight	{J}
0807C8DC	GetAdjustedPositionForNewUnit	{J}
08000360	&ARM	ARM_ComputeChecksum32	{U}
08000BC8	InitRN	{U}
08000D28	GetGameClock	{U}
08001F48	SetColorEffectBackdropFirstTarget	{U}
08002264	Sound_IsSongPlaying	{U}
0800237C	Sound_FadeOut_800237C	{U}
080024F0	Sound_SongVolumeTransitionAProc_Loop	{U}
08002788	Sound_SongVolumeTransitionBProc_Loop	{U}
08002890	Sound_PlaySongCore	{U}
080028D0	SetSoundDefaultMaxChannels	{U}
080028E8	SetSoundMaxChannels	{U}
080028FC	Sound_SetupMaxChannelsForSong	{U}
08003D20	Font_ResetAllocation	{U}
0800465C	Text_Clear2DLine	{U}
080046E0	Text_Get2DVRAMTarget	{U}
08004700	DrawGlyph2DTile	{U}
08004A34	Text_DrawGlyphManual	{U}
08004ACC	DrawSpecialUiChar_	{U}
08004B0C	DrawSpecialUiChar	{U}
08004B48	DrawSpecialUiDecNumber	{U}
08004B88	DrawUiNumber	{U}
08004BE4	DrawUiSmallNumber	{U}
08004BF0	DrawStatScreenBonusNumber	{U}
08005488	_HiObjProc_Loop	{U}
080054B0	StartHiObjProc	{U}
080054F4	MoveHiObjProc	{U}
08005570	FindFreeFaceSlot	{U}
080055BC	FACE_Display	{U}
08005610	StartFaceAuto	{U}
08005770	SetFaceDisplayBits	{U}
0800578C	SetFaceDisplayBitsById	{U}
080057A4	GetFaceDisplayBits	{U}
080057A8	GetFaceDisplayBitsById	{U}
08006438	SetFaceBlinkControl	{U}
08006458	SetFaceBlinkControlById	{U}
08006470	GetFaceBlinkProcUnknown8006470	{U}
080064F4	NewFace2	{U}
080067E8	Dialogue_ClearFaceReferences	{U}
0800680C	Dialogue_InitGfx	{U}
080068AC	Dialogue_InitGfxObj	{U}
08006978	Dialogue_InitFont	{U}
0800698C	StartDialogue	{U}
08006A30	StartDialogueFromIndex	{U}
08006A70	StartDialogueParentless	{U}
08006A7C	EndDialogue	{U}
08006A98	ClearDialogueFlags	{U}
08006AA8	SetDialogueFlag	{U}
08006AC8	UnsetDialogueFlag	{U}
08006ADC	CheckDialogueFlag	{U}
08006AF0	Dialogue_SetCharacterDisplayDelay	{U}
08006B10	Dialogue_SetDefaultTextColor	{U}
08006B4C	DialogueSkipInputListener_OnLoop	{U}
08006C00	DialogueMain_OnInit	{U}
08006C34	DialogueMain_OnLoop	{U}
08006DA0	DialogueMain_UpdateDisplay	{U}
08007838	Dialogue_SetActiveFacePosition	{U}
08007C0C	DialogueMain_OnEnd	{U}
08007CD8	NewTextBluArrowAndButtonChecker	{U}
08007DE8	StartDialogueTextChoice	{U}
08007E9C	DialogueTextChoice_OnLoop	{U}
08008198	GetTextPauseDurationFromControlCode	{U}
080083E0	NewDialogueBoxAppearingAnimator	{U}
080087A4	nullsub_74	{U}
080089D0	DialogueExists	{U}
08008A00	GetLastDialoguePromptResult	{U}
08008B44	GetStringTextWidthWithDialogueCodes	{U}
08008F20	DialogueEnableBgSyncByMask	{U}
08009038	nullsub_15	{U}
08009A58	GameControl_8009A58	{U}
08009FD4	nullsub_RestartGameAndGoto7	{U}
08009FD8	nullsub_9	{U}
0800A048	String_GetGenericArticle	{U}
0800A160	String_PrependArticle	{U}
0800A2A4	String_ExpandNames	{U}
0800BB48	UntriggerMapChange	{U}
0800CCE8	nullsub_31	{U}
0800CD38	nullsub_33	{U}
0800CD3C	nullsub_34	{U}
0800D390	StartGameOverEvent	{U}
0800D3A4	EventEngine_CanSkipMaybe	{U}
0800D3E4	SetDialogueSkipEvBit	{U}
0800D414	EventEngine_EnableSkip	{U}
0800F50C	UNIT_GetListSize	{U}
0800F5B8	LoadUnitsIdle	{U}
0800F698	UNITs_LoadInstant_800F698	{U}
0800F914	UNIT_Filter	{U}
08011694	CreateItemStealingPopup	{U}
08011728	CreateNewUnitPopup	{U}
08011A18	nullsub_44	{U}
08013C88	IsFadeActive	{U}
08013CD0	StartFadeInBlack	{U}
08013CEC	StartFadeOutBlack	{U}
08013D08	StartBlockingFadeInBlack	{U}
08013D20	StartBlockingFadeOutBlack	{U}
08013D38	StartBlockingFadeInWhite	{U}
08013D50	StartBlockingFadeOutWhite	{U}
08013D68	StartFadeInBlackMedium	{U}
08013D74	StartFadeInBlackSlow	{U}
08013D80	StartFadeInBlackFast	{U}
08013D8C	StartFadeOutBlackMedium	{U}
08013DA4	StartFadeOutBlackFast	{U}
08013DC0	StartBlockingFadeInBlackSlow	{U}
080143D8	SomeDrawTextCentered	{U}
0801443C	SomeDrawTextInlineAutoWidth	{U}
08015410	MapMain_SwitchPhases	{U}
08015434	MapMain_ThisProbablyUsedToBeEventRelatedInEarlierGames	{U}
0801550C	MapMain_StartIntroFx	{U}
080155C4	MapMain_ChapterSwitch	{U}
080160D0	UpdatePlayMapMusic	{U}
08016CC0	GetItemRangeString	{U}
080173D0	GetUnitsTotalHeldGoldValue	{U}
080184E0	GetUnitDropLocation	{U}
080187C0	CleanupUnitStatesForPhaseSwitch	{U}
08018858	MapMain_UpdateUnitStatus	{U}
08018BA0	GetRedTeamUseFlags	{U}
08019CBC	InitMapChangeGraphics	{U}
0801A640	GenerateMovementInstructionsToPoint	{U}
0801A82C	ProcessUnitMovement	{U}
0801A8E4	MapMovementMarkMovementEdges	{U}
0801A9D0	MapMarkMovementEdges	{U}
0801B950	MapSetInMagicSealedRange	{U}
0801C1DC	UNUSED_StartupDebugMenu_WorldMapEffect	{U}
0801C224	UNUSED_StartupDebugMenu_ChapterSelectIdle	{U}
0801C248	UNUSED_StartupDebugMenu_ChapterSelectEffect	{U}
0801C928	CanShowUnitStatScreen	{U}
0801CC1C	PlayerPhase_InitUnitMovementSelect	{U}
0801CCB4	PlayerPhase_DisplayDangerZone	{U}
0801CD1C	PlayerPhase_RangeDisplayIdle	{U}
0801CFF0	PlayerPhase_CancelAction	{U}
0801D008	PlayerPhase_BackToMove	{U}
0801D5A8	CanMoveActiveUnitTo	{U}
0801D624	PlayerPhase_DisplayUnitMovement	{U}
0801D668	PlayerPhase_ResumeRangeDisplay	{U}
0801D7E8	ASMC_801D7E8	{U}
0801D818	PlayerPhase_RangeDisplayIdle_ForceAPress	{U}
0801E684	ForceMenuItemPanel	{U}
0801E748	UpdateMenuItemPanel	{U}
0801EA54	EndMenuItemPanel	{U}
0801EC10	StartUnitSwapAnimation	{U}
0801EC48	UnitSwapAnimationExists	{U}
0801F2CC	LoadPhaseIntroGraphics	{U}
0801F540	GasTrapEffectGfx_Setup	{U}
0801F600	StartGasTrapEffectGfxMaybe	{U}
0801F630	MineFireEffectGfx_Setup	{U}
0801F68C	NewFireTrapEffectGfx	{U}
0801F6BC	NewMineTrapEffectGfx	{U}
0801F844	StartLightArrowTrapGfx	{U}
0801FD90	ChapterIntro_Bg3Scroll_Loop	{U}
08021684	BeginLightRuneMapAnim	{U}
08022300	BeginMineMapAnim	{U}
080226F8	MapMenuCommand_DangerZoneUnusedEffect	{U}
08024884	nullsub_27	{U}
08024BF4	nullsub_26	{U}
08025904	MakeTerrainHealTargetList	{U}
080259EC	MakePoisonDamageTargetList	{U}
08025A64	MakeGorgonEggHatchTargetList	{U}
08025C34	AddAsTarget_IfPositionCleanForSummon	{U}
08025CA4	ListSummonTargets	{U}
08027A40	ResetMapSpriteHoverTimer	{U}
08027A4C	HandleMapSpriteCursorHover	{U}
080283E0	ClearUnitSupports	{U}
080287D4	SwapUnitStats	{U}
08029A48	nullsub_24	{U}
0802A318	SimulateBattle	{U}
0802A364	SimulateBattleBallista	{U}
0802C344	GetUnitEffectiveLevel	{U}
0802C398	GetUnitEffectivePowerLevel	{U}
0802C534	ComputeExpFromBattle	{U}
0802C6EC	SetupBattleUnitEquippedWeapon	{U}
0802CAF8	nullsub_11	{U}
0802D2E0	TradeMenu_802D2E0	{U}
0802D474	TradeMenu_InitTextHandles	{U}
0802D4A8	TradeMenu_RefreshItemText	{U}
0802D794	TradeMenu_InitGraphics	{U}
0802D820	TradeMenu_802D820	{U}
0802D834	TradeMenu_802D834	{U}
0802D918	TradeMenu_802D918	{U}
0802D980	TradeMenu_802D980	{U}
0802DAAC	TradeMenu_802DAAC	{U}
0802DAFC	TradeMenu_802DAFC	{U}
0802DB48	TradeMenu_802DB48	{U}
0802DD6C	StartTradeMenu	{U}
0802E140	TradeMenu_802E140	{U}
0802E690	UpdateUnitsUnderRoof	{U}
0802F274	ExecUnlock	{U}
0802F30C	ExecLatona	{U}
0802F808	ApplyStatBoosterAndGetMessageId	{U}
0802F914	ExecStatBooster	{U}
0802FA4C	ExecItemMine	{U}
08030174	EndGameVBlankProc	{U}
08030710	nullsub_12	{U}
08030CF4	InitClearChapterState	{U}
08030FE4	GameControl_8030FE4	{U}
080311A8	ReloadGameCoreGraphics	{U}
080311F0	EndBMAPMAIN	{U}
08031214	ChapterEndUnitCleanup	{U}
08031300	MapMain_ResumeFromPhaseIdle	{U}
0803133C	MapMain_ResumeFromAction	{U}
080313BC	MapMain_ResumeFromBerserkPhase	{U}
080313F8	MapMain_ResumeFromArena	{U}
08031474	MapMain_ResumeFromPhaseSwitch	{U}
080314EC	SetTacticianName	{U}
08031F50	CouldUnitUseAnyWeapon	{U}
080325AC	SpriteJumpAnimation_Loop	{U}
08032658	SpriteJumpAnimation_ExecAnyTrap	{U}
08032664	SpriteJumpAnimation_Cleanup	{U}
08032674	DropRescuedUnitIfDead	{U}
08032728	KillUnitIfDefeatedBy	{U}
08032750	KillUnitIfNoHealth	{U}
0803286C	BATTLE_HandleUnitDeaths	{U}
080329A0	BATTLE_HandleActiveUnitDeath	{U}
080329D8	MoveCursor_SetLastCursorPosition	{U}
080329EC	MoveCursor_CutPath	{U}
08032A94	MoveCursor_AddMovePoint	{U}
08032B18	MoveCursor_GetPointIndexForPosition	{U}
08032B88	MoveCursor_AppendFromMoveBuffer	{U}
08032D30	MoveCursor_FillMovementMapForEndPoint	{U}
08032D74	MoveCursor_RecomputePath	{U}
08032DA0	MoveCursor_8032DA0	{U}
080341D0	PrepScreenProc_LockGame	{U}
08034200	PrepScreenProc_HideEverythingAndUnlockGame	{U}
08034278	EndPrepScreen	{U}
08035758	IsBottomHelpTextActive	{U}
0803592C	ExecSelfDamage	{U}
080365E4	DrawUnitNameForBattleForecast	{U}
08036818	BKSEL_DrawStandard	{U}
08036A70	BKSEL_DrawDetailed	{U}
08036CD0	BKSEL_Draw	{U}
08036E2C	BKSEL_Display	{U}
080374F4	MineFireTrap_DoSomeBWLStuffWhenKill	{U}
08037510	FireTrap_StartGfx	{U}
08037528	MineTrap_StartGfx	{U}
08037540	MineFireTrap_8037540	{U}
080375A0	MineFireTrap_80375A0	{U}
080377CC	ExecTrapForActionTarget	{U}
08037830	ExecTrap_QuietMaybe	{U}
0803795C	GetNonEmptyBallistaAt	{U}
08037D68	PrepScreenProc_AddPostgameUnits	{U}
08037DDC	PrepScreenProc_TryAddUnit	{U}
080396AC	CpPhase_Init	{U}
08039718	BskPhase_Init	{U}
08039778	CpPhase_Cleanup	{U}
080397B0	BskOrder_Init	{U}
08039898	GetUnitAiAttackPriority	{U}
08039938	GetUnitAiPriority	{U}
08039A50	SortAiUnitQueue	{U}
08039AC8	CpDecide_Suspend	{U}
08039C20	AiSetDecision	{U}
08039C64	AiUpdateDecision	{U}
08039CAC	AiMasterDecisionMaker	{U}
08039E88	AiTargetCursor_Main	{U}
08039ECC	StartAiTargetCursor	{U}
08039EF4	CpPerform_UpdateMapMusic	{U}
08039F0C	CpPerform_MoveCameraOntoUnit	{U}
08039FAC	CpPerform_BeginUnitMovement	{U}
0803A024	AiRefreshMap	{U}
0803A134	CpPerform_PerformSteal	{U}
0803A17C	CpPerform_LootWait	{U}
0803A204	CpPerform_StaffWait	{U}
0803A23C	CpPerform_ChestWait	{U}
0803A270	CpPerform_DanceWait	{U}
0803A274	CpPerform_TalkWait	{U}
0803A2B8	CpPerform_RideBallistaWait	{U}
0803A2E0	CpPerform_ExitBallistaWait	{U}
0803A3C8	CpPerform_MoveCameraOntoTarget	{U}
0803A5F8	CpPerform_WaitAction	{U}
0803A674	CpPerform_DummyWait	{U}
0803A678	CpPerform_EscapeWait	{U}
0803A69C	CpPerform_StealWait	{U}
0803A71C	AiScriptCompare	{U}
0803A788	AiFindPositionOfCharacter	{U}
0803A878	AiFindClosestPositionWithUnitOfClass	{U}
0803A924	AiGetClosestUnitPosition	{U}
0803AC3C	CouldStationaryUnitBeInRangeHeuristic	{U}
0803AC90	CouldUnitBeInRangeHeuristic	{U}
0803AD18	IsTerrainIdInList	{U}
0803AD38	AiFindClosestTileInRangeWithListedTerrain	{U}
0803AE3C	GetPositionRangeWeight	{U}
0803AFDC	AiSomethingCheckPick	{U}
0803B41C	AiAreEnemiesWithin3Tiles	{U}
0803B718	GetLesserWeightedAdjacentPosition	{U}
0803B794	GetItemAiStealPriority	{U}
0803B7C8	AiGetBestItemSlotIndexToSteal	{U}
0803B808	AiFindUnitSafestTileToMoveTo	{U}
0803B8FC	AiGetLootingParameters	{U}
0803B994	AiGetActiveUniChestKeyItemSlot	{U}
0803BA08	AiTryMoveTowards	{U}
0803BDE0	FindClosestBestPosition	{U}
0803BF84	AiIsCharacterOnMap	{U}
0803BFD0	AiArePointsWithinDistance	{U}
0803C014	AiIsPositionLootable	{U}
0803C490	AiFillMovementMapForUnit	{U}
0803C4BC	AiExecAi1	{U}
0803C510	AiExecFallbackAi1	{U}
0803C54C	AiExecAi2	{U}
0803C5A0	AiExecFallbackAi2	{U}
0803C5DC	AiScript_Exec	{U}
0803C848	IsUnitNotActiveUnit	{U}
0803C864	IsUnitEnemyAndNotInTheAiInstList	{U}
0803C8AC	IsUnitEnemyOrInTheAiInstList	{U}
0803C8F4	AiIsUnitScriptCharAndEnemyWithActiveUnit	{U}
0803C934	AiIsUnitScriptClassAndEnemyWithActiveUnit	{U}
0803D3E4	AiDoBerserkAction	{U}
0803D404	AiDoBerserkMove	{U}
0803D450	AiTryDoOffensiveAction	{U}
0803D880	AiFillUnitStandingRangeWithWeapon	{U}
0803DB08	GetEffectiveTileMovCost	{U}
0803DB60	AiTryDoSteal	{U}
0803DCC4	AiTrySimulateBattle	{U}
0803DE5C	AiGetTileWeightForAttack	{U}
0803DEC4	ShouldAiNotBattle	{U}
0803DEC8	AiSimulateBattle	{U}
0803DF34	AiBattleGetDamageDealtWeight	{U}
0803DF94	AiBattleGetTargetHpWeight	{U}
0803DFBC	AiBattleGetAlliesAroundWeight	{U}
0803E068	AiBattleGetWeight_803E068	{U}
0803E09C	AiBattleGetTurnNumberWeight	{U}
0803E0B4	AiBattleGetDamageTakenWeight	{U}
0803E114	AiBattleGetTileDangerWeight	{U}
0803E150	AiBattleGetSubjectHpWeight	{U}
0803E178	ComputeAiAttackWeight	{U}
0803E1EC	AiGetUnitReachWeightWithEquippedWeapon	{U}
0803E23C	AiGetPositionTerrainSafetyWeight	{U}
0803E27C	AiGetPositionUnitSafetyWeight	{U}
0803E2F4	SetupAiDangerMap	{U}
0803E320	FillAiDangerMap	{U}
0803E448	IsAiTileSafe	{U}
0803E718	AiUnitTryHealSelf	{U}
0803E7D0	AiUnitTryMoveTowardsEscapePoint	{U}
0803ED28	AiTryDoDanceAdjacent	{U}
0803EE4C	AiTryDoStealAdjacent	{U}
0803EFE0	AiIsUnitAtPositionDifferentAllegiance	{U}
0803F9D8	AiGetStaffAiIndex	{U}
0803FA40	AiTryDoStaff	{U}
0803FAE8	GetAiSafestAccessibleAdjacentPosition	{U}
08040664	nullsub_29	{U}
08040844	AiTryDoSpecialItems	{U}
08040BB4	AiSomethingGetPick	{U}
08040C5C	AiTrySomethingPick	{U}
08040DCC	AiSetMovCostTableWithPassableWalls	{U}
08040E04	AiSetMovCostTableWithTerrainSetAsPassable	{U}
08040E68	InitAiMoveMapForUnit	{U}
08040F28	AiMapRangeFillMovementWithPassableWalls	{U}
08040F88	InitAiRangeMoveMapForUnitWithDoorsPassable	{U}
080419DC	OnSerialCommunication	{U}
08041C1C	SioVSync_8041C1C	{U}
08041D68	SioReady	{U}
08041DC4	SioMain_8041DC4	{U}
08042E0C	SioCon_8042E0C	{U}
08042E2C	SioCon_8042E2C	{U}
08042E78	SetGameLinkArenaBit	{U}
08042E88	ClearGameLinkArenaBit	{U}
0804320C	SioPlaySomeIndexedSfx	{U}
08044700	NameSelect_DrawNameText	{U}
08044768	NameSelect_8044768	{U}
08044C54	NameSelect_8044C54	{U}
08044ED8	NameSelect_8044ED8	{U}
08044F84	OnNameSelectHBlank	{U}
08044FE4	NameSelect_8044FE4	{U}
08044FFC	NameSelect_8044FFC	{U}
0804503C	NameSelect_804503C	{U}
08045068	NameSelect_8045068	{U}
08045108	NameSelect_8045108	{U}
080451F0	NameSelect_80451F0	{U}
08047AB8	CheckSomethingSaveRelated	{U}
08047AF4	SioMenu_8047AF4	{U}
08047B34	SioMenu_8047B34	{U}
08047C60	SioMenu_8047C60	{U}
08047CF0	SioMenu_8047CF0	{U}
08047D88	SioMenu_8047D88	{U}
08047FF8	SioMenu_8047FF8	{U}
080480B4	SioMenu_80480B4	{U}
08048168	SioMenu_8048168	{U}
08048260	StartNameSelect	{U}
08048A68	nullsub_43	{U}
0804AF2C	ITEMRANGEDONE_sub_804AF2C	{U}
0804B800	BeginLinkArenaBattle	{U}
0804C3A0	nullsub_16	{U}
0804C3A4	nullsub_14	{U}
0804C3A8	nullsub_13	{U}
0804E79C	UpdateHandCursor	{U}
0804F474	Menu_HelpBoxInit	{U}
0804F4A0	Menu_HelpBoxIdle	{U}
0804F520	MenuCallHelp	{U}
0804F530	Menu_TextBoxIdle	{U}
0804F5B4	Menu_804F5B4	{U}
0804F62C	UnMarkSomethingInMenu	{U}
0804FDD0	nullsub_35	{U}
0804FF60	nullsub_36	{U}
08050DE0	nullsub_69	{U}
08052304	StartEfxHpBar	{U}
080525E8	StartEfxHpBarResire	{U}
08052978	StartEfxAvoid	{U}
08052A0C	StartEfxHpBarLive	{U}
08052B98	StartEfxNoDamage	{U}
08052D8C	StartEfxStatusCHG	{U}
08052DD4	StartEfxDeadEVTENT	{U}
08052FAC	StartEfxDead	{U}
08053120	StartEfxDeadPika	{U}
080533D0	MoveBattleCameraOnto	{U}
0805372C	nullsub_56	{U}
08053730	StartEfxQuake	{U}
080539DC	StartEfxHitQuake	{U}
08054440	StartEfxFlashHPBar	{U}
080545C0	StartEfxHPBarColorChange	{U}
080546B0	EndEfxHPBarColorChange	{U}
080547DC	StartEfxFlashUnit	{U}
08054E8C	StartEfxWeaponIcon	{U}
08054ED4	EndEfxWeaponIcon	{U}
08054EF0	PauseEfxWeaponIcon	{U}
08054F00	ResumeEfxWeaponIcon	{U}
08054F10	EfxWeaponIcon_OnLoop	{U}
08054F78	EfxWeaponIcon_OnEnd	{U}
08055000	StartEndEfxSpellCast	{U}
0805526C	SpellFx_ClearColorEffects	{U}
08055298	StartBattleAnimHitEffects	{U}
08055670	SpellFx_WriteBgMap	{U}
08056D90	EkrWindowAppear_Loop	{U}
08056E60	HasEkrNamewinAppearEnded	{U}
08058A34	GetBattleAnimRoundTypeFlags	{U}
08058A60	GetSomeBattleAnimHpValue	{U}
08059924	EkrChienCHR_OnLoop	{U}
0805A07C	SwitchAISFrameDataFromBARoundType	{U}
0805A154	GetAISLayerId	{U}
0805A2F0	GetAISNextBattleAnimRoundType	{U}
0805A9E0	EndEkrAnimeDrvProc	{U}
0805AA00	StartEkrUnitMainMini	{U}
0805AA4C	EkrUnitMainMini_OnLoop	{U}
0805B028	GetBattleAnimArenaFlag	{U}
0805B07C	PlayBattleCroudSfxIfArena	{U}
0805CEC4	nullsub_42	{U}
0805D938	EfxThunderBG_Main	{U}
0805D9BC	StartEfxThunderBGCOL	{U}
0805D9F8	EfxThunderBGCOL_Main	{U}
0805DA44	StartEfxThunderOBJ	{U}
0805DAA4	EfxThunderOBJ_Main	{U}
0805FE80	nullsub_41	{U}
08060284	nullsub_39	{U}
08060288	nullsub_40	{U}
08064CFC	nullsub_51	{U}
08065490	nullsub_52	{U}
08065494	nullsub_53	{U}
0806C61C	StartEfxDamagaMojiEffect	{U}
0806C67C	StartEfxDamageMojiEffectOBJ	{U}
0806C71C	StartEfxCriticalEffect	{U}
0806E014	StartEfxChillEffect	{U}
0806E1F0	StartEfxChillAnime	{U}
0806E30C	nullsub_17	{U}
0807132C	ApplyFlashingPaletteAnimation	{U}
080716B0	GetOtherRN_N	{U}
080716C8	StartEkrsubAnimeEmulator	{U}
08071A8C	Unset20200AC	{U}
08071A98	Set20200AC	{U}
08071AA4	Get20200AC	{U}
0807460C	nullsub_62	{U}
08074F3C	HasBattleAnimTriangeAttackEnded	{U}
08074F58	nullsub_18	{U}
08074F80	EkrTriangle_OnLoop	{U}
08075184	StartEkrPegasusKnight	{U}
0807527C	StartEkrPegasusKnightBG	{U}
0807624C	nullsub_68	{U}
080784D8	MU_ManualUpdate	{U}
08078770	MU_IsActive	{U}
080787C4	MU_CreateScripted	{U}
08078894	MU_8078894	{U}
08078C58	MU_State_None	{U}
08078C5C	MU_State_NoOp	{U}
080790CC	MU_80790CC	{U}
080790F8	MU_GetComputedEndPosition	{U}
0807920C	MU_GenerateConfigOther	{U}
0807953C	MU_SetMoveConfig	{U}
08079654	MU_BlinkEffect_OnLoop	{U}
0807968C	MU_StartBlinkEffect	{U}
080796D4	MU_SetupPixelEffect	{U}
08079730	MU_PixelEffect_OnLoop	{U}
08079788	MU_StartPixelEffect	{U}
080797DC	MU_Show	{U}
080797F4	MU_SetDisplayOffset	{U}
08079804	MU_StartFlashFade	{U}
08079858	MU_8079858	{U}
0807988C	MU_807988C	{U}
080798E8	MU_StartDelayedFaceTarget	{U}
0807990C	MU_EndRefaceApAnim	{U}
08079970	MU_StartCritFlash	{U}
080799A0	MU_CritFlash_Init	{U}
080799A8	MU_CritFlash_SetFadedPalette	{U}
080799C8	MU_CritFlash_SetRegularPalette	{U}
080799EC	MU_CritFlash_StartFadeBack_maybe	{U}
08079A10	MU_CritFlash_SpriteShakeLoop	{U}
08079A50	MU_CritFlash_RestorePalette	{U}
08079A74	MU_StartHitFlash	{U}
08079AD4	MU_HitFlash_RestorePalette	{U}
08079B6C	MU_SetPaletteId	{U}
08079BE0	MU_SortObjLayers	{U}
08079DDC	MuCtr_CreateWithReda	{U}
0807A1FC	MuCtr_OnEnd	{U}
0807A358	MuCtr_ExecREDA_807A358	{U}
0807A708	MapAnimProc_DisplayItemStealingPopup	{U}
0807A984	MapAnimProc_DisplayDeathQuote	{U}
0807AA00	MapAnimProc_DisplayDeathFade	{U}
0807AA4C	MapAnimProc_DisplayExpBar	{U}
0807B68C	BeginSelfDamageMapAnim	{U}
0807BBF0	MapAnimUi_Clear	{U}
0807C02C	MapAnimExpBar_LoadGfx	{U}
0807C0F8	MapAnimExpBar_FillLoop	{U}
0807C14C	MapAnimExpBar_TransitionInInit	{U}
0807C1AC	MapAnimExpBar_TransitionInLoop	{U}
0807C210	MapAnimExpBar_StartLevelUp	{U}
0807EA98	MapAnimLevelUp_InitLevelUpBox	{U}
0807EBA4	MapAnimLevelUp_DrawActorStat	{U}
0807F10C	MapAnim_StartLevelUp	{U}
0807F1AC	MapAnimLevelUpProc_InitLevelUpBox	{U}
0807F478	MapAnimLevelUpProc_StartMusicThingy	{U}
0807F48C	MapAnimLevelUpProc_DisplayLevelUpSmallText	{U}
0807F53C	MapAnimLevelUpProc_ClearLevelUpSmallText	{U}
0808125C	nullsub_58	{U}
080815EC	MapAnim_MoveCameraOnWarpTarget	{U}
08081B70	MapAnim_TargetUnitWarpRing	{U}
08081BCC	MapAnim_WarpTargetWarpRing	{U}
08081CD4	MapAnim_TargetUnitFlashOut	{U}
08081CF8	MapAnim_TargetUnitFlashIn	{U}
08081D1C	MapAnim_TargetHide	{U}
08081D40	MapAnim_TargetStarExplosion	{U}
08081D84	MapAnim_TargetStarImplosion	{U}
08081E04	MapAnim_MoveTargetForWarp	{U}
08083250	ShouldCallEndEvent	{U}
0808326C	MaybeCallEndEvent_	{U}
08083280	CallEndEvent	{U}
080832E8	MaybeCallEndEvent	{U}
080833B0	GetChapterEnemyUnitDefinitions	{U}
08083400	GetChapterSkirmishLeaderClasses	{U}
080835A8	ShouldDisplayDeathQuoteForChar	{U}
080835DC	DisplayDeathQuoteForChar	{U}
08083830	EvCheck00_Always	{U}
08083A10	EvCheck09_	{U}
08083B24	EvCheck0C_Never	{U}
08083B28	EvCheck0D_Never	{U}
08083B2C	EvCheck0E_	{U}
08083B58	EvCheck0F_	{U}
08083B98	EvCheck10_	{U}
08083D18	ClearGlobalTriggerState	{U}
08083D34	CheckGlobalEventIdFrom	{U}
08083E34	CheckTutorialEvent	{U}
08083EB8	RunPhaseSwitchEvents	{U}
08083FB0	RunCharacterEvents	{U}
080840C4	RunLocationEvents	{U}
080844B0	RunMoveEventsMaybe	{U}
08084508	RunPostMoveEvents	{U}
08084560	CheckBattleForecastTutorialEvent	{U}
0808457C	RunBattleForecastTutorialEvent	{U}
08084590	RunPlayerPhaseStartTutorialEvent	{U}
080845A4	ClearActiveEventRegistry	{U}
080845B8	RegisterEventActivation	{U}
080845E4	GetEventTriggerId	{U}
080846E4	GetCharDeathQuoteEntry	{U}
08085374	StartGameOver	{U}
080859E8	nullsub_20	{U}
08085F84	nullsub_30	{U}
080878CC	DrawStatScreenPage	{U}
08088670	DrawStatScreen	{U}
08088920	StatScreenBGVPosManager_Loop	{U}
0808894C	StartStatScreen	{U}
08089624	LoadChapterTitleGfx	{U}
08090B44	nullsub_63	{U}
080920C4	StartUnitListMenu	{U}
08092BE4	SortUnitList_GetUnitSoloAnimation	{U}
08092BF0	SortUnitList	{U}
08095354	GetPrepScreenUnitListEntry	{U}
08095364	SetPrepScreenUnitListEntry	{U}
08095374	GetPrepScreenUnitListSize	{U}
08095384	SetPrepScreenUnitListSize	{U}
080956D8	ReorderPlayerUnitsBasedOnDeployment	{U}
080958BC	InitPrepScreenUnitList	{U}
080959B4	AtMenu_AutoDeployPrepScreenUnits	{U}
08095A1C	RestartScreenMenuScrollingBg	{U}
08096424	AtMenu_LockGame	{U}
0809B36C	nullsub_21	{U}
080A2C3C	SramInit	{U}
080A2CB0	IsSramWorking	{U}
080A2CFC	ComputeChecksum16	{U}
080A2DD0	SaveGeneralGameMetadataNoChecksum	{U}
080A2EF8	SaveMetadata_Load	{U}
080A2F94	SaveMetadata_Save	{U}
080A3114	GetSaveSourceAddress	{U}
080A31C0	LoadPermanentEidsIn	{U}
080A37F0	GGM_IsCharacterKnown	{U}
080A3834	GGM_IsAnyCharacterKnown	{U}
080A38F4	LoadBonusContentData	{U}
080A3950	SaveBonusContentData	{U}
080A4104	SaveClearedBWLAndChapterWinData	{U}
080A4904	BWL_GetTotalBattles	{U}
080A4928	BWL_GetTotalWins	{U}
080A4B1C	IsPlaythroughIdUnique	{U}
080A4B6C	GetNewPlaythroughId	{U}
080A4B90	GGM_GetCompletionCount	{U}
080A4BB0	GetGlobalCompletionCount	{U}
080A4BD0	GGM_RegisterCompletedPlaythrough	{U}
080A4C08	GetCurerentGameMode	{U}
080A4D28	GetBonusContentClaimFlags	{U}
080A4D80	UpdateLastUsedGameSaveSlot	{U}
080A4DA0	GetLastUsedGameSaveSlot	{U}
080A4E08	CopyGameSave	{U}
080A4E70	SaveNewGame	{U}
080A5218	SaveMetadata_CheckId	{U}
080A522C	LoadSavedChapterState	{U}
080A524C	LoadSavedBonusClaimFlags	{U}
080A5274	LoadSavedWMStuff	{U}
080A5290	LoadSavedEid8A	{U}
080A5A20	ClearSaveBlock	{U}
080A5DFC	LoadSuspendedChapterState	{U}
080A63B0	GetLastSuspendSaveId	{U}
080A63D0	GetNextSuspendSaveId	{U}
080A63E0	UpdateNextSuspendSaveId	{U}
080A6408	ComputeSaveChecksum	{U}
080A6430	SaveMetadata_VerifyChecksum	{U}
080A6454	SaveMetadata_ComputeChecksum	{U}
080A70B0	SaveWMStuff	{U}
080A7138	LoadWMStuff	{U}
080AC3DC	nullsub_64	{U}
080ADB7C	StartSmallBrownNameBoxes	{U}
080ADC90	EndSmallBrownNameBoxes	{U}
080AF228	nullsub_65	{U}
080B05C0	nullsub_66	{U}
080B0760	InitBonusContentClaimList	{U}
080B0894	DrawBonusItemMenuEntry	{U}
080B0A24	SetBonusContentClaimed	{U}
080B0ADC	ClaimBonusItemMenu_Init	{U}
080B0D38	ClaimBonusItemMenu_MainLoop	{U}
080B1688	StartClaimBonusItemMenu	{U}
080B2518	nullsub_67	{U}
080B8188	nullsub_6	{U}
080B818C	nullsub_7	{U}
080B81FC	nullsub_5	{U}
080B867C	nullsub_57	{U}
080B8FD0	nullsub_22	{U}
080B8FD4	GM_80B8FD4	{U}
080B9154	GM_80B9154	{U}
080BBA80	nullsub_59	{U}
080BBEB4	nullsub_38	{U}
080BD2A8	nullsub_37	{U}
080BD418	nullsub_70	{U}
080BDC00	nullsub_49	{U}
080BF5C0	nullsub_50	{U}
080BFD7C	nullsub_48	{U}
080C18E8	nullsub_72	{U}
080C3EC4	nullsub_71	{U}
080C6100	nullsub_23	{U}
080CCA14	NewPromotion	{U}
080CDDD4	nullsub_60	{U}
080CDDD8	nullsub_61	{U}
080D0564	Clear64byte	{U}
080D0CC8	CgbModVol	{U}
080D188C	llsl_thumb	{U}
080D1990	nullsub_1	{U}
080D1CC0		gcc2_compiled	_11	{U}
080D1D3C	strcpy	{U}
080D1DCC	strstr	{U}
080D1E10		gcc2_compiled	_15	{U}
080D3EB0		gcc2_compiled	_19	{U}
080D46D4		gcc2_compiled	_26	{U}
080D4D24	nullsub_3	{U}
080D4D28	nullsub_4	{U}
080D578C		gcc2_compiled	_35	{U}
080D5CA4		gcc2_compiled	_39	{U}
080D5D34		gcc2_compiled	_43	{U}
02000004	gAISBackLeft	{U}
02000008	gAISFrontRight	{U}
0200000C	gAISBackRight	{U}
0200005C	gpBattleAnimFrameStartLookup	{U}
02001168	gBonusClaimItemList	{U}
0200278C	gTradeMenuText	{U}
020041C8	gAISOAM_20041C8	{U}
0200F1C8	gAISFrames_Left	{U}
02011BC8	gAISFrames_Right	{U}
020121CC	gPrepScreenUnitList	{U}
0201772C	gBool_SpellFxActive	{U}
02017734	gBool_EfxDeathActive	{U}
02017790	gSpellAnimBgGfxBuffer_Maybe	{U}
0201A790	gSpellAnimObjGfxBuffer_Maybe	{U}
0201FAD0	gBattleAnimBoolEkrNamewinAppearActive	{U}
0201FB04	gBattleAnimBoolEndedRounds	{U}
0201FB18	gpEkrAnimeDrvProc	{U}
0201FB1C	gpBattleAnimSomeSheetData	{U}
0202013C	gBattleAnimTriangleAttackEnded	{U}
020228C8	gPalette1Buffer	{U}
020228E8	gPalette2Buffer	{U}
02022908	gPalette3Buffer	{U}
02022928	gPalette4Buffer	{U}
02022968	gPalette6Buffer	{U}
02022988	gPalette7Buffer	{U}
02022A68	gPaletteEBuffer	{U}
02022A88	gPaletteFBuffer	{U}
02022AE8	gPalette12Buffer	{U}
02022B08	gPalette13Buffer	{U}
02022B28	gPalette14Buffer	{U}
02022B48	gPalette15Buffer	{U}
02022B68	gPalette16Buffer	{U}
02022B88	gPalette17Buffer	{U}
02022BA8	gPalette18Buffer	{U}
02022BC8	gPalette19Buffer	{U}
02022BE8	gPalette1ABuffer	{U}
02022C08	gPalette1BBuffer	{U}
02022C28	gPalette1CBuffer	{U}
02022C48	gPalette1DBuffer	{U}
02022C68	gPalette1EBuffer	{U}
02022C88	gPalette1FBuffer	{U}
02024CAC	gBg1MapTarget	{U}
02024CB0	gBg2MapTarget	{U}
02024CB4	gBg3MapTarget	{U}
02024CB8	gpMainCallback	{U}
02028E78	gSpecialUiCharAllocationTable	{U}
0203A990	gMovementArrowData	{U}
0203DD1C	gNameSelectNameBoxText	{U}
0203E10E	gStoredBattleAnimId22Ptr	{U}
0203E156	gRoundDamageValuesMaybe	{U}
0203ac34	gRoundDamageValuesMaybe Skillsystems repoint	{U}
0203abb8	gaAISRelatedShorts	Skillsystems repoint	{U}
0203E194	gpExtraUnit1	{U}
0203E198	gpExtraUnit2	{U}
0203E1A4	gBattleAnimBoolLockSheetGraphicsMaybe	{U}
0203E1AC	gBattleHpDisplayedValue	{U}
0203EDB4	gBonusContentFlags	{U}
0203EF64	@SAVEMENURTEXTDATA	gSaveMenuRTextData	{U}
03000000	gRNState	{U}
03000044	gpMusicProcB	{U}
030017E0	gSioBaudRate	{U}
03001850	gStr_3001850	{U}
03001C38	gSummonedUnitDefinitionBuffer	{U}
03004BB0	gCurrentMovCostTable	{U}
03006440	@MusicPlayer	gMusicPlayerInfo0	{U}
03006650	@MusicPlayer	gMusicPlayerInfo1	{U}
03006690	@MusicPlayer	gMusicSEPlayerInfo2	{U}
030066D0	@MusicPlayer	gMusicSEPlayerInfo3	{U}
03006720	@MusicPlayer	gMusicSEPlayerInfo4	{U}
03006760	@MusicPlayer	gMusicSEPlayerInfo5	{U}
030063C0	@MusicPlayer	gMusicSEPlayerInfoUnk1	{U}
03006400	@MusicPlayer	gMusicSEPlayerInfoUnk2	{U}
03006610	@MusicPlayer	gMusicSEPlayerInfoUnk3	{U}
03007FF0	gpM4aMainThing	{U}
04000002	Undocumented_GreenSwap	{U}
04000300	Undocumented_PostBootFlag	{U}
04000301	Undocumented_PowerDownControl	{U}
080D77B0	psZero	{U}
080D77DC	gpGenericMiniMugPalettes	{U}
080D78EC	gpDialogueTextBoxGfx	{U}
080D79E8	&TEXTBATCH	gRangeTextIdArray	{U}
080D7A10	gWRankTextIdArray	{U}
080D7A30	gWRankNameIdArray	{U}
080D7A38	&TEXTBATCH	gWTypeTextIdArray	{U}
080D7C40	gTradeMenuText_xLookup	{U}
080D7C42	gTradeMenuText_yLookup	{U}
080D7CB8	gNullString	{U}
080D7F58	gTextSpeedLookup	{U}
080D7FB0	gBattleForecastLabelStringIndexes	{U}
080D8018	gPrepScreenUnitJoinList	{U}
080D80C4	gPhaseUnitMaxLookup	{U}
080D80E8	gAiEscapeMoveScriptTable	{U}
080D80F4	gAdjacentTileOffsetLookup	{U}
080D8680	gPhaseUnitCountTable	{U}
080D868C	gStaffAiPerformTable	{U}
080D8690	gStaffAiPerformTable_2	{U}
080D86F4	gSpecialItemAiPerformTable	{U}
080D9EFC	gSioMenuProcLookup	{U}
080D9FE4	gBgConfig_80D9FE4	{U}
080DAE96	gBattleAnimRoundTypeLookup_2Miss	{U}
080DAEA0	gBattleAnimRoundTypeLookup_2Crit	{U}
080DAEAA	gBattleAnimRoundTypeLookup_Miss	{U}
080DAEB4	gBattleAnimRoundTypeLookup_NotMiss	{U}
080DAEBE	gBattleAnimRoundTypeLookup_2MissMagic	{U}
080DAEC8	gBattleAnimRoundTypeLookup_2CritMagic	{U}
080DAEF0	gBattleAnimModeLookupMaybe	{U}
080DCCA6	gThunderAnimBgTsaScript	{U}
080DCCC0	gThunderAnimBgPalScript	{U}
080E15CC	gAnimsOnLevelUpStatDisplayPositionLookup	{U}
08205B24	gStatScreenDrawCallTable	{U}
08205CA4	gConvoyUseSaveLookup	{U}
08205CAC	gConvoyUseSaveLookup2	{U}
08205F20	gCombatRankLookup	{U}
08205F24	gSurvivalRankLookup	{U}
08205F7C	gSomeGmapUnitTable	{U}
08206868	gSomeDefaultsByWMSpriteIndex	{U}
08207044	gTraineePromotionTable	{U}
08224404	gMPlayTable	{U}
08587938	gBGMapBufferTable	{U}
08587948	gBGControlBufferTable	{U}
08590FEC	gDefaultFaceGfxData	{U}
08591490	gTextChoiceDef_YesNo	{U}
085914A0	gTextChoiceDef_Shop	{U}
08591520	gTextPauseDurationLookup	{U}
08591AA4	gStringArticleLookup	{U}
08591F40	gEvent_ForceSkipOffAndFadeOutDark	{U}
08591F64	gEvent_ForceSkipOffAndFadeInDark	{U}
08591FD8	gEvent_GotoPrepScreen	{U}
0859A4A6	gObj_CursorFixed	{U}
0859A9D0	gpTileTerrainConfig	{U}
0859A9D4	gMapRawTiles	{U}
0859AA7C	gStringOnOffLookup	{U}
0859AA9C	gChapterIdOrderedList	{U}
0859AD08	gRangeDisplaySquareLookup	{U}
0859B540	gGfx_859B540	{U}
0859B668	gpSMSGfxDecompBuffer	{U}
0859B66C	gSomeSMSLookupTable_859B66C	{U}
0859B67C	gSomeSMSLookupTable_859B67C	{U}
0859BADC	gTradeMenuItemDispPosLookup	{U}
0859BE40	gErasedDebugMenuCommands	{U}
0859BF18	gChargeDebugMenuCommands	{U}
0859BF84	gDebugStartupMenuCommands	{U}
0859C038	gSomeDebugMenuCommands	{U}
0859C080	gMapDebugMenuCommands	{U}
0859C764	gMenuCommands_StaffItemSelect	{U}
0859CE6C	gMenuCommands_MapMenu	{U}
0859CFD4	gChargeDebugMenuDef	{U}
0859CFF8	gDebugStartupMenuDef	{U}
0859D01C	gSomeDebugMenuDef	{U}
0859D040	gMenu_MapDebug	{U}
0859D0F4	gMenu_859D0F4	{U}
0859D118	gMenu_859D118	{U}
0859D160	gMenuDef_StaffItemSelect	{U}
0859D184	gMenu_ItemMenu	{U}
0859D1F0	gMenu_UnitMenu	{U}
0859D214	gMenu_MapMenu	{U}
0859D278	gSelect_RestoreStaff	{U}
0859D2B8	gSelect_RegularDance	{U}
0859D2F8	gSelect_GenericStaff	{U}
0859D318	gSelect_Steal	{U}
0859D3B8	gSelect_Hammerne	{U}
0859D3D8	gSelect_Trade	{U}
0859D418	gSelect_Give	{U}
0859D438	gSelect_Take	{U}
0859D458	gSelect_Drop	{U}
0859D478	gSelect_Rescue	{U}
0859DBA0	gpMovementArrowData	{U}
0859F020	gGfx_PhaseSwitchFrame	{U}
0859F3F8	gGfx_PlayerPhaseIntro	{U}
0859FA2C	&PALETTE	gPal_PlayerPhaseIntro	{U}
0859FA4C	gGfx_EnemyPhaseIntro	{U}
085A0068	&PALETTE	gPal_EnemyPhaseIntro	{U}
085A0088	gGfx_OtherPhaseIntro	{U}
085A0698	&PALETTE	gPal_OtherPhaseIntro	{U}
085A06D8	gGfx_PhaseSwitchSquares	{U}
085A0C80	gBattleForecast_x2x4Gfx	{U}
085A2940	gGfxMineFireEffectGfx	{U}
085A7CC0	gImg_MineAnimGfx	{U}
085A7F58	gpAIUnitPriorityBuffer	{U}
085A7F9C	gAiDecisionMakerCallTable	{U}
085A80BC	gSomeRangeTileOffsetLookup	{U}
085A8120	gTerrainList_LootableVillages	{U}
085A8124	gTerrainList_LootableVillagesAndChests	{U}
085A812C	gAi_FallbackAi1	{U}
085A813C	gAi_FallbackAi2	{U}
085A8150	gAiTableOfNullTables	{U}
085A828C	gGreenMasterAiEscapeTable	{U}
085A8390	gAI3HealingThresholdTable	{U}
085A8410	gAiScript_Ai2x00	{U}
085A8450	gAiScript_Ai2x12_85A8450	{U}
085A8480	gAiScript_Ai2x11_85A8480	{U}
085A8510	gAiScript_Ai2x04_85A8510	{U}
085A8570	gAiScript_EscapeMaybe	{U}
085A8870	gAiScript_ActionInRange	{U}
085A8890	gAiScript_ActionInRange_80Perc	{U}
085A88B0	gAiScript_ActionInRange_50Perc	{U}
085A88D0	gAiScript_ActionStanding	{U}
085A88F0	gAiScript_ActionStanding_80Perc	{U}
085A8910	gAiScript_ActionStanding_50Perc	{U}
085A8930	gAiScript_NoAi	{U}
085A8A04	gAiScript_ActionInRange_ExceptNatasha	{U}
085A8B40	gAiScript_ActionInRange_ExceptOldCivilian	{U}
085A8B80	gAiScript_ActionInRange_ExceptNoOne	{U}
085A8BA0	gAiScript_ActionInRange_PrioritizeNoOne	{U}
085A8BE0	gAiScript_ActionInRange2	{U}
085A9254	g3RangePosOffsetLookup	{U}
085A92B8	gTerrainList_85A92B8	{U}
085A92DC	gTerrainList_85A92DC	{U}
085A9864	gFaceConfig_85A9864	{U}
085A9E48	gFaceConfig_85A9E48	{U}
085A9E68	gFaceConfig_85A9E68	{U}
085AA9FA	gObj_85AA9FA	{U}
085AAC5C	gMenuCommands_85AAC5C	{U}
085AADA0	gMenu_85AADA0	{U}
085AAE0C	gGfx_LinkArenaMenuOptionsText	{U}
085AB358	gGfx_SioMenuUi	{U}
085ABD68	gGfx_SioObjUi	{U}
085AD80C	gGfx_PointsBox	{U}
085AE7EC	gGfx_PhaseSwitchLinkArenaPlayerPhase	{U}
085B6430	gWindowFrameModelTSA	{U}
085B6440	gOldUIPalettePointers	{U}
085B6450	gNewUIPaletterPointers	{U}
085B6460	gOldUIGfxPointers	{U}
085B9D5C	gAISFrames_DummyNoFrames	{U}
085BA0B8	gGfx_NODAMGEMIS	{U}
085D5458	gThunderAnimBgTsaLookupClose	{U}
085D5460	gThunderAnimBgTsaLookupFar	{U}
085F2DC0	gGfx_ThunderAnimBg	{U}
085F367C	gThunderAnimBgPalArray	{U}
086926E0	gGfxIvaldiParticles	{U}
086937C0	gGfxIvaldiFastRay	{U}
086945C4	gPalIvaldiFastRay	{U}
08695B10	gGfxIvaldiBigSpark	{U}
08696840	gPalIvaldiBigSpark	{U}
0878D500	gPopupIconOAMData	{U}
0878D518	gAnimScr_PopupIcon	{U}
088035B0	gGfx_LevelUpBoxFrame	{U}
088039E8	gMap_LevelUpBoxFrame	{U}
08803B30	gGfx_BattlePopup	{U}
08803BD0	gGfx_BattlePopupTextBg	{U}
08803CD0	gTsa_BattlePopup	{U}
0880BB96	gSomeMovCostTable	{U}
0880BC18	gBallistaMovCostTable	{U}
088ADF39	gSlayerEffectivenessTable	{U}
089A2988	gDirectionMoveOffsetLookup	{U}
089A2C28	gMoveUnitStateCallTable	{U}
089A2C78	gWalkSpeedLookup	{U}
089A3ED4	gMapAnimLevelUpStatLabelLocationTable	{U}
089AC0A4	gGfxMISSAnim	{U}
089AC794	gGfx_LevelUpTextSmall	{U}
089ADEB0	gGfxPoisonEffectAnim	{U}
089AE224	gGfx_SomeWarpEffect	{U}
089AE7A4	gGfxSpark	{U}
089E8238	gGfxDialogueTextBubble	{U}
089E857C	gEventIdMaskLookup	{U}
089EE274	gEvent_LoadReinforcements	{U}
089EE2C4	gEvent_ConvoClearBackground	{U}
089EE310	gEvent_ConvoShowTextWithBg	{U}
089EEBE8	gEvent_ChPrologueBeginning	{U}
089F3634	gMenuCommands_RouteSplit	{U}
08A0285C	gGfxHelpTextBox	{U}
08A02884	gGfxHelpTextBox2	{U}
08A028AC	gGfxHelpTextBox3	{U}
08A02914	gGfxHelpTextBox4	{U}
08A02980	gGfxHelpTextBox5	{U}
08A191F4	gSomeTextIndexLookup	{U}
08A19200	gpStringBufferAlt	{U}
08A1951C	gShopSellTextIndexLookup	{U}
08A19524	gpShopSellStringBuffer	{U}
08A199C8	gGfxPrepMenuInputHelp	{U}
08A1A0A4	gGfxConvoyTopWIcons	{U}
08A1A23C	gGfxConvoyBottomWIcons	{U}
08A1B0D8	gGfx_SmolBrownNameBox	{U}
08A1FAF4	gpSaveDataStart	{U}
08A1FB30	gpDummyChapterDataSRAM	{U}
08A1FB34	gpDummyChapterData	{U}
08A21590	gpBonusClaimData	{U}
08A21594	gpBonusClaimDataUpdated	{U}
08A21598	gpBonusClaimItemList	{U}
08A2159C	gpBonusClaimItemCount	{U}
08A3918C	gShopPortraitIndexTable	{U}
08A3C860	gWMEvents_LordSplit	{U}
08A3CB04	gOverallRankWeightLookup	{U}
08A3CB1E	gOverallRankLookup	{U}
08A3D728	gWMFaceGfxData	{U}
08AA213C	gBgConfig_8AA213C	{U}
08AA7760	gGfx_TitleScreen	{U}
08AAB3F4	&PALETTE	gPal_TitleScreen	{U}
08AF1AE8	gGfxBarIntro	{U}
08AF1B38	gGfxNintyIntSysPresentsIntroText	{U}
08AF1FD0	gGfxEphraimEirikaIntroText	{U}
08AF2654	gGfxBubblesIntro	{U}
08B11D0C	gGfxHSWarning	{U}
08B12A60	gMenuGeometry_Promotion	{U}
08B12DB4	gGfx_ChapterIntroBackground	{U}
08B1754C	&PALETTE	gPal_ChapterIntroBackground	{U}
08B17B64	gGfx_8B17B64	{U}
08B18ED4	&PALETTE	gPal_8B18ED4	{U}
08000360	&ARM	ARM_ComputeChecksum32	{J}
08000BA0	InitRN	{J}
08000d28	GetGameClock	{J}
08001E20	SetColorEffectsFirstTarget	{J}
08001E5C	SetColorEffectsSecondTarget	{J}
08001E98	SetColorEffectBackdropFirstTarget	{J}
08001EB4	SetColorEffectBackdropSecondTarget	{J}
080021B4	Sound_IsSongPlaying	{J}
080022CC	Sound_FadeOut_800237C	{J}
08002440	Sound_SongVolumeTransitionAProc_Loop	{J}
080026D8	Sound_SongVolumeTransitionBProc_Loop	{J}
080027E0	Sound_PlaySongCore	{J}
08002820	SetSoundDefaultMaxChannels	{J}
08002838	SetSoundMaxChannels	{J}
0800284c	Sound_SetupMaxChannelsForSong	{J}
08003C50	Font_ResetAllocation	{J}
08004564	Text_Clear2DLine	{J}
080045E8	Text_Get2DVRAMTarget	{J}
08004608	DrawGlyph2DTile	{J}
0800493C	Text_DrawGlyphManual	{J}
080049D4	DrawSpecialUiChar_	{J}
08004A14	DrawSpecialUiChar	{J}
08004A50	DrawSpecialUiDecNumber	{J}
08004AEC	DrawUiSmallNumber	{J}
08004AF8	DrawStatScreenBonusNumber	{J}
08005390	_HiObjProc_Loop	{J}
080053B8	StartHiObjProc	{J}
080053FC	MoveHiObjProc	{J}
08005478	FindFreeFaceSlot	{J}
080054C4	FACE_Display	{J}
08005518	StartFaceAuto	{J}
08005678	SetFaceDisplayBits	{J}
08005694	SetFaceDisplayBitsById	{J}
080056AC	GetFaceDisplayBits	{J}
080056B0	GetFaceDisplayBitsById	{J}
0800633C	SetFaceBlinkControl	{J}
0800635C	SetFaceBlinkControlById	{J}
08006374	GetFaceBlinkProcUnknown8006470	{J}
080063F8	NewFace2	{J}
080066EC	Dialogue_ClearFaceReferences	{J}
08006710	Dialogue_InitGfx	{J}
080067B0	Dialogue_InitGfxObj	{J}
0800687C	Dialogue_InitFont	{J}
08006890	StartDialogue	{J}
08006934	StartDialogueFromIndex	{J}
08006974	StartDialogueParentless	{J}
08006980	EndDialogue	{J}
0800699C	ClearDialogueFlags	{J}
080069AC	SetDialogueFlag	{J}
080069CC	UnsetDialogueFlag	{J}
080069E0	CheckDialogueFlag	{J}
080069F4	Dialogue_SetCharacterDisplayDelay	{J}
08006A14	Dialogue_SetDefaultTextColor	{J}
08006A50	DialogueSkipInputListener_OnLoop	{J}
08006B04	DialogueMain_OnInit	{J}
08006B38	DialogueMain_OnLoop	{J}
08006CA4	DialogueMain_UpdateDisplay	{J}
0800773C	Dialogue_SetActiveFacePosition	{J}
08007BD4	NewTextBluArrowAndButtonChecker	{J}
08007CE4	StartDialogueTextChoice	{J}
08007D98	DialogueTextChoice_OnLoop	{J}
08008094	GetTextPauseDurationFromControlCode	{J}
080082DC	NewDialogueBoxAppearingAnimator	{J}
080088CC	DialogueExists	{J}
080088E4	Face6CExists	{J}
080088FC	GetLastDialoguePromptResult	{J}
08008A40	GetStringTextWidthWithDialogueCodes	{J}
08008E10	DialogueEnableBgSyncByMask	{J}
08009948	GameControl_8009A58	{J}
08009F34	nullsub_RestartGameAndGoto7	{J}
0800A004	String_ExpandNames	{J}
0800D654	StartGameOverEvent	{J}
0800D668	EventEngine_CanSkipMaybe	{J}
0800D6A8	SetDialogueSkipEvBit	{J}
0800D6D8	EventEngine_EnableSkip	{J}
0800D850	GetEventCounter	{J}
0800F704	UNIT_GetListSize	{J}
0800F7B0	LoadUnitsIdle	{J}
0800F86C	UNITs_LoadInstant_800F698	{J}
0800FAD0	UNIT_Filter	{J}
08011780	CreateItemStealingPopup	{J}
08011814	CreateNewUnitPopup	{J}
08013D40	IsFadeActive	{J}
08013D88	StartFadeInBlack	{J}
08013DA4	StartFadeOutBlack	{J}
08013DC0	StartBlockingFadeInBlack	{J}
08013DD8	StartBlockingFadeOutBlack	{J}
08013DF0	StartBlockingFadeInWhite	{J}
08013E08	StartBlockingFadeOutWhite	{J}
08013E20	StartFadeInBlackMedium	{J}
08013E2C	StartFadeInBlackSlow	{J}
08013E38	StartFadeInBlackFast	{J}
08013E44	StartFadeOutBlackMedium	{J}
08013E5C	StartFadeOutBlackFast	{J}
08013E78	StartBlockingFadeInBlackSlow	{J}
080143EC	SomeDrawTextCentered	{J}
08014450	SomeDrawTextInlineAutoWidth	{J}
08015434	MapMain_SwitchPhases	{J}
08015458	MapMain_ThisProbablyUsedToBeEventRelatedInEarlierGames	{J}
080154EC	MapMain_UpdateTraps	{J}
08015530	MapMain_StartIntroFx	{J}
080155E0	MapMain_ChapterSwitch	{J}
080160DC	UpdatePlayMapMusic	{J}
08016A68	GetItemRangeString	{J}
08017178	GetUnitsTotalHeldGoldValue	{J}
080181F4	GetUnitDropLocation	{J}
080184D4	CleanupUnitStatesForPhaseSwitch	{J}
0801856C	MapMain_UpdateUnitStatus	{J}
080188B4	GetRedTeamUseFlags	{J}
08019994	InitMapChangeGraphics	{J}
0801a304	GenerateMovementInstructionsToPoint	{J}
0801a508	ProcessUnitMovement	{J}
0801A5C0	MapMovementMarkMovementEdges	{J}
0801A5C0	MapMarkMovementEdges	{J}
0801B620	MapSetInMagicSealedRange	{J}
0801BE6C	UNUSED_StartupDebugMenu_WorldMapEffect	{J}
0801BEB4	UNUSED_StartupDebugMenu_ChapterSelectIdle	{J}
0801BED8	UNUSED_StartupDebugMenu_ChapterSelectEffect	{J}
0801C590	CanShowUnitStatScreen	{J}
0801C884	PlayerPhase_InitUnitMovementSelect	{J}
0801C91C	PlayerPhase_DisplayDangerZone	{J}
0801C984	PlayerPhase_RangeDisplayIdle	{J}
0801CC58	PlayerPhase_CancelAction	{J}
0801CC70	PlayerPhase_BackToMove	{J}
0801D20C	CanMoveActiveUnitTo	{J}
0801D288	PlayerPhase_DisplayUnitMovement	{J}
0801D2CC	PlayerPhase_ResumeRangeDisplay	{J}
0801D360	PlayerPhase_ReloadGameGfx	{J}
0801D44C	ASMC_801D7E8	{J}
0801D47C	PlayerPhase_RangeDisplayIdle_ForceAPress	{J}
0801E2E0	ForceMenuItemPanel	{J}
0801E3A4	UpdateMenuItemPanel	{J}
0801E6AC	EndMenuItemPanel	{J}
0801E868	StartUnitSwapAnimation	{J}
0801E8A0	UnitSwapAnimationExists	{J}
0801EF24	LoadPhaseIntroGraphics	{J}
0801F198	GasTrapEffectGfx_Setup	{J}
0801F258	StartGasTrapEffectGfxMaybe	{J}
0801F288	MineFireEffectGfx_Setup	{J}
0801F2E4	NewFireTrapEffectGfx	{J}
0801F314	NewMineTrapEffectGfx	{J}
0801F49C	StartLightArrowTrapGfx	{J}
0801FA1C	ChapterIntro_Bg3Scroll_Loop	{J}
0802137C	BeginLightRuneMapAnim	{J}
080222CC	BeginMineMapAnim	{J}
080226C0	MapMenuCommand_DangerZoneUnusedEffect	{J}
080258B4	MakeTerrainHealTargetList	{J}
0802599C	MakePoisonDamageTargetList	{J}
08025A14	MakeGorgonEggHatchTargetList	{J}
08025BD8	AddAsTarget_IfPositionCleanForSummon	{J}
080279D4	ResetMapSpriteHoverTimer	{J}
080279E0	HandleMapSpriteCursorHover	{J}
08028374	ClearUnitSupports	{J}
08028768	SwapUnitStats	{J}
0802A2A4	SimulateBattle	{J}
0802A2F0	SimulateBattleBallista	{J}
0802C28C	GetUnitEffectiveLevel	{J}
0802C2E0	GetUnitEffectivePowerLevel	{J}
0802C46C	ComputeExpFromBattle	{J}
0802C624	SetupBattleUnitEquippedWeapon	{J}
0802D218	TradeMenu_802D2E0	{J}
0802D3AC	TradeMenu_InitTextHandles	{J}
0802D3E0	TradeMenu_RefreshItemText	{J}
0802D6CC	TradeMenu_InitGraphics	{J}
0802D758	TradeMenu_802D820	{J}
0802D76C	TradeMenu_802D834	{J}
0802D850	TradeMenu_802D918	{J}
0802D8B8	TradeMenu_802D980	{J}
0802D9E4	TradeMenu_802DAAC	{J}
0802DA34	TradeMenu_802DAFC	{J}
0802DA80	TradeMenu_802DB48	{J}
0802DCA4	StartTradeMenu	{J}
0802E078	TradeMenu_802E140	{J}
0802E5C8	UpdateUnitsUnderRoof	{J}
0802F1A0	ExecUnlock	{J}
0802F238	ExecLatona	{J}
0802F728	ApplyStatBoosterAndGetMessageId	{J}
0802F860	ExecStatBooster	{J}
0802F99C	ExecItemMine	{J}
080300C4	EndGameVBlankProc	{J}
08030C44	InitClearChapterState	{J}
08030F30	GameControl_8030FE4	{J}
080310F4	ReloadGameCoreGraphics	{J}
0803113C	EndBMAPMAIN	{J}
08031160	ChapterEndUnitCleanup	{J}
0803124C	MapMain_ResumeFromPhaseIdle	{J}
08031288	MapMain_ResumeFromAction	{J}
08031308	MapMain_ResumeFromBerserkPhase	{J}
08031344	MapMain_ResumeFromArena	{J}
080313C0	MapMain_ResumeFromPhaseSwitch	{J}
08031438	SetTacticianName	{J}
08031E9C	CouldUnitUseAnyWeapon	{J}
080324F8	SpriteJumpAnimation_Loop	{J}
080325A4	SpriteJumpAnimation_ExecAnyTrap	{J}
080325B0	SpriteJumpAnimation_Cleanup	{J}
080325C0	DropRescuedUnitIfDead	{J}
08032674	KillUnitIfDefeatedBy	{J}
0803269C	KillUnitIfNoHealth	{J}
080327B8	BATTLE_HandleUnitDeaths	{J}
080328EC	BATTLE_HandleActiveUnitDeath	{J}
08032924	MoveCursor_SetLastCursorPosition	{J}
08032938	MoveCursor_CutPath	{J}
080329D8	MoveCursor_AddMovePoint	{J}
08032A54	MoveCursor_GetPointIndexForPosition	{J}
08032AB8	MoveCursor_AppendFromMoveBuffer	{J}
08032C4C	MoveCursor_FillMovementMapForEndPoint	{J}
08032C90	MoveCursor_RecomputePath	{J}
08032CBC	MoveCursor_8032DA0	{J}
080340D8	PrepScreenProc_LockGame	{J}
08034108	PrepScreenProc_HideEverythingAndUnlockGame	{J}
08034180	EndPrepScreen	{J}
08035858	IsBottomHelpTextActive	{J}
08035A2C	ExecSelfDamage	{J}
080366E4	DrawUnitNameForBattleForecast	{J}
08036918	BKSEL_DrawStandard	{J}
08036B70	BKSEL_DrawDetailed	{J}
08036DD0	BKSEL_Draw	{J}
08036F2C	BKSEL_Display	{J}
080375B4	MineFireTrap_DoSomeBWLStuffWhenKill	{J}
080375D0	FireTrap_StartGfx	{J}
080375E8	MineTrap_StartGfx	{J}
08037600	MineFireTrap_8037540	{J}
08037864	ExecTrapForActionTarget	{J}
080378C8	ExecTrap_QuietMaybe	{J}
080379F4	GetNonEmptyBallistaAt	{J}
08037E00	PrepScreenProc_AddPostgameUnits	{J}
08037F10	PrepScreenProc_TryAddUnit	{J}
08039724	CpPhase_Init	{J}
08039790	BskPhase_Init	{J}
080397F0	CpPhase_Cleanup	{J}
08039828	BskOrder_Init	{J}
08039910	GetUnitAiAttackPriority	{J}
080399B0	GetUnitAiPriority	{J}
08039AC8	SortAiUnitQueue	{J}
08039B40	CpDecide_Suspend	{J}
08039C98	AiSetDecision	{J}
08039CDC	AiUpdateDecision	{J}
08039D24	AiMasterDecisionMaker	{J}
08039F00	AiTargetCursor_Main	{J}
08039F44	StartAiTargetCursor	{J}
08039F6C	CpPerform_UpdateMapMusic	{J}
08039F84	CpPerform_MoveCameraOntoUnit	{J}
0803A024	CpPerform_BeginUnitMovement	{J}
0803A09C	AiRefreshMap	{J}
0803A16C	CpPerform_PerformEscape	{J}
0803A1AC	CpPerform_PerformSteal	{J}
0803A1F4	CpPerform_LootWait	{J}
0803A27C	CpPerform_StaffWait	{J}
0803A2B4	CpPerform_ChestWait	{J}
0803A2E8	CpPerform_DanceWait	{J}
0803A2EC	CpPerform_TalkWait	{J}
0803A330	CpPerform_RideBallistaWait	{J}
0803A330	CpPerform_ExitBallistaWait	{J}
0803A440	CpPerform_MoveCameraOntoTarget	{J}
0803A670	CpPerform_WaitAction	{J}
0803A6EC	CpPerform_DummyWait	{J}
0803A6F0	CpPerform_EscapeWait	{J}
0803A714	CpPerform_StealWait	{J}
0803A794	AiScriptCompare	{J}
0803A800	AiFindPositionOfCharacter	{J}
0803A8F0	AiFindClosestPositionWithUnitOfClass	{J}
0803a99c	AiGetClosestUnitPosition	{J}
0803AC5C	CouldStationaryUnitBeInRangeHeuristic	{J}
0803ACB0	CouldUnitBeInRangeHeuristic	{J}
0803AD38	IsTerrainIdInList	{J}
0803AD58	AiFindClosestTileInRangeWithListedTerrain	{J}
0803AE5C	GetPositionRangeWeight	{J}
0803AFFC	AiSomethingCheckPick	{J}
0803B3B0	AiAreEnemiesWithin3Tiles	{J}
0803B720	GetLesserWeightedAdjacentPosition	{J}
0803B79C	GetItemAiStealPriority	{J}
0803B7D0	AiGetBestItemSlotIndexToSteal	{J}
0803B810	AiFindUnitSafestTileToMoveTo	{J}
0803B904	AiGetLootingParameters	{J}
0803B99C	AiGetActiveUniChestKeyItemSlot	{J}
0803ba10	AiTryMoveTowards	{J}
0803bd70	FindClosestBestPosition	{J}
0803BF14	AiIsCharacterOnMap	{J}
0803BF60	AiArePointsWithinDistance	{J}
0803BFA4	AiIsPositionLootable	{J}
0803C420	AiFillMovementMapForUnit	{J}
0803C44C	AiExecAi1	{J}
0803C4A0	AiExecFallbackAi1	{J}
0803C4DC	AiExecAi2	{J}
0803C530	AiExecFallbackAi2	{J}
0803C56C	AiScript_Exec	{J}
0803C7D8	IsUnitNotActiveUnit	{J}
0803C7F4	IsUnitEnemyAndNotInTheAiInstList	{J}
0803C83C	IsUnitEnemyOrInTheAiInstList	{J}
0803C884	AiIsUnitScriptCharAndEnemyWithActiveUnit	{J}
0803C884	AiIsUnitScriptClassAndEnemyWithActiveUnit	{J}
0803D374	AiDoBerserkAction	{J}
0803D394	AiDoBerserkMove	{J}
0803D3E0	AiTryDoOffensiveAction	{J}
0803D810	AiFillUnitStandingRangeWithWeapon	{J}
0803DA98	GetEffectiveTileMovCost	{J}
0803DAF0	AiTryDoSteal	{J}
0803DC54	AiTrySimulateBattle	{J}
0803DDEC	AiGetTileWeightForAttack	{J}
0803DE54	ShouldAiNotBattle	{J}
0803DE58	AiSimulateBattle	{J}
0803DEC4	AiBattleGetDamageDealtWeight	{J}
0803DF24	AiBattleGetTargetHpWeight	{J}
0803DF4C	AiBattleGetAlliesAroundWeight	{J}
0803DFF8	AiBattleGetWeight_803E068	{J}
0803E02C	AiBattleGetTurnNumberWeight	{J}
0803E044	AiBattleGetDamageTakenWeight	{J}
0803E0A4	AiBattleGetTileDangerWeight	{J}
0803E0E0	AiBattleGetSubjectHpWeight	{J}
0803E108	ComputeAiAttackWeight	{J}
0803E17C	AiGetUnitReachWeightWithEquippedWeapon	{J}
0803E1CC	AiGetPositionTerrainSafetyWeight	{J}
0803E20C	AiGetPositionUnitSafetyWeight	{J}
0803E284	SetupAiDangerMap	{J}
0803E2B0	FillAiDangerMap	{J}
0803E3D8	IsAiTileSafe	{J}
0803E6A8	AiUnitTryHealSelf	{J}
0803E760	AiUnitTryMoveTowardsEscapePoint	{J}
0803ECB8	AiTryDoDanceAdjacent	{J}
0803EDDC	AiTryDoStealAdjacent	{J}
0803EF70	AiIsUnitAtPositionDifferentAllegiance	{J}
0803F958	AiGetStaffAiIndex	{J}
0803F9C0	AiTryDoStaff	{J}
0803FA68	GetAiSafestAccessibleAdjacentPosition	{J}
080407C4	AiTryDoSpecialItems	{J}
08040B34	AiSomethingGetPick	{J}
08040BDC	AiTrySomethingPick	{J}
08040D4C	AiSetMovCostTableWithPassableWalls	{J}
08040D84	AiSetMovCostTableWithTerrainSetAsPassable	{J}
08040E18	InitAiMoveMapForUnit	{J}
08040EA8	AiMapRangeFillMovementWithPassableWalls	{J}
08040F08	InitAiRangeMoveMapForUnitWithDoorsPassable	{J}
0804195C	OnSerialCommunication	{J}
08041B9C	SioVSync_8041C1C	{J}
08041CE8	SioReady	{J}
08041D44	SioMain_8041DC4	{J}
08042D90	SioCon_8042E0C	{J}
08042DB0	SioCon_8042E2C	{J}
08042DFC	SetGameLinkArenaBit	{J}
08042E0C	ClearGameLinkArenaBit	{J}
08043190	SioPlaySomeIndexedSfx	{J}
08044694	NameSelect_DrawNameText	{J}
080446FC	NameSelect_8044768	{J}
08044BF0	NameSelect_8044C54	{J}
08044E74	NameSelect_8044ED8	{J}
08044F24	OnNameSelectHBlank	{J}
08044F84	NameSelect_8044FE4	{J}
08044F9C	NameSelect_8044FFC	{J}
08044FDC	NameSelect_804503C	{J}
08045008	NameSelect_8045068	{J}
080450A8	NameSelect_8045108	{J}
08045190	NameSelect_80451F0	{J}
080479D0	CheckSomethingSaveRelated	{J}
08047A0C	SioMenu_8047AF4	{J}
08047A4C	SioMenu_8047B34	{J}
08047B78	SioMenu_8047C60	{J}
08047C08	SioMenu_8047CF0	{J}
08047CA0	SioMenu_8047D88	{J}
08047F10	SioMenu_8047FF8	{J}
08047FCC	SioMenu_80480B4	{J}
08048080	SioMenu_8048168	{J}
08048178	StartNameSelect	{J}
0804BCCC	ITEMRANGEDONE_sub_804AF2C	{J}
0804C5A0	BeginLinkArenaBattle	{J}
0804F528	UpdateHandCursor	{J}
080501E8	Menu_HelpBoxInit	{J}
08050214	Menu_HelpBoxIdle	{J}
08050294	MenuCallHelp	{J}
080502A4	Menu_TextBoxIdle	{J}
08050328	Menu_804F5B4	{J}
080503A0	UnMarkSomethingInMenu	{J}
08052FFC	StartEfxHpBar	{J}
080532DC	StartEfxHpBarResire	{J}
08053668	StartEfxAvoid	{J}
080536FC	StartEfxHpBarLive	{J}
08053888	StartEfxNoDamage	{J}
08053A7C	StartEfxStatusCHG	{J}
08053AC4	StartEfxDeadEVTENT	{J}
08053C9C	StartEfxDead	{J}
08053E10	StartEfxDeadPika	{J}
080540c0	MoveBattleCameraOnto	{J}
0805441C	StartEfxQuake	{J}
080546C8	StartEfxHitQuake	{J}
08055128	StartEfxFlashHPBar	{J}
080552A8	StartEfxHPBarColorChange	{J}
08055398	EndEfxHPBarColorChange	{J}
080554C4	StartEfxFlashUnit	{J}
08055B64	StartEfxWeaponIcon	{J}
08055BA4	EndEfxWeaponIcon	{J}
08055BC0	PauseEfxWeaponIcon	{J}
08055BD0	ResumeEfxWeaponIcon	{J}
08055BE0	EfxWeaponIcon_OnLoop	{J}
08055C48	EfxWeaponIcon_OnEnd	{J}
08055CD0	StartEndEfxSpellCast	{J}
08056214	SpellFx_ClearColorEffects	{J}
08056240	StartBattleAnimHitEffects	{J}
0805660C	SpellFx_WriteBgMap	{J}
08057D18	EkrWindowAppear_Loop	{J}
08057DE8	HasEkrNamewinAppearEnded	{J}
08059864	GetBattleAnimRoundTypeFlags	{J}
08059890	GetSomeBattleAnimHpValue	{J}
0805A6C8	EkrChienCHR_OnLoop	{J}
0805AE20	SwitchAISFrameDataFromBARoundType	{J}
0805AEF8	GetAISLayerId	{J}
0805B094	GetAISNextBattleAnimRoundType	{J}
0805B784	EndEkrAnimeDrvProc	{J}
0805B7A4	StartEkrUnitMainMini	{J}
0805B7F0	EkrUnitMainMini_OnLoop	{J}
0805BDCC	GetBattleAnimArenaFlag	{J}
0805BE20	PlayBattleCroudSfxIfArena	{J}
0805EA38	EfxThunderBG_Main	{J}
0805DF40	StartEfxThunderBGCOL	{J}
0805EAF8	EfxThunderBGCOL_Main	{J}
0805EB44	StartEfxThunderOBJ	{J}
0805EBA4	EfxThunderOBJ_Main	{J}
0806E940	StartEfxDamagaMojiEffect	{J}
0806E9A0	StartEfxDamageMojiEffectOBJ	{J}
0806EA40	StartEfxCriticalEffect	{J}
0807032C	StartEfxChillEffect	{J}
080704AC	StartEfxChillAnime	{J}
08073820	ApplyFlashingPaletteAnimation	{J}
08073BA4	GetOtherRN_N	{J}
08073BBC	StartEkrsubAnimeEmulator	{J}
08073F70	Unset20200AC	{J}
08077374	HasBattleAnimTriangeAttackEnded	{J}
080773B8	EkrTriangle_OnLoop	{J}
080775BC	StartEkrPegasusKnight	{J}
080776B4	StartEkrPegasusKnightBG	{J}
0807A8FC	MU_ManualUpdate	{J}
0807AB94	MU_IsActive	{J}
0807ABE8	MU_CreateScripted	{J}
0807B06C	MU_State_None	{J}
0807B4E0	MU_80790CC	{J}
0807B50C	MU_GetComputedEndPosition	{J}
0807B950	MU_SetMoveConfig	{J}
0807BA68	MU_BlinkEffect_OnLoop	{J}
0807BAA0	MU_StartBlinkEffect	{J}
0807BAE8	MU_SetupPixelEffect	{J}
0807BB44	MU_PixelEffect_OnLoop	{J}
0807BB9C	MU_StartPixelEffect	{J}
0807BBF0	MU_Show	{J}
0807BC08	MU_SetDisplayOffset	{J}
0807BC18	MU_StartFlashFade	{J}
0807BC6C	MU_8079858	{J}
0807BCA0	MU_807988C	{J}
0807BCFC	MU_StartDelayedFaceTarget	{J}
0807BD20	MU_EndRefaceApAnim	{J}
0807BD84	MU_StartCritFlash	{J}
0807BDB4	MU_CritFlash_Init	{J}
0807BDBC	MU_CritFlash_SetFadedPalette	{J}
0807BDDC	MU_CritFlash_SetRegularPalette	{J}
0807BE00	MU_CritFlash_StartFadeBack_maybe	{J}
0807BE24	MU_CritFlash_SpriteShakeLoop	{J}
0807BE64	MU_CritFlash_RestorePalette	{J}
0807BE88	MU_StartHitFlash	{J}
0807BDDC	MU_HitFlash_RestorePalette	{J}
0807BF80	MU_SetPaletteId	{J}
0807BFF4	MU_SortObjLayers	{J}
0807C1DC	MuCtr_CreateWithReda	{J}
0807C5F0	MuCtr_OnEnd	{J}
0807C74C	MuCtr_ExecREDA_807A358	{J}
0807CAC0	MapAnimProc_DisplayItemStealingPopup	{J}
0807CD3C	MapAnimProc_DisplayDeathQuote	{J}
0807CD9C	MapAnimProc_DisplayDeathFade	{J}
0807CDE8	MapAnimProc_DisplayExpBar	{J}
0807D924	BeginSelfDamageMapAnim	{J}
0807DF38	MapAnimUi_Clear	{J}
0807E370	MapAnimExpBar_LoadGfx	{J}
0807E420	MapAnimExpBar_FillInit	{J}
0807E43C	MapAnimExpBar_FillLoop	{J}
0807E490	MapAnimExpBar_TransitionInInit	{J}
0807E4F0	MapAnimExpBar_TransitionInLoop	{J}
0807E554	MapAnimExpBar_StartLevelUp	{J}
08080DD8	MapAnimLevelUp_InitLevelUpBox	{J}
08080EE4	MapAnimLevelUp_DrawActorStat	{J}
0808144C	MapAnim_StartLevelUp	{J}
080814EC	MapAnimLevelUpProc_InitLevelUpBox	{J}
080817B8	MapAnimLevelUpProc_StartMusicThingy	{J}
080817CC	MapAnimLevelUpProc_DisplayLevelUpSmallText	{J}
0808187C	MapAnimLevelUpProc_ClearLevelUpSmallText	{J}
0808392C	MapAnim_MoveCameraOnWarpTarget	{J}
08083EB0	MapAnim_TargetUnitWarpRing	{J}
08083F0C	MapAnim_WarpTargetWarpRing	{J}
08084014	MapAnim_TargetUnitFlashOut	{J}
08084038	MapAnim_TargetUnitFlashIn	{J}
08084038	MapAnim_TargetHide	{J}
08084080	MapAnim_TargetStarExplosion	{J}
080840C4	MapAnim_TargetStarImplosion	{J}
08084038	MapAnim_TargetShow	{J}
08084144	MapAnim_MoveTargetForWarp	{J}
08085588	ShouldCallEndEvent	{J}
080855A4	MaybeCallEndEvent_	{J}
080855B8	CallEndEvent	{J}
08085620	MaybeCallEndEvent	{J}
080856E8	GetChapterEnemyUnitDefinitions	{J}
08085738	GetChapterSkirmishLeaderClasses	{J}
080858E0	ShouldDisplayDeathQuoteForChar	{J}
08085914	DisplayDeathQuoteForChar	{J}
08085B68	EvCheck00_Always	{J}
08085D48	EvCheck09_	{J}
08085E4C	EvCheck0C_Never	{J}
08085E50	EvCheck0D_Never	{J}
08085E54	EvCheck0E_	{J}
08085E80	EvCheck0F_	{J}
08085EC0	EvCheck10_	{J}
08086040	ClearGlobalTriggerState	{J}
0808605C	CheckGlobalEventIdFrom	{J}
0808615C	CheckTutorialEvent	{J}
08086288	RunCharacterEvents	{J}
0808639C	RunLocationEvents	{J}
08086784	RunMoveEventsMaybe	{J}
080867d8	RunPostMoveEvents	{J}
0808682C	CheckBattleForecastTutorialEvent	{J}
08086848	RunBattleForecastTutorialEvent	{J}
0808685C	RunPlayerPhaseStartTutorialEvent	{J}
08086870	ClearActiveEventRegistry	{J}
08086884	RegisterEventActivation	{J}
080868B0	GetEventTriggerId	{J}
080869B0	GetCharDeathQuoteEntry	{J}
08089B58	DrawStatScreenPage	{J}
0808A8FC	DrawStatScreen	{J}
0808ABAC	StatScreenBGVPosManager_Loop	{J}
0808ABD8	StartStatScreen	{J}
0808B894	LoadChapterTitleGfx	{J}
080943BC	StartUnitListMenu	{J}
08094EC4	SortUnitList_GetUnitSoloAnimation	{J}
08094ED0	SortUnitList	{J}
08097634	GetPrepScreenUnitListEntry	{J}
08097644	SetPrepScreenUnitListEntry	{J}
08097654	GetPrepScreenUnitListSize	{J}
08097664	SetPrepScreenUnitListSize	{J}
080979B8	ReorderPlayerUnitsBasedOnDeployment	{J}
08097B9C	InitPrepScreenUnitList	{J}
08097C94	AtMenu_AutoDeployPrepScreenUnits	{J}
08097CFC	RestartScreenMenuScrollingBg	{J}
08098708	AtMenu_LockGame	{J}
080A7680	SramInit	{J}
080A76F4	IsSramWorking	{J}
080A7740	ComputeChecksum16	{J}
080A7814	SaveGeneralGameMetadataNoChecksum	{J}
080A793C	SaveMetadata_Load	{J}
080A79D8	SaveMetadata_Save	{J}
080A7B58	GetSaveSourceAddress	{J}
080A7C04	LoadPermanentEidsIn	{J}
080A8234	GGM_IsCharacterKnown	{J}
080A8278	GGM_IsAnyCharacterKnown	{J}
080A8338	LoadBonusContentData	{J}
080A8394	SaveBonusContentData	{J}
080A8B48	SaveClearedBWLAndChapterWinData	{J}
080A9348	BWL_GetTotalBattles	{J}
080A936C	BWL_GetTotalWins	{J}
080A9560	IsPlaythroughIdUnique	{J}
080A95B0	GetNewPlaythroughId	{J}
080A95D4	GGM_GetCompletionCount	{J}
080A95F4	GetGlobalCompletionCount	{J}
080A9614	GGM_RegisterCompletedPlaythrough	{J}
080A964C	GetCurerentGameMode	{J}
080A976C	GetBonusContentClaimFlags	{J}
080A97C4	UpdateLastUsedGameSaveSlot	{J}
080A97E4	GetLastUsedGameSaveSlot	{J}
080A984C	CopyGameSave	{J}
080A98B4	SaveNewGame	{J}
080A9C30	SaveMetadata_CheckId	{J}
080A9C44	LoadSavedChapterState	{J}
080A9C64	LoadSavedBonusClaimFlags	{J}
080A9C8C	LoadSavedWMStuff	{J}
080A9CA8	LoadSavedEid8A	{J}
080AA438	ClearSaveBlock	{J}
080AA814	LoadSuspendedChapterState	{J}
080AADC8	GetLastSuspendSaveId	{J}
080AADE8	GetNextSuspendSaveId	{J}
080AADF8	UpdateNextSuspendSaveId	{J}
080AAE20	ComputeSaveChecksum	{J}
080AAE48	SaveMetadata_VerifyChecksum	{J}
080AAE6C	SaveMetadata_ComputeChecksum	{J}
080ABAC8	SaveWMStuff	{J}
080ABB50	LoadWMStuff	{J}
080B261C	StartSmallBrownNameBoxes	{J}
080B2730	EndSmallBrownNameBoxes	{J}
080B5378	InitBonusContentClaimList	{J}
080B54AC	DrawBonusItemMenuEntry	{J}
080B5640	SetBonusContentClaimed	{J}
080B56F8	ClaimBonusItemMenu_Init	{J}
080B5954	ClaimBonusItemMenu_MainLoop	{J}
080B62A8	StartClaimBonusItemMenu	{J}
080BDE9C	GM_80B8FD4	{J}
080BE01C	GM_80B9154	{J}
080D1730	NewPromotion	{J}
080D59C0	CgbModVol	{J}
080D6588	llsl_thumb	{J}
080D69BC	strcpy	{J}
080D6A80		gcc2_compiled	_15	{J}
080D9310		gcc2_compiled	_26	{J}
080DA8E0		gcc2_compiled	_39	{J}
080DA970		gcc2_compiled	_43	{J}
080DC3F0	psZero	{J}
080DC41C	gpGenericMiniMugPalettes	{J}
080DC52C	gpDialogueTextBoxGfx	{J}
080DC608	&TEXTBATCH	gRangeTextIdArray	{J}
080DC630	gWRankTextIdArray	{J}
080DC650	gWRankNameIdArray	{J}
080DC658	&TEXTBATCH	gWTypeTextIdArray	{J}
080DC974	gTradeMenuText_xLookup	{J}
080DC976	gTradeMenuText_yLookup	{J}
080DC9EC	gNullString	{J}
080DCC8C	gTextSpeedLookup	{J}
080DCCE4	gBattleForecastLabelStringIndexes	{J}
080DCDA0	gPhaseUnitMaxLookup	{J}
080DCDC4	gAiEscapeMoveScriptTable	{J}
080DCDD0	gAdjacentTileOffsetLookup	{J}
080DD35C	gPhaseUnitCountTable	{J}
080DD368	gStaffAiPerformTable	{J}
080DD36C	gStaffAiPerformTable_2	{J}
080DD3D0	gSpecialItemAiPerformTable	{J}
080DEEBC	gSioMenuProcLookup	{J}
080DEFD0	gBgConfig_80D9FE4	{J}
080DFEA6	gBattleAnimRoundTypeLookup_2Miss	{J}
080DFEB0	gBattleAnimRoundTypeLookup_2Crit	{J}
080DFEBA	gBattleAnimRoundTypeLookup_Miss	{J}
080DFEC4	gBattleAnimRoundTypeLookup_NotMiss	{J}
080DFECE	gBattleAnimRoundTypeLookup_2MissMagic	{J}
080DFED8	gBattleAnimRoundTypeLookup_2CritMagic	{J}
080DFF00	gBattleAnimModeLookupMaybe	{J}
080E1D1A	gThunderAnimBgTsaScript	{J}
080E1D34	gThunderAnimBgPalScript	{J}
080E69AC	gAnimsOnLevelUpStatDisplayPositionLookup	{J}
081F54DC	gStatScreenDrawCallTable	{J}
081F56AC	gConvoyUseSaveLookup	{J}
081F56B4	gConvoyUseSaveLookup2	{J}
081F5BEC	gCombatRankLookup	{J}
081F5BF0	gSurvivalRankLookup	{J}
081F5C48	gSomeGmapUnitTable	{J}
081F6534	gSomeDefaultsByWMSpriteIndex	{J}
081F6CF4	gTraineePromotionTable	{J}
082140B4	gMPlayTable	{J}
085B8D84	gDefaultFaceGfxData	{J}
085B9884	gStringArticleLookup	{J}
085C2926	gObj_CursorFixed	{J}
085C2E50	gpTileTerrainConfig	{J}
085C2E54	gMapRawTiles	{J}
085C2F1C	gChapterIdOrderedList	{J}
085C3188	gRangeDisplaySquareLookup	{J}
085C39E8	gGfx_859B540	{J}
085C3B48	gpSMSGfxDecompBuffer	{J}
085C3B4C	gSomeSMSLookupTable_859B66C	{J}
085C3B5C	gSomeSMSLookupTable_859B67C	{J}
085C3FBC	gTradeMenuItemDispPosLookup	{J}
085C54B4	gChargeDebugMenuDef	{J}
085C54D8	gDebugStartupMenuDef	{J}
085C54FC	gSomeDebugMenuDef	{J}
085C5520	gMenu_MapDebug	{J}
085C7540	gGfx_PhaseSwitchFrame	{J}
085C7918	gGfx_PlayerPhaseIntro	{J}
085C7F4C	&PALETTE	gPal_PlayerPhaseIntro	{J}
085C7F6C	gGfx_EnemyPhaseIntro	{J}
085C8588	&PALETTE	gPal_EnemyPhaseIntro	{J}
085C85A8	gGfx_OtherPhaseIntro	{J}
085C8BB8	&PALETTE	gPal_OtherPhaseIntro	{J}
085C8BF8	gGfx_PhaseSwitchSquares	{J}
085C91A0	gBattleForecast_x2x4Gfx	{J}
085CAE60	gGfxMineFireEffectGfx	{J}
085D1BC8	gImg_MineAnimGfx	{J}
085D1E60	gpAIUnitPriorityBuffer	{J}
085D1EA4	gAiDecisionMakerCallTable	{J}
085D1FC4	gSomeRangeTileOffsetLookup	{J}
085D2028	gTerrainList_LootableVillages	{J}
085D202C	gTerrainList_LootableVillagesAndChests	{J}
085D2034	gAi_FallbackAi1	{J}
085D2044	gAi_FallbackAi2	{J}
085D2058	gAiTableOfNullTables	{J}
085D2194	gGreenMasterAiEscapeTable	{J}
085D2298	gAI3HealingThresholdTable	{J}
085D2318	gAiScript_Ai2x00	{J}
085D2358	gAiScript_Ai2x12_85A8450	{J}
085D2388	gAiScript_Ai2x11_85A8480	{J}
085D2418	gAiScript_Ai2x04_85A8510	{J}
085D2478	gAiScript_EscapeMaybe	{J}
085D2778	gAiScript_ActionInRange	{J}
085D2798	gAiScript_ActionInRange_80Perc	{J}
085D27B8	gAiScript_ActionInRange_50Perc	{J}
085D27D8	gAiScript_ActionStanding	{J}
085D27F8	gAiScript_ActionStanding_80Perc	{J}
085D2818	gAiScript_ActionStanding_50Perc	{J}
085D2838	gAiScript_NoAi	{J}
085D2AA8	gAiScript_ActionInRange_PrioritizeNoOne	{J}
085D2778	gAiScript_ActionInRange2	{J}
085D315C	g3RangePosOffsetLookup	{J}
085D31C0	gTerrainList_85A92B8	{J}
085D31E4	gTerrainList_85A92DC	{J}
085D376C	gFaceConfig_85A9864	{J}
085D3D50	gFaceConfig_85A9E48	{J}
085D376C	gFaceConfig_85A9E68	{J}
085D4A9E	gObj_85AA9FA	{J}
085D4EB0	gGfx_LinkArenaMenuOptionsText	{J}
085D53FC	gGfx_SioMenuUi	{J}
085D6004	gGfx_SioObjUi	{J}
085D7AB0	gGfx_PointsBox	{J}
085E0610	gWindowFrameModelTSA	{J}
085E0620	gOldUIPalettePointers	{J}
085E0620	gNewUIPaletterPointers	{J}
085E0640	gOldUIGfxPointers	{J}
085E3F8F	gAISFrames_DummyNoFrames	{J}
085E42E8	gGfx_NODAMGEMIS	{J}
08857B08	gGfx_LevelUpBoxFrame	{J}
08857F40	gMap_LevelUpBoxFrame	{J}
08858088	gGfx_BattlePopup	{J}
08858128	gGfx_BattlePopupTextBg	{J}
08858228	gTsa_BattlePopup	{J}
088600EE	gSomeMovCostTable	{J}
08860170	gBallistaMovCostTable	{J}
089024C5	gSlayerEffectivenessTable	{J}
08A13010	gDirectionMoveOffsetLookup	{J}
08A132B0	gMoveUnitStateCallTable	{J}
08A13300	gWalkSpeedLookup	{J}
08A1455C	gMapAnimLevelUpStatLabelLocationTable	{J}
08A1C72C	gGfxMISSAnim	{J}
085E52F8	gGfx_LevelUpTextSmall	{J}
08A1E538	gGfxPoisonEffectAnim	{J}
08A1E8AC	gGfx_SomeWarpEffect	{J}
08A1EE2C	gGfxSpark	{J}
08A5A35C	gGfxDialogueTextBubble	{J}
08A5A6A0	gEventIdMaskLookup	{J}
08031e18	Get a premium for stadium	{J}
08031DEC	Set premium for stadium	{J}
08031E24	Acquisition of Match Results in Arena	{J}
080A0AFC	Send item to transporter on advancement preparation screen	{J}
080A0568	Receive items from transporters on Advance Attack Screen	{J}
0809FCA0	When you access transporter on advancement preparation screen	{J}
0809C804	On advancement preparation screen, all deposits	r0=@Unit	{J}
08031ecc	Get a premium for stadium	{U}
08031EA0	Set premium for stadium	{U}
08031ED8	Acquisition of Match Results in Arena	{U}
0809E85C	Send item to transporter on advancement preparation screen	{U}
0809E2C8	Receive items from transporters on Advance Attack Screen	{U}
0809DA00	When you access transporter on advancement preparation screen	{U}
0809A538	On advancement preparation screen, all deposits	r0=@Unit	{U}
0803FB38	AI's staff use judgment	Heal	Mend	Recover	{J}
0803FCB0	AI's staff use judgment	Physic	Rescue	{J}
0803FE80	AI's staff use judgment	Fortify	{J}
0803FF8C	AI's staff use judgment	Warp	{J}
080400E4	AI's staff use judgment	Restore	{J}
080402D4	AI's staff use judgment	Silence	{J}
08040460	AI's staff use judgment	Sleep	Berserk	{J}
080405E4	AI's staff use judgment	Barrier	{J}
0803FBB8	AI's staff use judgment	Heal	Mend	Recover	{U}
0803FD30	AI's staff use judgment	Physic	Rescue	{U}
0803FF00	AI's staff use judgment	Fortify	{U}
0804000C	AI's staff use judgment	warp	{U}
08040164	AI's staff use judgment	Restore	{U}
08040354	AI's staff use judgment	Sleep	Berserk	{U}
080404E0	AI's staff use judgment	Barrier	{U}

08012A14	WarpIN_Event_Sub	{J}
08021A2C	WarpIN_Event_Sub_2	{J}
08012950	WarpIN_Event_Sub	{U}
08021d34	WarpIN_Event_Sub_2	{U}
08A156DC	&PROC	UNUSE Item Effect	1	{J}
089A5054	&PROC	UNUSE Item Effect	1	{U}
080379C0	AddGorgonEggTrap	{J}
08030220	Set weather object	Snow	{J}
08030434	Set weather object	Sandstorm	{J}
0803054C	Set weather object	Snowstorm	{J}
08030344	Set weather object	Rain	{J}
08030930	Set weather object	Lava	{J}
080309D4	Set weather object	Cloudy	{J}
0803082C	Set weather object	Lava	Subroutine 1	{J}
08030898	Set weather object	Lava	Subroutine 2	{J}
080302d0	Set weather object	Snow	{U}
080304e4	Set weather object	Sandstorm	{U}
080305fc	Set weather object	Snowstorm	{U}
080303f4	Set weather object	Rain	{U}
080309e0	Set weather object	Lava	{U}
08030a84	Set weather object	Cloudy	{U}
080308dc	Set weather object	Lava	Subroutine 1	{U}
08030948	Set weather object	Lava	Subroutine 2	{U}
08030B5C	If weather on map is cloudy, set cloudy data	{J}
08030A50	Set weather object	Cloudy	Execution routine	{J}
08030C0C	If weather on map is cloudy, set cloudy data	{U}
08030b00	Set weather object	Cloudy	Execution routine	{U}
080BDEF0	DrawUnitSpriteOnWorldmap	{J}
080D2EBC	Draw one item item in dictionary	{J}
080D2F44	Draw item items in dictionary	{J}
080D39AC	Draw screen of dictionary	{J}
080B9774	Reading shop screen	{J}
080B9028	DrawUnitSpriteOnWorldmap	{U}
080CE1C0	Draw one item item in dictionary	{U}
080CE248	Draw item items in dictionary	{U}
080CECB0	Draw screen of dictionary	{U}
080B4BEC	Reading shop screen	{U}
08051FB8	ekrGauge_Loop	{J}
080BC2A4	Draw a clear-turn list	{J}
08024608	Drawing screen when using recovery wand	{J}
08024658	Drawing screen when using recovery wand	{U}
080313FC	When Using MNC4, Strategy evaluation called from GAMECTRL	{J}
080A858C	Subroutine to give martial player name and strategy evaluation	{J}
080314B0	When Using MNC4, Strategy evaluation called from GAMECTRL	{U}
080A3B48	Subroutine to give martial player name and strategy evaluation	{U}
08009CF8	If suppression flag 0x03 is set, write number of clear turns	{J}
08009D98	If suppression flag 0x03 is set, write number of clear turns	{U}
08050B44	nullsub_25	{J}
08050CD4	nullsub_26	{J}
08049878	nullsub_27	{J}
08000C1C	nullsub_28	{J}
08003398	nullsub_29	{J}
080044A0	nullsub_30	{J}
08007BD0	nullsub_31	{J}
080086A0	nullsub_32	{J}
08008E0C	nullsub_33	{J}
0800CFAC	nullsub_34	{J}
0800CFFC	nullsub_35	{J}
0800D0AC	nullsub_36	{J}
0800D4C8	nullsub_37	{J}
0800D7E8	nullsub_38	{J}
08011B04	nullsub_39	{J}
08012F4C	nullsub_40	{J}
080134E0	nullsub_41	{J}
08015260	nullsub_42	{J}
08016148	nullsub_43	{J}
0801B720	nullsub_44	{J}
0801B750	nullsub_45	{J}
0802468C	nullsub_46	{J}
08024834	nullsub_47	{J}
08024854	nullsub_48	{J}
0802A8C4	nullsub_49	{J}
080420B8	nullsub_50	{J}
0804D140	nullsub_51	{J}
08051B14	nullsub_52	{J}
08054418	nullsub_53	{J}
0805C1A0	nullsub_54	{J}
08075780	nullsub_55	{J}
08076A48	nullsub_56	{J}
08076A70	nullsub_57	{J}
0807866C	nullsub_58	{J}
080789B8	nullsub_59	{J}
080793F0	nullsub_60	{J}
080797B8	nullsub_61	{J}
08079ECC	nullsub_62	{J}
0808359C	nullsub_63	{J}
08092E1C	nullsub_64	{J}
080975AC	nullsub_65	{J}
080A29F4	nullsub_66	{J}
080A767C	nullsub_67	{J}
080A82AC	nullsub_68	{J}
080B0E84	nullsub_69	{J}
080B2898	nullsub_70	{J}
080B3AE0	nullsub_71	{J}
080B51D8	nullsub_72	{J}
080B7130	nullsub_73	{J}
080B8EB0	nullsub_74	{J}
080BAE5C	nullsub_75	{J}
080BB178	nullsub_76	{J}
080BD054	nullsub_77	{J}
080BD544	nullsub_78	{J}
080C08C4	nullsub_79	{J}
080C0CF8	nullsub_80	{J}
080C20B4	nullsub_81	{J}
080C2224	nullsub_82	{J}
080C29E8	nullsub_83	{J}
080C43A4	nullsub_84	{J}
080C4B60	nullsub_85	{J}
080C532C	nullsub_86	{J}
080C66A4	nullsub_87	{J}
080C6D94	nullsub_88	{J}
080C7A0C	nullsub_89	{J}
080C8C7C	nullsub_90	{J}
080D2AD0	nullsub_91	{J}
080DA93C	nullsub_92	{J}
0801B71C	Get0x17	1	{J}
08022578	Get0x17	2	{J}
080226FC	Get0x17	3	{J}
08003BC0	Return False	1	{J}
08022868	Return False	2	{J}
08029044	Return False	3	{J}
080855FC	Return False	4	{J}
08085600	Return False	5	{J}
08085604	Return False	6	{J}
08085608	Return False	7	{J}
0808560C	Return False	8	{J}
08086D50	Return False	9	{J}
08086D54	Return False	10	{J}
08086D58	Return False	11	{J}
08086D5C	Return False	12	{J}
08086D60	Return False	13	{J}
08086D64	Return False	14	{J}
08086D68	Return False	15	{J}
08086D6C	Return False	16	{J}
08086D70	Return False	17	{J}
08086D74	Return False	18	{J}
08086D78	Return False	19	{J}
08086D7C	Return False	20	{J}
08086D80	Return False	21	{J}
08086D84	Return False	22	{J}
08086D88	Return False	23	{J}
08086D8C	Return False	24	{J}
08086D90	Return False	25	{J}
08086D94	Return False	26	{J}
08086D98	Return False	27	{J}
08086D9C	Return False	28	{J}
08086DA0	Return False	29	{J}
08086DA4	Return False	30	{J}
0808761C	Return False	31	{J}
0808763C	Return False	32	{J}
08088250	Return False	33	{J}
0808FA60	Return False	34	{J}
0808FA68	Return False	35	{J}
08099F9C	Return False	36	{J}
080AB748	Return False	37	{J}
080AB74C	Return False	38	{J}
080B38B0	Return False	39	{J}
0802BFF8	Return True	1	{J}
0803D3CC	Return True	2	{J}
08086D4C	Return True	3	{J}
080A2D24	Return True	4	{J}
080A7D30	Return True	5	{J}
080A7D6C	Return True	6	{J}
0801BA68	Menu Function Always 0	{J}
080BB170	Get_CG_Table	{J}
080B65EC	Get_CG_Table	{U}
08A79E90	&LZ77	Boot data	Images like thunder	ONLY FE8J	{J}
080D2588	Get word of Trainee CC 2	{J}
080D2588	Get word of Trainee CC 3	{J}
080D25E8	Get word of Trainee CC 4	{J}
080D2648	Get word of Trainee CC 5	{J}
080D26A8	Get word of an Trainee CC 6	{J}
08FE1554	Debug routine at end of ROM	1	{J}
08FE1688	Debug routine at end of ROM	2	{J}
08FE1768	Debug routine at end of ROM	3	{J}
08FE19EC	Debug routine at end of ROM	4	{J}
08FE1DB0	Debug routine at end of ROM	5	{J}
08FE1E4C	Debug routine at end of ROM	6	{J}
08FE1F14	Debug routine at end of ROM	7	{J}
08FE242C	Debug routine at end of ROM	8	{J}
08FE255C	Debug routine at end of ROM	9	{J}
08FE2690	Debug routine at end of ROM	10	{J}
08FE27F8	Debug routine at end of ROM	11	{J}
080CC6D4	Automated CC start routine for Traineeship	{U}
080CD898	Get word of Trainee CC 2	{U}
080CD898	Get word of Trainee CC 3	{U}
080CD8F8	Get word of Trainee CC 4	{U}
080CD958	Get word of Trainee CC 5	{U}
080CD9B8	Get word of an Trainee CC 6	{U}
08FE1554	Debug routine at end of ROM	1	{U}
08FE1688	Debug routine at end of ROM	2	{U}
08FE1768	Debug routine at end of ROM	3	{U}
08FE19EC	Debug routine at end of ROM	4	{U}
08FE1DB0	Debug routine at end of ROM	5	{U}
08FE1E4C	Debug routine at end of ROM	6	{U}
08FE1F14	Debug routine at end of ROM	7	{U}
08FE242C	Debug routine at end of ROM	8	{U}
08FE255C	Debug routine at end of ROM	9	{U}
08FE2690	Debug routine at end of ROM	10	{U}
08FE27F8	Debug routine at end of ROM	11	{U}
0801FDE8	Start chapter	Starting routine	{J}
0801FFB4	Start chapter	Initialization and sound reproduction	{J}
0801FFF0	Start chapter	Drawing animation of two lights at start	{J}
08020470	Start chapter	Routine to start drawing chapter title	{J}
080204C0	Start chapter	Draw relief behind chapter title	{J}
080200F0	Start chapter	Starting routine	{U}
080202BC	Start chapter	Initialization and sound reproduction	{U}
080202F8	Start chapter	Drawing animation of two lights at start	{U}
08020778	Start chapter	Routine to start drawing chapter title	{U}
080207C8	Start chapter	Draw relief behind chapter title	{U}
080A3074	Tactics evaluation	Version in which stars are displayed	1	{J}
080A3458	Tactics evaluation	Version in which stars are displayed	2	{J}
080A2BF8	Bonding Comment	Top	{J}
080A3118	Bonding Comment	Loading facial graphics	{J}
080A3228	Bonding Comment	Getting text	0x7B7-	{J}
080913FC	Display speech of text	r0=x	r1=y	r2=width	r3=height	sp0=EnableSyncByMask	sp4=workvram	sp8=?	spC=?	{J}
0800783c	Loading facial graphics	r0=Face ID	r1=?	r2=?	r3=?	{J}
08A95438	&TEXTBATCH	Text of item of boy record comment	{J}
08A9A4E4	&PALETTE2	Background palette of ball record of comment	{J}
0808F128	Display speech of text	r0=x	r1=y	r2=width	r3=height	sp0=EnableSyncByMask	sp4=workvram	sp8=?	spC=?	{U}
08007938	Loading facial graphics	r0=Face ID	r1=?	r2=?	r3=?	{U}
08AAB4A0	&LZ77	Boot data	mode	ONLY FE8J	{J}
08AAC5A8	&LZ77	Boot data	Menu Relief	ONLY FE8J	{J}
08030366	Sprite number of weather picture	change 80 to 80/A0/C0/E0 light snow	{U}
0803066D	Sprite number of weather picture	change 10 to 10/14/18/1C heavy snow	{U}
0859D95F	Sprite number of weather picture	change 10 to 10/14/18/1C rain1	{U}
0859D967	Sprite number of weather picture	change 10 to 10/14/18/1C rain2	{U}
080309B2	Sprite number of weather picture	change A0 to A0/A4/A8/AC BBQ	{U}
0803053C	Sprite number of weather picture	change 10 to 10/14/18/1C sandstorm	{U}
08030B31	Sprite number of weather picture	change AC to A0/A4/A8/AC clouds	{U}
0809C23C	Select items in advance preparations	{J}
0809E100	Item change screen of item arrangement screen	{J}
080A2028	List display screen of item arrangement screen	{J}
080A0D78	Transporter of item arrangement screen	{J}
080A5744	Support screen for attack advance preparation	Top	{J}
080A575C	Support screen for attack advance preparation	Part 2	{J}
080A56F0	Select unit on support screen	Top	{J}
080A69D4	When you select a unit on support screen	{J}
08034014	When accessing save screen on advancement advance screen	{J}
08098600	When selecting menu item on advancement preparation screen	{J}
08090A70	Show status screen	subroutine	{J}
080A0944	Evaluation of attack strategy preparation	Top	{U}
08099F68	Select items in advance preparations	{U}
0809BE3C	Item change screen of item arrangement screen	{U}
0809FD88	List display screen of item arrangement screen	{U}
0809EAD8	Transporter of item arrangement screen	{U}
080A196C	Support screen for attack advance preparation	Top	{U}
080A1984	Support screen for attack advance preparation	Part 2	{U}
080A1918	Select unit on support screen	Top	{U}
080a2c08	When you select a unit on support screen	{U}
0803410C	When accessing save screen on advancement advance screen	{U}
0809631C	When selecting menu item on advancement preparation screen	{U}
0808E79C	Show status screen	subroutine	{U}
080A0758	nullsub_66	{U}
08006DC8	NewBlocking_Yeild	{J}
08006DDC	IsBlocking_Yeild	{J}
08006DF4	ExitBlocking_Yeild	{J}
08006EC4	NewBlocking_Yeild	{U}
08006ED8	IsBlocking_Yeild	{U}
08006EF0	ExitBlocking_Yeild	{U}
080A5708	Return to BGM of attack title or OP title	{J}
080908DC	Key input process of status screen	{J}
080B2874	ClearChild6C	Erase specified Procs or less	{J}
080033ec	FindFirstChild6C	Enumerate specified Procs or less	{J}
080A1930	Return to BGM of attack title or OP title	{U}
0808E608	Key input process of status screen	{U}
080ADDD4	ClearChild6C	Erase specified Procs or less	{U}
080034A0	FindFirstChild6C	Enumerate specified Procs or less	{U}
080BEEE8	IsWordMap	{J}
08074B88	Determine battle BGM	{J}
08002570	Switch BGM (another commandPart 5)	r0=BGM number: MUSIC	{J}
08074DAC	Get BossBGM	{J}
080BA054	IsWordMap	{U}
080726AC	Determine battle BGM	{U}
08002620	Switch BGM (another commandPart 5)	r0=BGM number: MUSIC	{U}
080728D0	Get BossBGM	{U}
080976FC	CanCharacterBePrepSwap	{J}
08089100	DrawsTextAndNumbersOnLeftSideOfStatusScreen	(unit name, class, level, experience)	{J}
08000CD8	GetGameClock	{J}
08091544	DeleteSerifProcs	{J}
08091558	IsExistSerifProcs	{J}
08091574	GotoLabel0BySerifProcs	{J}
0809541C	CanCharacterBePrepSwap	{U}
08086E44	DrawsTextAndNumbersOnLeftSideOfStatusScreen	(unit name, class, level, experience)	{U}
0808F270	DeleteSerifProcs	{U}
0808F284	IsExistSerifProcs	{U}
0808F2A0	GotoLabel0BySerifProcs	{U}
080E1184	&LZ77	Something's TSA		26	{U}
080E1400	&LZ77	An image of something		1	{U}
080E6564	&LZ77	Something's TSA		26	{J}
080E67E0	&LZ77	An image of something		1	{J}
02029D84	gpAISFirst	{J}
08022f50	TradeCommandEffect2	{J}
08022BD8	AttackCommandEffect_DrawFace	{U}
08022BA0	AttackCommandEffect_DrawFace	{J}
08023550	When I selected belongings menu		Give a list of belongings		{U}
08023514	When I selected belongings menu		Give a list of belongings		{J}
08073CE8	Display level up screen		{U}
08076170	Display level up screen		{J}
080BBF78	Switch BGM (another command No	 6)		r0=BGM number: MUSIC		{J}
080B74CC	Switch BGM (another command No	 6)		r0=BGM number: MUSIC		{U}
08021668	Redraw map at end of event effect		{U}
08021360	Redraw map at end of event effect		{J}
02017728	gBattleAnimeCounter
0203E152	gRoundDamageValuesMaybe	{J}
0203E154	gRoundDamageValuesMaybe2	{J}
02000000	gAISFrontLeft	{J}
02000004	gAISBackLeft	{J}
02000008	gAISFrontRight	{J}
0200000C	gAISBackRight	{J}
0200005C	gpBattleAnimFrameStartLookup	{J}
02001168	gBonusClaimItemList	{J}
0200278C	gTradeMenuText	{J}
020041C8	gAISOAM_20041C8	{J}
0200F1C8	gAISFrames_Left	{J}
02011BC8	gAISFrames_Right	{J}
020121CC	gPrepScreenUnitList	{J}
0201772C	gBool_SpellFxActive	{J}
02017734	gBool_EfxDeathActive	{J}
02017790	gSpellAnimBgGfxBuffer_Maybe	{J}
0201A790	gSpellAnimObjGfxBuffer_Maybe	{J}
0201FAD0	gBattleAnimBoolEkrNamewinAppearActive	{J}
0201FB04	gBattleAnimBoolEndedRounds	{J}
0201FB18	gpEkrAnimeDrvProc	{J}
0201FB1C	gpBattleAnimSomeSheetData	{J}
0202013C	gBattleAnimTriangleAttackEnded	{J}
020228C8	gPalette1Buffer	{J}
020228E8	gPalette2Buffer	{J}
02022908	gPalette3Buffer	{J}
02022928	gPalette4Buffer	{J}
02022968	gPalette6Buffer	{J}
02022988	gPalette7Buffer	{J}
02022A68	gPaletteEBuffer	{J}
02022A88	gPaletteFBuffer	{J}
02022AE8	gPalette12Buffer	{J}
02022B08	gPalette13Buffer	{J}
02022B28	gPalette14Buffer	{J}
02022B48	gPalette15Buffer	{J}
02022B68	gPalette16Buffer	{J}
02022B88	gPalette17Buffer	{J}
02022BA8	gPalette18Buffer	{J}
02022BC8	gPalette19Buffer	{J}
02022BE8	gPalette1ABuffer	{J}
02022C08	gPalette1BBuffer	{J}
02022C28	gPalette1CBuffer	{J}
02022C48	gPalette1DBuffer	{J}
02022C68	gPalette1EBuffer	{J}
02022C88	gPalette1FBuffer	{J}
02024CAC	gBg1MapTarget	{J}
02024CB0	gBg2MapTarget	{J}
02024CB4	gBg3MapTarget	{J}
02024CB8	gpMainCallback	{J}
02028E74	gSpecialUiCharAllocationTable	{J}
02029D84	gpAISFirst	{J}
0203A98C	gMovementArrowData	{J}
0203DD18	gNameSelectNameBoxText	{J}
0203E108	gStoredBattleAnimId21Ptr	{J}
0203E10A	gStoredBattleAnimId22Ptr	{J}
0203E152	gRoundDamageValuesMaybe	{J}
0203E190	gpExtraUnit1	{J}
0203E194	gpExtraUnit2	{J}
0203E1A0	gBattleAnimBoolLockSheetGraphicsMaybe	{J}
0203E1A8	gBattleHpDisplayedValue	{J}
0203EDB0	gBonusContentFlags	{J}
0203EF60	@SAVEMENURTEXTDATA	gSaveMenuRTextData	{J}
@SAVEMENURTEXTDATA@00	&SongHeader	songHeader
@SAVEMENURTEXTDATA@04	byte	HeroLevel
@SAVEMENURTEXTDATA@05	byte	WorldmapNodeID
03000000	gRNState	{J}
03000038	gpMusicProcA	{J}
0300003C	gpMusicProcB	{J}
030005F8	gSomeUnitWordArray	{J}
030007F8	gSomeUtilityTextHandle	{J}
030017D8	gSioBaudRate	{J}
03004B50	gCurrentMovCostTable	{J}
03006430	@MusicPlayer	gMusicPlayerInfo0	{J}
03006640	@MusicPlayer	gMusicPlayerInfo1	{J}
03006680	@MusicPlayer	gMusicSEPlayerInfo2	{J}
030066C0	@MusicPlayer	gMusicSEPlayerInfo3	{J}
03006710	@MusicPlayer	gMusicSEPlayerInfo4	{J}
03006750	@MusicPlayer	gMusicSEPlayerInfo5	{J}
030063B0	@MusicPlayer	gMusicSEPlayerInfoUnk1	{J}
030063F0	@MusicPlayer	gMusicSEPlayerInfoUnk2	{J}
03006600	@MusicPlayer	gMusicSEPlayerInfoUnk3	{J}
03007FF0	gpM4aMainThing	{J}
04000002	Undocumented_GreenSwap	{J}
04000300	Undocumented_PostBootFlag	{J}
04000301	Undocumented_PowerDownControl	{J}
08032114	UpdateMapAndUnit	{J}
0807E160	Draw a map animation graph dialog		{J}
0807DFF0	A routine for managing frames of map animation		{J}
0807DD70	Draw numbers on map animation bar graph		{J}
080321C8	UpdateMapAndUnit	{U}
0807BE1C	Draw a map animation graph dialog		{U}
0807BCA8	A routine for managing frames of map animation		{U}
0807BA28	Draw numbers on map animation bar graph		{U}
0803581C	Display a message at bottom of screen		BB function		{J}
08035EDC	BeginStatusClearFx__HealBadStatus		{J}
08038320	When clearing towers and ruins	Show record display	{J}
0804B1CC	Display item selection menu		{J}
08082354	Effect when using stone 2		It is different from instruction called from event instruction		{J}
080943D4	Draw screen of unit selected from menu		{J}
0809442C	Display an animation setting individual animation setting screen		{J}
0809445C	Draw screen of unit selected from menu 2		{J}
0809448C	Draw screen of unit selected from menu 3		{J}
0809E124	Item exchanges between units called from attack advancement screen		{J}
080A4868	Make screen brighten momentarily unnaturally		{J}
080AD1E0	Display MiniMap		Non-Blocking	{J}
080AD1F4	Display MiniMap		Blocking	{J}
080B2D94	Run FadeIn Procs	{J}
080B2DB8	Run FadeOut Procs	{J}
080B2E74	Run FadeIn Procs2	{J}
080B2E98	Run FadeOut Procs2	{J}
080B4B34	Show sound room screen		{J}
080BE718	Display dictionary screen		{J}
080BE794	Display setting screen		{J}
080BE810	Display of status map of world map		{J}
080CA1D4	OP subtitle is displayed		{J}
080CB370	Display game title OP		{J}
080CB390	Display game title OP 2		{J}
080CB3A8	Show OP after displaying ring of light		{J}
08035DDC	BeginStatusClearFx__HealBadStatus		{U}
080381F4	When clearing towers and ruins	Show record display	{U}
0804A430	Display item selection menu		{U}
08080014	Effect when using stone 2		It is different from instruction called from event instruction		{U}
0809BE60	Item exchanges between units called from attack advancement screen		{U}
080A87C8	Display MiniMap		Non-Blocking	{U}
080A87DC	Display MiniMap		Blocking	{U}
080AE318	Run FadeIn Procs	{U}
080AE33C	Run FadeOut Procs	{U}
080AE3F8	Run FadeIn Procs2	{U}
080AE41C	Run FadeOut Procs2	{U}
080AFF1C	Show sound room screen		{U}
080C541C	OP subtitle is displayed		{U}
080C6424	Display game title OP		{U}
080C6444	Display game title OP 2		{U}
080C645C	Show OP after displaying ring of light		{U}
0203E0EC	Unknown flag for battle 4 bytes		{J}
080868F4	Turn on flag 0x82		{J}
08086900	Status acquisition of flag 0x82		{J}
08050ABC	Set a value for "unknown flag for battle 4 bytes"		{J}
08050AC8	Get "unknown flag for battle 4 bytes"		{J}
08059938	Is it item ID judgment 0x85 or 0x92?	Sigelinde (0x85) and Sigmund (0x92)		{J}
08084628	Turn on flag 0x82		{U}
08084634	Status acquisition of flag 0x82		{U}
0804FD48	Set a value for "unknown flag for battle 4 bytes"		{U}
0804FD54	Get "unknown flag for battle 4 bytes"		{U}
08058B08	Is it item ID judgment 0x85 or 0x92?	Sigelinde (0x85) and Sigmund (0x92)		{U}
080B38B4	SoundRoom	% Completion modifier 1 (Changed from 100% to 75%)	{J}
080B38D4	SoundRoom	% Completion modifier 2 (Changed from 100% to 86% combined with previous, 120% alone)	{J}
080B3930	SoundRoom	Full song list (It also allowed to show more than 100 songs)	{J}
080B3FE8	SoundRoom	Show song ID		{J}
080B4414	SoundRoom	Play specified song		{J}
080B4A0C	SoundRoom	Display playing time		{J}
080B4B48	SoundRoom	Show song title		{J}
080B4C30	SoundRoom	Show song title 2		{J}
080B4F3C	SoundRoom	Drawing relation of sound room		{J}
080AEC94	SoundRoom	% Completion modifier 1 (Changed from 100% to 75%)	{U}
080AECB4	SoundRoom	% Completion modifier 2 (Changed from 100% to 86% combined with previous, 120% alone)	{U}
080AED10	SoundRoom	Full song list (It also allowed to show more than 100 songs)	{U}
080AF3C8	SoundRoom	Show song ID		{U}
080AF7F4	SoundRoom	Play specified song		{U}
080AFDF4	SoundRoom	Display playing time		{U}
080AFF30	SoundRoom	Show song title		{U}
080B0018	SoundRoom	Show song title 2		{U}
080B0324	SoundRoom	Drawing relation of sound room		{U}
08A73924	:08A7394B	Something's FillTileRect tile table		{J}
08A9D64C	:08A9D667	A text ID such as "start"		{J}
0860754C	:086078C5	Unknown data		OAMSP Maybe	10	{J}
0860821C	:086094B3	Unknown data		OAMSP Maybe	11	{J}
0874E5D4	:0874F211	Unknown data		OAMSP Maybe	12	{J}
0808B93C	background of save menu item		{J}
0808B8DC	LoadChapterTitleGfx2	{J}
02000000	gAISFrontLeft	{U}
02000000	gAISFrontLeft	{J}
0808BAAC	To obtain chapter names, obtain chapter title IDs to be read		{J}
0808BA30	To obtain chapter name of save slot, obtain chapter title ID to be read		{J}
08089678	background of save menu item		{U}
0808979C	To obtain chapter names, obtain chapter title IDs to be read		{U}
08089720	To obtain chapter name of save slot, obtain chapter title ID to be read		{U}
08000228	&ARM	gStart_ARMCopy	{U}
080003e0	&ARM	ARM_BgMapCopyRect	{U}
08000228	&ARM	gStart_ARMCopy	{J}
080003E0	&ARM	ARM_BgMapCopyRect	{J}
08000d00	EnableSoftReset	{U}
08000d0c	DisableSoftReset	{U}
08000d18	IsSoftResetEnabled	{U}
08003870	DebugInit	{U}
080ce2fc	guMenu2ReWriteUp_80CE2FC	{U}
080ce388	guMenu2ReWriteDown_80CE388	{U}
080ce588	guMenu2ReWriteFirst_80CE588	{U}
080ce9e8	guMess3ReWrite_80CE9E8	{U}
080cef10	Guide_80CEF10	{U}
080cefd4	Guide_80CEFD4	{U}
080cf448	Guide_80CF448	{U}
080037BC	DebugInit	{J}
080D2FF8	guMenu2ReWriteUp_80CE2FC	{J}
080D2FF8	guMenu2ReWriteDown_80CE388	{J}
080D3284	guMenu2ReWriteFirst_80CE588	{J}
080D36E4	guMess3ReWrite_80CE9E8	{J}
080D3C0C	Guide_80CEF10	{J}
080D4140	Guide_80CF448	{J}
08083688	Play sound effect (0x2d5) when playing on map		{J}
080836C4	Play sound effect (0x2d6) when dancing on map		{J}
08083600	Register sound effects to play when dancing / playing on map		{J}
08081348	Play sound effect (0x2d5) when playing on map		{U}
08081348	Play sound effect (0x2d6) when dancing on map		{U}
080812C0	Register sound effects to play when dancing / playing on map		{U}
08000AE8	Display build version and release year		{J}
08000B10	Display build version and release year		{U}
080286A4	Get character string of unit attribute		{J}
080DC94C	&TEXTBATCH	Attributes of unit		{J}
08072454	Load dragon zombie fighting animation data		{J}
0806FEA4	Load dragon zombie fighting animation data		{U}
080BA2F0	ActionArena	{J}
080B576C	ActionArena	{U}
080B9DA4	Acquisition of selling price of shop		{J}
080B5220	Acquisition of selling price of shop		{U}
080A4DD0	browsing support conversation		Draw achievement rate		{J}
080A7F88	browsing support conversation		Acquisition of support conversation achievement rate		{J}
080a7f44	browsing support conversation		Acquisition of support conversation achievement number (numerator)		{J}
080a7f10	browsing support conversation		Acquisition of total number of support conversations (denominator)		{J}
080A5774	browsing support conversation		Draw unit name (color changes depending on state of support)		{J}
080A5048	browsing support conversation		Top of functions to draw		{J}
080A4CA8	browsing support conversation		Draw a unit icon		{J}
0809af14	Drawing frame of menu		{J}
080A5388	browsing support conversation		Main loop		{J}
080A0FE8	browsing support conversation		Draw achievement rate		{U}
080A3544	browsing support conversation		Acquisition of support conversation achievement rate		{U}
080A3500	browsing support conversation		Acquisition of support conversation achievement number (numerator)		{U}
080A34CC	browsing support conversation		Acquisition of total number of support conversations (denominator)		{U}
080A199C	browsing support conversation		Draw unit name (color changes depending on state of support)		{U}
080A1270	browsing support conversation		Top of functions to draw		{U}
080A0EC0	browsing support conversation		Draw a unit icon		{U}
080950E8	Drawing frame of menu		{U}
080A15B0	browsing support conversation		Main loop		{U}
080D4178	Dictionary	It is judged whether there is a new item		{J}
080CF480	Dictionary	It is judged whether there is a new item		{U}
08097024	AddPrepMenuEntry	adds an entry to the prep screen menu	r0=Index(at least I think, but it's weird)	r1=Effect function pointer	r2=Usability(if 0, works fine, if 1, greyed out)	r3=Text ID	[sp+0]=Unknown	{U}
08099308	AddPrepMenuEntry	adds an entry to the prep screen menu	r0=Index(at least I think, but it's weird)	r1=Effect function pointer	r2=Usability(if 0, works fine, if 1, greyed out)	r3=Text ID	[sp+0]=Unknown	{J}
0808BA78	Get chapter ID to be displayed in Save Slot		r0=@ChapterData	{J}
08089768	Get chapter ID to be displayed in Save Slot		r0=@ChapterData	{U}
08095024	PrepScreenTextHandler	{U}
08095524	PrepScreenHandler	{U}
08097304	PrepScreenTextHandler	{J}
08097804	PrepScreenHandler	{J}
080951B8	PrepMenu_PickUnits	{U}
080951CC	PrepMenu_Items	{U}
080951E0	PrepMenu_Support	{U}
08095210	PrepMenu_Save	{U}
08095240	PrepMenu_StartBattle	{U}
08095264	PrepMenu_Broken_Unuse_ItFreeze	{U}
08095284	PrepMenu_CheckMap_UnuseDummy	{U}
08095290	PrepMenu_CheckMap_UnuseDummy2	{U}
080952C0	PrepMenu_CheckMap	{U}
08097498	PrepMenu_PickUnits	{J}
080974AC	PrepMenu_Items	{J}
080974C0	PrepMenu_Support	{J}
080974F0	PrepMenu_Save	{J}
08097520	PrepMenu_StartBattle	{J}
08097544	PrepMenu_Broken_Unuse_ItFreeze	{J}
08097564	PrepMenu_CheckMap_UnuseDummy	{J}
08097570	PrepMenu_CheckMap_UnuseDummy2	{J}
080975A0	PrepMenu_CheckMap	{J}
080977E4	CheckMapID0x7D	{J}
08015384	AddSkipThread2	{J}
08015394	SubSkipThread2	{J}
080AD47C	DrawBlueBarForActiveItemInPrepScreenMenu	{U}
080B1F1C	DrawBlueBarForActiveItemInPrepScreenMenu	{J}
08A9D904	&OAMREGS_ARRAY	Unk OAMREGS	25	{J}
08A2099C	&OAMREGS_ARRAY	Unk OAMREGS	25	{U}
08AD1734	&LZ77	Boot data		A fragment of the CG of FE 7		{J}
08AD1EC8	&PALETTE8	Boot data		Remnants of FE 7 CG pallet		{J}
08AD1FC8	&HEADERTSA	Boot data		Remnants of TSE of CG of FE 7		{J}
0802D664	When exchanging items actually by item exchange		{J}
080358A8	AutoRestoreBadStatus	{J}
080357A8	AutoRestoreBadStatus	{U}
080134E4	Unused function 1		{J}
080DC56C	:080DC583	Event34_MessWithUnitState_Data	{J}
080DC584	:080DC593	Data referenced from unused function 1		{J}
080DC6C8	&ASM_POINTER_ARRAY	DebugMenuCommand	{J}
0801342C	Unused function 1		{U}
080D793C	:080D7953	Event34_MessWithUnitState_Data	{U}
080D7954	:080D7963	Data referenced from unused function 1		{U}
085E4E84	&LZ77	An image of something		5	{J}
08023D5C	SetUnitActionToSupport_Code0xF	{J}
08023DA0	SetUnitActionToSupport_Code0xF	{U}
0805A78C	LoadBattleAnimePalette	{J}
080599E8	LoadBattleAnimePalette	{U}
0203F101	For judgment of parallel extension		{J}
080A5E48	Support screen		Display the number of remaining supportive conversations		(If remaining in the game / from the extra menu, the number of conversations not reached yet)		{J}
080A5F9C	Support screen		Display support list of target units		{J}
080A48BC	Support screen		Get support status achieved by the unit from gStringBufferAlt		{J}
080A4A28	Support screen		Construct a gStringBufferAlt that caches the support relationships of units		Maine		{J}
080A8030	Support screen		Construct a gStringBufferAlt that caches the support relationships of units		1 unit		{J}
080A207C	Support screen		Display the number of remaining supportive conversations		(If remaining in the game / from the extra menu, the number of conversations not reached yet)		{U}
080A21D0	Support screen		Display support list of target units		{U}
080A0AD4	Support screen		Get support status achieved by the unit from gStringBufferAlt		{U}
080A0C40	Support screen		Construct a gStringBufferAlt that caches the support relationships of units		Maine		{U}
080A35EC	Support screen		Construct a gStringBufferAlt that caches the support relationships of units		1 unit		{U}
08A93F50	&TEXTBATCH	Prep screen 1		{J}
08A18204	&TEXTBATCH	Prep screen 1		{U}
08A93F7C	&TEXTBATCH	Prep screen 2		{J}
08A18230	&TEXTBATCH	Prep screen 2		{U}
08A9463C	&TEXTBATCH	&TEXTBATCH5	{J}
0808B128	HelpDialog	{J}
08088E9C	HelpDialog	{U}
080B9540	Shop	Selling anything else?	{J}
080B9554	Shop	Do you need anything else?	{J}
080B9580	Shop	Come back again	{J}
080B95C8	Shop	Welcome to the armory! These are the weapons we have for sale	{J}
080B8EB4	Shop	Welcome to the armory	I deal in all sorts of goods		{J}
080B92FC	Shop	What do you want to sell?	{J}
080B92E8	Shop	Anything else?	{J}
080B92D4	Shop	Your storage is full, too! Rearrange your things!	{J}
080B92A4	Shop	Right	 I'll send it now		{J}
080B9254	Shop	No? Too bad	 You could take it if you made room		{J}
080B91D4	Shop	Looks like you're full	Send it to storage?	{J}
080B9030	Shop	Buy event	/	How does @0080@0005 sound to you?	{J}
080B8F30	Shop	What would you like?	{J}
080B8ED8	Shop	Sell event	/	You've got nothing to sell!	{J}
080B8CF0	Shop	Show the conversation	{J}
080B49B8	Shop	Selling anything else?	{U}
080B49CC	Shop	Do you need anything else?	{U}
080B49F8	Shop	Come back again	{U}
080B4494	Shop	Welcome to the armory! These are the weapons we have for sale	{U}
080B432C	Shop	Welcome to the armory	I deal in all sorts of goods		{U}
080B4774	Shop	What do you want to sell?	{U}
080B4760	Shop	Anything else?	{U}
080B474C	Shop	Your storage is full, too! Rearrange your things!	{U}
080B471C	Shop	Right	 I'll send it now		{U}
080B46CC	Shop	No? Too bad	 You could take it if you made room		{U}
080B464C	Shop	Looks like you're full	Send it to storage?	{U}
080B44A8	Shop	Buy event	/	How does @0080@0005 sound to you?	{U}
080B43A8	Shop	What would you like?	{U}
080B4350	Shop	Sell event	/	You've got nothing to sell!	{U}
080B4168	Shop	Show the conversation	{U}
0203f100	:0203f9FF	DebuffTable	{U}
08A95410	&TEXTBATCH	TextBatch4	{J}
08006ED4	ParseTextEscape	Processing escape sequences in text		{J}
08007758	ParseLoadFaceOnText	A perspective on reading face images in the text		{J}
08006FD0	ParseTextEscape	Processing escape sequences in text		{U}
08007854	ParseLoadFaceOnText	A perspective on reading face images in the text		{U}
0808B824	LoadChapterTitlePalette	{J}
080B083C	Palette selection on save slot selection screen		{J}


08A029A8	&LZ77	YellowTextBox	{U}
08A02A1C	&LZ77	gGfx_YellowTextBox2	{U}
08A02A94	&LZ77	gGfx_YellowTextBox3	{U}
08A02B3C	&LZ77	gGfx_YellowTextBox4	{U}
08A02BAC	&LZ77	gGfx_YellowTextBox5	{U}
08A032AC	&LZ77	gGfx_StatusClearFx	{U}
08A20C64	&BGCONFIG	gObj_8A20C64	{U}
08A20C9C	&BGCONFIG	gObj_8A20C9C	{U}
08A20CD4	&BGCONFIG	gObj_8A20CD4	{U}
08A20D0C	&BGCONFIG	gObj_8A20D0C	{U}
08A20D44	&BGCONFIG	gObj_8A20D44	{U}
08A20D58	&BGCONFIG	gObj_8A20D58	{U}
08205C70	&BGCONFIG	gFaceConfig_8205C70	{U}
08A74A60	&LZ77	YellowTextBox	{J}
08A74AD4	&LZ77	gGfx_YellowTextBox2	{J}
08A74B4C	&LZ77	gGfx_YellowTextBox3	{J}
08A74BF4	&LZ77	gGfx_YellowTextBox4	{J}
08A74C64	&LZ77	gGfx_YellowTextBox5	{J}
08A75364	&LZ77	gGfx_StatusClearFx	{J}
08A9DBCC	&BGCONFIG	gObj_8A20C64	{J}
08A9DC04	&BGCONFIG	gObj_8A20C9C	{J}
08A9DC3C	&BGCONFIG	gObj_8A20CD4	{J}
08A9DC74	&BGCONFIG	gObj_8A20D0C	{J}
08A9DCAC	&BGCONFIG	gObj_8A20D44	{J}
08A9DCC0	&BGCONFIG	gObj_8A20D58	{J}
081F55EC	&BGCONFIG	gFaceConfig_8205C70	{J}

08001C78	HandleResetSequence	{U}
08005F38	StartFaceFadeOut	{U}
080081A8	Dialogue_ClearTextBoxes	{U}
080081EC	Dialogue_ClearText	{U}
08009CE0	GameControl_PostChapterSwitch	{U}
08009E98	CallGameEndingEvent	{U}
08010748	EventDisplayCursorProc_Loop	{U}
0801098C	DecodeEventScriptedBattle	{U}
08010E50	ClearDialogueAndFaces	{U}
08010E6C	DisplayFlashingCursor	{U}
0801240C	PositionUnitsAccordingToDeployment	{U}
0801247C	PositionUnitAccordingToDeployment	{U}
08013844	MapBrightnessFadeExists	{U}
08015D84	CenterCameraOntoPosition	r0=ThisProcs	r1=X	r2=Y	{U}
080168E0	DrawItemMenuLineLong	{U}
08016A2C	DrawItemStatScreenLine	{U}
08017478	SetItemUnsealedForCharacter	{U}
08018A9C	GetUnitKeyItemSlotForTerrain	{U}
08018AF0	GetUnitAidIconId	{U}
08018EB8	ClearTemporaryUnits	{U}
08019034	CountRedUnits	{U}
08019074	CountGreenUnits	{U}
08019360	SetUnitLeaderCharId	{U}
08019840	BmMapFillEdges	{U}
08019B8C	DisplayMovementViewTile	{U}
08019D28	UpdateBmMapDisplay	{U}
08019E08	RenderBmMapColumn	{U}
08019ED4	RenderBmMapLine	{U}
08028014	SMS_DisplayWindowBlended	{U}
0802A13C	BattleGenerateSimulationInternal	{U}
0802A20C	BattleGenerateRealInternal	{U}
0802A350	BattleGenerateReal	{U}
0802A384	BattleGenerateBallistaReal	{U}
0802A398	BattleGenerate	{U}
0802B92C	BattleApplyExpGains	{U}
0802BC00	ApplyUnitDefaultPromotion	{U}
0802BD50	ApplyUnitPromotion	{U}
0802BEA0	GenerateBattleUnitStatGainsComparatively	{U}
0802C2D4	UpdateUnitDuringBattle	{U}
0802C368	GetUnitRoundExp	{U}
0802C3D8	GetUnitClassKillExpBonus	{U}
0802C40C	GetUnitExpMultiplier	{U}
0802C450	GetUnitKillExpBonus	{U}
0802C4F0	ModifyUnitSpecialExp	{U}
0802C740	BattleUnitTargetCheckCanCounter	{U}
0802CA70	GetUnitSoloBattleAnimType	{U}
0802CA98	GetBattleAnimType	{U}
0802CAFC	BattlePrintDebugHitInfo	{U}
0802CD64	BattleGenerateArena	{U}
0802CEBC	SetScriptedBattle	{U}
0802CF4C	BattleUnwindScripted	{U}
0802D0BC	UnitLevelUp_unused	{U}
0802D2B4	BattleHitAdvance	{U}
0802D2C4	BattleHitTerminate	{U}
0803334C	ClosePrepScreenMapMenu	{U}
08033358	PrepScreenMapMenu_OnViewMap	{U}
0803336C	PrepScreenMapMenu_OnFormation	{U}
080333A4	PrepScreenMapMenu_OnStartPress	{U}
080333C4	PrepScreenMapMenu_OnBPress	{U}
0803341C	PrepScreenMapMenu_OnOptions	{U}
08033458	PrepScreenMapMenu_OnSave	{U}
08033468	PrepScreenMapMenu_OnDebug	{U}
080334BC	PrepScreenProc_InitMapMenu	{U}
080334CC	PrepScreenProc_DimMapImmediate	{U}
080334E8	PrepScreenProc_StartBrightenMap	{U}
08033514	PrepScreenProc_StartDimMap	{U}
08033634	PrepScreenMapMenu_OnEnd	{U}
08033648	PrepScreenProc_StartMapMenu	{U}
080338C0	InitPrepScreenCursorPosition	{U}
08033978	PrepScreenProc_MapIdle	{U}
08033C90	PrepScreen_UnitSwapIdle	{U}
08033E08	PrepScreen_StartUnitSwapAnim	{U}
08033E8C	InitMapChangeGraphicsIfFog	{U}
08033EA4	DisplayMapChangeIfFog	{U}
08033EC0	PrepScreenProc_StartConfigMenu	{U}
08034078	PrepScreenProc_Cleanup	{U}
0804F714	GetOverriddenUnusableMenuCommands	{U}
0804F754	SetOverriddenUnusableMenuCommands	{U}
0804F77C	SetMenuCommandOverride	{U}
0804F7AC	GetOverriddenMenuCommandUsability	{U}
0804F7E8	GetOverriddenMenuCommandEffect	{U}
08079D74	MuCtr_StartDefinedMove	{U}
0808A518	SetDialogueBoxConfig	{U}
0808A524	GetDialogueBoxConfig	{U}
0808B178	BoxDialogueInterpreter_Main	{U}
0808DDF8	CountUnitsByFaction	{U}
08094FF4	CanPrepScreenSave	{U}
08095498	AtMenu_AddPrepScreenSupportMenuItem	{U}
08095504	CanPrepScreenCheckMap	{U}
08095AD8	AtMenu_8095AD8	{U}
08095B30	ClearPrepScreenMenuHelpText	{U}
08095B64	DrawPrepScreenMenuHelpText	{U}
08095B94	DisplayPrepScreenMenuHelpText	{U}
08095BD8	UpdatePrepScreenMenuHelp_Clear	{U}
08095BE8	UpdatePrepScreenMenuHelp_Draw	{U}
08095BF4	UpdatePrepScreenMenuHelp_Display	{U}
08095C00	StartUpdatePrepScreenMenuHelp	{U}
08095EBC	AtMenu_EndIfNoUnits	{U}
08095F2C	AtMenu_MaintainPrepScreenMenuHelp	{U}
08096390	AtMenu_OnSubmenuEnd	{U}
08096454	StartAtMenu	{U}
08096468	StartAtMenu_LinkArena	{U}
080966B0	AtMenuExists	{U}
08096CCC	PrepScreenMenu_OnInit	{U}
08096D10	PrepScreenMenu_OnActiveLoop	{U}
08096F44	PrepScreenMenu_OnLoop_2	{U}
08096F6C	PrepScreenMenu_OnLoop_0	{U}
08096F98	PrepScreenMenu_OnEnd	{U}
08096FAC	StartPrepScreenMenu	{U}
08096FD0	SetPrepScreenMenuOnBPress	{U}
08096FEC	SetPrepScreenMenuOnStartPress	{U}
08097008	SetPrepScreenMenuOnEnd	{U}
080970CC	SetPrepScreenMenuSelectedItem	{U}
0809710C	GetActivePrepScreenMenuItemId	{U}
08097154	DrawPrepScreenMenuFrameAt	{U}
08097200	SetPrepScreenMenuPosition	{U}
080972B0	EndPrepScreenMenu	{U}
080972D4	ClearPrepScreenMenu	{U}
08097340	PrepScreenMenuExists	{U}
0809735C	DisablePrepScreenMenu	{U}
08097394	EnablePrepScreenMenu	{U}
0809BF10	DrawPrepScreenItemUseStatLabels	{U}
0809C0B4	DrawPrepScreenItemUseStatBars	{U}
0809C254	DrawPrepScreenItemUseStatValues	{U}
0809C3EC	DrawPrepScreenItemUseItemUseDesc	{U}
0809C4B4	PrepScreenItemUseScreen_OnUpdateSMS	{U}
0809C4D8	PrepScreenItemUseScreen_OnInit	{U}
0809C4E4	PrepScreenItemUseScreen_InitDisplay	{U}
0809C820	PrepScreenItemUseScreen_OnIdle	{U}
0809C958	DisplayAreYouSureYNBoxText	{U}
0809C9F4	PrepScreenItemUseScreen_AreUSureBoxInit	{U}
0809CA14	PrepScreenItemUseScreen_AreUSureBoxLoop	{U}
0809CCFC	StartPrepScreenItemUseScreen	{U}
080A095C	CanPrepScreenSupport	{U}
080A2DE4	InitSaveGeneralGameMetadata	{U}
080A3898	VerifySavedRankingChecksum	{U}
080A3984	SaveRankings	{U}
080A3DD8	SaveEndgameRankingsMaybe	{U}
080A4C14	RegisterCompletedPlaythrough	{U}
080A5A00	LoadGMMonsterRnState	{U}
080A6B70	GetTrialMapSavedMapAddress	{U}
080A6B90	GetTrialMapSavedMapSize	{U}
080A6BB4	GetTrialMapSavedChapterAddress	{U}
080A6BD4	GetTrialMapSavedChapterSize	{U}
080AA144	StartTrialMap_Maybe	{U}
080AD564	HidePrepScreenHandCursor	{U}
080AD580	EndPrepScreenHandCursor	{U}
080B8E60	GMProc_80B8E60	{U}
080BA61C	GMapScreenVSync_OnInit	{U}
080BA628	GMapScreenVSync_OnUpdate	{U}
080BCFB4	GM_ClearAllStoryLocations	{U}
080C4048	GM_GetBaseMenuProc	{U}
080CC940	StartTraineePromotion	{U}
080CC990	StartPrepScreenPromotion	{U}
020111A4	gPrepScreenMenuHelpTextArray	{U}
02028E74	gLang	{U}
0202E36C	gUnitArrayPurple	{U}
0203DDE0	gHandCursorPosition	{U}
0203DDE4	gPreviousHandCursorUpdateTime	{U}
0203E788	gHelpTextOriginTile	{U}
0203EF44	gTrialMapData	{U}
0300000C	gSoftResetEnabled	{U}
03000428	gEvent1EData	{U}
080D793F	gMenuCommandEventDisableList	{U}
080D794E	gMenuCommandEventGrayList	{U}

08001bd0	HandleResetSequence	{J}
08005E3C	StartFaceFadeOut	{J}
080080A4	Dialogue_ClearTextBoxes	{J}
080080E8	Dialogue_ClearText	{J}
08009C40	GameControl_PostChapterSwitch	{J}
08009DF8	CallGameEndingEvent	{J}
08010890	EventDisplayCursorProc_Loop	{J}
08010AD0	DecodeEventScriptedBattle	{J}
08010F98	ClearDialogueAndFaces	{J}
08010FB4	DisplayFlashingCursor	{J}
080124DC	PositionUnitsAccordingToDeployment	{J}
0801254C	PositionUnitAccordingToDeployment	{J}
080138FC	MapBrightnessFadeExists	{J}
08015D90	CenterCameraOntoPosition	r0=ThisProcs	r1=X	r2=Y	{J}
08016688	DrawItemMenuLineLong	{J}
080167D4	DrawItemStatScreenLine	{J}
08017220	SetItemUnsealedForCharacter	{J}
080187B0	GetUnitKeyItemSlotForTerrain	{J}
08018804	GetUnitAidIconId	{J}
08018BCC	ClearTemporaryUnits	{J}
08018D48	CountRedUnits	{J}
08018D88	CountGreenUnits	{J}
08019038	SetUnitLeaderCharId	{J}
08019518	BmMapFillEdges	{J}
08019864	DisplayMovementViewTile	{J}
08019A00	UpdateBmMapDisplay	{J}
08019AE0	RenderBmMapColumn	{J}
08019BAC	RenderBmMapLine	{J}
08027FA8	SMS_DisplayWindowBlended	{J}
0802A0C8	BattleGenerateSimulationInternal	{J}
0802A198	BattleGenerateRealInternal	{J}
0802A2DC	BattleGenerateReal	{J}
0802A310	BattleGenerateBallistaReal	{J}
0802A324	BattleGenerate	{J}
0802B874	BattleApplyExpGains	{J}
0802BB48	ApplyUnitDefaultPromotion	{J}
0802BC98	ApplyUnitPromotion	{J}
0802BDE8	GenerateBattleUnitStatGainsComparatively	{J}
0802C21C	UpdateUnitDuringBattle	{J}
0802C2B0	GetUnitRoundExp	{J}
0802C320	GetUnitClassKillExpBonus	{J}
0802C354	GetUnitExpMultiplier	{J}
0802c398	GetUnitKillExpBonus	{J}
0802C428	ModifyUnitSpecialExp	{J}
0802C678	BattleUnitTargetCheckCanCounter	{J}
0802C9A8	GetUnitSoloBattleAnimType	{J}
0802C9D0	GetBattleAnimType	{J}
0802ca34	BattlePrintDebugHitInfo	{J}
0802CC9C	BattleGenerateArena	{J}
0802cdf4	SetScriptedBattle	{J}
0802CE84	BattleUnwindScripted	{J}
0802CFF4	UnitLevelUp_unused	{J}
0802D1EC	BattleHitAdvance	{J}
0802D1FC	BattleHitTerminate	{J}
0803325C	ClosePrepScreenMapMenu	{J}
08033268	PrepScreenMapMenu_OnViewMap	{J}
0803327C	PrepScreenMapMenu_OnFormation	{J}
080332B4	PrepScreenMapMenu_OnStartPress	{J}
080332D4	PrepScreenMapMenu_OnBPress	{J}
0803332C	PrepScreenMapMenu_OnOptions	{J}
08033368	PrepScreenMapMenu_OnSave	{J}
08033378	PrepScreenMapMenu_OnDebug	{J}
080333CC	PrepScreenProc_InitMapMenu	{J}
080333DC	PrepScreenProc_DimMapImmediate	{J}
080333F8	PrepScreenProc_StartBrightenMap	{J}
08033424	PrepScreenProc_StartDimMap	{J}
08033544	PrepScreenMapMenu_OnEnd	{J}
08033558	PrepScreenProc_StartMapMenu	{J}
080337D0	InitPrepScreenCursorPosition	{J}
08033888	PrepScreenProc_MapIdle	{J}
08033B9C	PrepScreen_UnitSwapIdle	{J}
08033D10	PrepScreen_StartUnitSwapAnim	{J}
08033D94	InitMapChangeGraphicsIfFog	{J}
08033DAC	DisplayMapChangeIfFog	{J}
08033DC8	PrepScreenProc_StartConfigMenu	{J}
08033F80	PrepScreenProc_Cleanup	{J}
08050488	GetOverriddenUnusableMenuCommands	{J}
080504C8	SetOverriddenUnusableMenuCommands	{J}
080504F0	SetMenuCommandOverride	{J}
08050520	GetOverriddenMenuCommandUsability	{J}
0805055C	GetOverriddenMenuCommandEffect	{J}
0807C178	MuCtr_StartDefinedMove	{J}
0808C828	SetDialogueBoxConfig	{J}
0808C834	GetDialogueBoxConfig	{J}
0808D488	BoxDialogueInterpreter_Main	{J}
080900E0	CountUnitsByFaction	{J}
080972D4	CanPrepScreenSave	{J}
08097778	AtMenu_AddPrepScreenSupportMenuItem	{J}
080977E4	CanPrepScreenCheckMap	{J}
08097DB8	AtMenu_8095AD8	{J}
08097E10	ClearPrepScreenMenuHelpText	{J}
08097E44	DrawPrepScreenMenuHelpText	{J}
08097E74	DisplayPrepScreenMenuHelpText	{J}
08097EB8	UpdatePrepScreenMenuHelp_Clear	{J}
08097EC8	UpdatePrepScreenMenuHelp_Draw	{J}
08097ED4	UpdatePrepScreenMenuHelp_Display	{J}
08097EE0	StartUpdatePrepScreenMenuHelp	{J}
0809819C	AtMenu_EndIfNoUnits	{J}
0809820C	AtMenu_MaintainPrepScreenMenuHelp	{J}
08098674	AtMenu_OnSubmenuEnd	{J}
08098738	StartAtMenu	{J}
0809874C	StartAtMenu_LinkArena	{J}
08098994	AtMenuExists	{J}
08098FB0	PrepScreenMenu_OnInit	{J}
08098FF4	PrepScreenMenu_OnActiveLoop	{J}
08099228	PrepScreenMenu_OnLoop_2	{J}
08099250	PrepScreenMenu_OnLoop_0	{J}
0809927C	PrepScreenMenu_OnEnd	{J}
08099290	StartPrepScreenMenu	{J}
080992B4	SetPrepScreenMenuOnBPress	{J}
080992D0	SetPrepScreenMenuOnStartPress	{J}
080992EC	SetPrepScreenMenuOnEnd	{J}
080993B0	SetPrepScreenMenuSelectedItem	{J}
080993F0	GetActivePrepScreenMenuItemId	{J}
08099438	DrawPrepScreenMenuFrameAt	{J}
080994E4	SetPrepScreenMenuPosition	{J}
08099594	EndPrepScreenMenu	{J}
080995B8	ClearPrepScreenMenu	{J}
08099624	PrepScreenMenuExists	{J}
08099640	DisablePrepScreenMenu	{J}
08099678	EnablePrepScreenMenu	{J}
0809E1D4	DrawPrepScreenItemUseStatLabels	{J}
0809E37C	DrawPrepScreenItemUseStatBars	{J}
0809E51C	DrawPrepScreenItemUseStatValues	{J}
0809E6B4	DrawPrepScreenItemUseItemUseDesc	{J}
0809E764	PrepScreenItemUseScreen_OnUpdateSMS	{J}
0809E788	PrepScreenItemUseScreen_OnInit	{J}
0809E794	PrepScreenItemUseScreen_InitDisplay	{J}
0809EAC4	PrepScreenItemUseScreen_OnIdle	{J}
0809EBFC	DisplayAreYouSureYNBoxText	{J}
0809EC98	PrepScreenItemUseScreen_AreUSureBoxInit	{J}
0809ECB8	PrepScreenItemUseScreen_AreUSureBoxLoop	{J}
0809EF94	StartPrepScreenItemUseScreen	{J}
080A2C10	CanPrepScreenSupport	{J}
080A7828	InitSaveGeneralGameMetadata	{J}
080A82DC	VerifySavedRankingChecksum	{J}
080A83C8	SaveRankings	{J}
080A881C	SaveEndgameRankingsMaybe	{J}
080A9658	RegisterCompletedPlaythrough	{J}
080AA418	LoadGMMonsterRnState	{J}
080AB588	GetTrialMapSavedMapAddress	{J}
080AB5A8	GetTrialMapSavedMapSize	{J}
080AB5CC	GetTrialMapSavedChapterAddress	{J}
080AB5EC	GetTrialMapSavedChapterSize	{J}
080AEB98	StartTrialMap_Maybe	{J}
080B2004	HidePrepScreenHandCursor	{J}
080B2020	EndPrepScreenHandCursor	{J}
080BDD28	GMProc_80B8E60	{J}
080BF4B4	GMapScreenVSync_OnInit	{J}
080BF4C0	GMapScreenVSync_OnUpdate	{J}
080C1DC0	GM_ClearAllStoryLocations	{J}
080C8E00	GM_GetBaseMenuProc	{J}
080D165C	StartTraineePromotion	{J}
080D16AC	StartPrepScreenPromotion	{J}
020111A4	gPrepScreenMenuHelpTextArray	{J}
0203DDDC	gHandCursorPosition	{J}
0203DDE0	gPreviousHandCursorUpdateTime	{J}
0203E784	gHelpTextOriginTile	{J}
0203EF40	gTrialMapData	{J}
080DC56F	gMenuCommandEventDisableList	{J}
080DC57E	gMenuCommandEventGrayList	{J}
0202bcb1	gGameLogicSemaphore	{U}
0202bcb2	gGameGfxSemaphore	{U}
0202bcb4	gGameStatebits	{U}
0202bcb6	gSavedVCLY	{U}
080A2EDE	DUMMY mov r0,r1; bx lr	{U}
0202bcbc	gCurrentRealCameraPos	{U}
0202bcc4	gCursorMapPosition	{U}
0202bccc	gSomeRealCameraPosition	{U}
0202bcd0	gCursorDisplayPosition	{U}
0202bcd4	gSomeRealCameraOffset	{U}
0202bcd8	gSomeRealCameraOffsetTarget	{U}
0202bcdc	gItemGotButNotYet	{U}
0202bcde	gThatsAnItem2	{U}
08BB1DBC	:08BB1F27	Mysterious data		It seems to be related to the chapter title display at the beginning of the chapter		{J}
081F5674	:081F567b	Mysterious data		8 bytes		{J}
081F5680	:081F5687	Mysterious data		8 bytes		{J}
081F5690	:081F5697	Mysterious data		8 bytes		{J}
08B18D68	:08B18ED3	Mysterious data		It seems to be related to the chapter title display at the beginning of the chapter		{U}
080BB240	ending		Unit results		If the unit has died		Get the string "At, the end is over"		{J}
080B6768	ending		Unit results		If the unit has died		Get the string "At, the end is over"		{U}
080B3564	ending		Unit results		Format the name of the chapter where the unit died		Perform special notation such as end chapter / beginning		{J}
080b6674	ending		Unit results		Format the name of the chapter where the unit died		Perform special notation such as end chapter / beginning		{U}
080B7800	Clear turn list drawing		{U}
080b3538	AppendTextBuffer_080b3538	{J}
080aeabc	AppendTextBuffer_080aeabc	{U}
080AEBEC	Div10_Safe	{U}
080797BC	Reproduce the click sound click		SongID:0x147	{J}
08077398	Reproduce the click sound click		SongID:0x147	{U}
03006680	@MusicPlayer	gMusicSEPlayerInfo2	{J}
030066C0	@MusicPlayer	gMusicSEPlayerInfo3	{J}
03006710	@MusicPlayer	gMusicSEPlayerInfo4	{J}
03006750	@MusicPlayer	gMusicSEPlayerInfo5	{J}
0800D5C8	CallEvent	Event "Support level has risen"		{J}
0800D5F4	CallEvent	Event "Fade in, fade out and talk"		{J}
0800D618	CallEvent	Event "Do you want to retreat?"		{J}
0800D640	CallEvent	Event "Do you want to abort?"		{J}
0800D568	CallEvent	Event "Perform Map Change Execute 0xFFFD"		{J}
0800D524	CallEvent	Event "Conversation 0xFFFF"		{J}
0800D304	CallEvent	Event "Support level has risen"		{U}
0800D330	CallEvent	Event "Fade in, fade out and talk"		{U}
0800D354	CallEvent	Event "Do you want to retreat?"		{U}
0800D37C	CallEvent	Event "Do you want to abort?"		{U}
0800D2A4	CallEvent	Event "Perform Map Change Execute 0xFFFD"		{U}
0800D260	CallEvent	Event "Conversation 0xFFFF"		{U}
0805B80C	StartAnime_EkrUnitMain	{J}
0805AA68	StartAnime_EkrUnitMain	{U}
085F14DC	:085F1567	StartEkrsubAnime1Data1	{J}
085F1568	:085F15E7	StartEkrsubAnime1Data2	{J}
085F15E8	:085F1667	StartEkrsubAnime1Data3	{J}
085F1668	:085F16E3	StartEkrsubAnime1Data4	{J}
085C72AC	:085C7337	StartEkrsubAnime1Data1	{U}
085C7338	:085C73B7	StartEkrsubAnime1Data2	{U}
085C73B8	:085C7437	StartEkrsubAnime1Data3	{U}
085C7438	:085C74B3	StartEkrsubAnime1Data4	{U}
0805BBFC	StartAnime_EkrUnitMain_Sub	{J}
0805AE58	StartAnime_EkrUnitMain_Sub	{U}
085E4088	:085E411F	StartEkrsubAnime2Data1	0x98 byte data	{J}
085E4120	:085E41B7	StartEkrsubAnime2Data2	0x98 byte data	{J}
085E41B8	:085E424F	StartEkrsubAnime2Data3	0x98 byte data	{J}
085E4250	:085E42E7	StartEkrsubAnime2Data4	0x98 byte data	{J}
085B9E58	:085B9EEF	StartEkrsubAnime2Data1	0x98 byte data	{U}
085B9EF0	:085B9F87	StartEkrsubAnime2Data2	0x98 byte data	{U}
085B9F88	:085BA01F	StartEkrsubAnime2Data3	0x98 byte data	{U}
085BA020	:085BA0B7	StartEkrsubAnime2Data4	0x98 byte data	{U}
081F5840	&TEXTBATCH	Chapter number text ID	{J}
081F5900	&TEXTBATCH	A string such as HP on the status screen	{J}
08205EDC	&TEXTBATCH	A string such as HP on the status screen	{U}
080DF424	&ROMPALETTEANIMEFRAME	efxNoDamagePaletteAnimeFrame	{J}
080DFC44	&ROMPALETTEANIMEFRAME	efxHPBarColorChangePaletteAnimeFrame1	{J}
080DFC6E	&ROMPALETTEANIMEFRAME	efxHPBarColorChangePaletteAnimeFrame2	{J}
080DFCC6	&ROMPALETTEANIMEFRAME	efxStatusUnitPaletteAnimeFrame	{J}
080DFCF6	&ROMPALETTEANIMEFRAME	efxWeaponIconPaletteAnimeFrame	{J}
080E0036	&ROMPALETTEANIMEFRAME	ekrTogiColorPaletteAnimeFrame	{J}
080E1A4A	&ROMPALETTEANIMEFRAME	efxEckesachsBGCOLPaletteAnimeFrame	{J}
080E1AD0	&ROMPALETTEANIMEFRAME	efxFirebreathBGCOLPaletteAnimeFrame	{J}
080E1C48	&ROMPALETTEANIMEFRAME	efxDarkbreathBGCOLPaletteAnimeFrame	{J}
080E1D34	&ROMPALETTEANIMEFRAME	efxThunderBGCOLPaletteAnimeFrame	{J}
080E1A4A	&ROMPALETTEANIMEFRAME	efxEckesachsBGCOLPaletteAnimeFrame	{J}
080E1AD0	&ROMPALETTEANIMEFRAME	efxFirebreathBGCOL2PaletteAnimeFrame	{J}
080E1E58	&ROMPALETTEANIMEFRAME	efxElfireBGCOLPaletteAnimeFrame	{J}
080E20B8	&ROMPALETTEANIMEFRAME	efxAlacaliburBGCOLPaletteAnimeFrame	{J}
080E2780	&ROMPALETTEANIMEFRAME	efxFenrirBGCOLPaletteAnimeFrame	{J}
080E29A4	&ROMPALETTEANIMEFRAME	efxLiveBGPaletteAnimeFrame	{J}
080E30FA	&ROMPALETTEANIMEFRAME	efxShineBGCOLPaletteAnimeFrame	{J}
080E317A	&ROMPALETTEANIMEFRAME	efxLunaBGCOLPaletteAnimeFrame	{J}
080E3242	&ROMPALETTEANIMEFRAME	efxExcaliburBGCOLPaletteAnimeFrame	{J}
080E32C0	&ROMPALETTEANIMEFRAME	efxExcaliburBGCOL2PaletteAnimeFrame	{J}
080E32F8	&ROMPALETTEANIMEFRAME	efxExcaliburBGCOL3PaletteAnimeFrame	{J}
080E33D6	&ROMPALETTEANIMEFRAME	efxGespenstBGCOL2PaletteAnimeFrame	{J}
080E3A8E	&ROMPALETTEANIMEFRAME	efxMaohFlashBGCOLPaletteAnimeFrame	{J}
080E3FB6	&ROMPALETTEANIMEFRAME	efxDrzDrakbreathBGCOLPaletteAnimeFrame	{J}
080E41BE	&ROMPALETTEANIMEFRAME	efxCrimsonEyeBGFinish1PaletteAnimeFrame	{J}
080E4484	&ROMPALETTEANIMEFRAME	efxChillEffectBGCOLPaletteAnimeFrame	{J}
080E4566	&ROMPALETTEANIMEFRAME	efxPierceCriticalEffectBGCOLPaletteAnimeFrame	{J}
080E4682	&ROMPALETTEANIMEFRAME	efxMagfcastBG1PaletteAnimeFrame	{J}
080E4698	&ROMPALETTEANIMEFRAME	efxMagfcastBG2PaletteAnimeFrame	{J}
080E4A24	&ROMPALETTEANIMEFRAME	efxOpFireBGPaletteAnimeFrame	{J}
080E4A88	&ROMPALETTEANIMEFRAME	efxOpThunderBGPaletteAnimeFrame	{J}
080E4AA6	&ROMPALETTEANIMEFRAME	efxOpThunderBGCOLPaletteAnimeFrame	{J}
080E4B10	&ROMPALETTEANIMEFRAME	efxopLiveBGPaletteAnimeFrame	{J}
080E4B28	&ROMPALETTEANIMEFRAME	efxopLiveBGCOLPaletteAnimeFrame	{J}
080E4BAE	&ROMPALETTEANIMEFRAME	efxopLightningBGPaletteAnimeFrame	{J}
080E4C78	&ROMPALETTEANIMEFRAME	efxopMistyrainBGPaletteAnimeFrame	{J}
087526A8	&PALETTE	efxFirebreathBGCOLPalette	{J}
08752984	&PALETTE	efxDrzDrakbreathBGCOLPalette	{J}
087526A8	&PALETTE	efxFirebreathBGCOLPalette	{J}
0869EBD8	&PALETTE16	efxLiveSomePalette	{J}

080DA438	&ROMPALETTEANIMEFRAME	efxNoDamagePaletteAnimeFrame	{U}
080DAC58	&ROMPALETTEANIMEFRAME	efxHPBarColorChangePaletteAnimeFrame1	{U}
080DAC82	&ROMPALETTEANIMEFRAME	efxHPBarColorChangePaletteAnimeFrame2	{U}
080DACDA	&ROMPALETTEANIMEFRAME	efxStatusUnitPaletteAnimeFrame	{U}
080DAD0A	&ROMPALETTEANIMEFRAME	efxWeaponIconPaletteAnimeFrame	{U}
080DB026	&ROMPALETTEANIMEFRAME	ekrTogiColorPaletteAnimeFrame	{U}
080DCBD4	&ROMPALETTEANIMEFRAME	efxEckesachsBGCOLPaletteAnimeFrame	{U}
080DCA5C	&ROMPALETTEANIMEFRAME	efxFirebreathBGCOLPaletteAnimeFrame	{U}
080DCBD4	&ROMPALETTEANIMEFRAME	efxDarkbreathBGCOLPaletteAnimeFrame	{U}
080DCCC0	&ROMPALETTEANIMEFRAME	efxThunderBGCOLPaletteAnimeFrame	{U}
080DCBD4	&ROMPALETTEANIMEFRAME	efxEckesachsBGCOLPaletteAnimeFrame	{U}
080DCA5C	&ROMPALETTEANIMEFRAME	efxFirebreathBGCOL2PaletteAnimeFrame	{U}
080DCDE4	&ROMPALETTEANIMEFRAME	efxElfireBGCOLPaletteAnimeFrame	{U}
080DD044	&ROMPALETTEANIMEFRAME	efxAlacaliburBGCOLPaletteAnimeFrame	{U}
080DD70C	&ROMPALETTEANIMEFRAME	efxFenrirBGCOLPaletteAnimeFrame	{U}
080DD930	&ROMPALETTEANIMEFRAME	efxLiveBGPaletteAnimeFrame	{U}
080DE086	&ROMPALETTEANIMEFRAME	efxShineBGCOLPaletteAnimeFrame	{U}
080DE106	&ROMPALETTEANIMEFRAME	efxLunaBGCOLPaletteAnimeFrame	{U}
080DE1CE	&ROMPALETTEANIMEFRAME	efxExcaliburBGCOLPaletteAnimeFrame	{U}
080DE24C	&ROMPALETTEANIMEFRAME	efxExcaliburBGCOL2PaletteAnimeFrame	{U}
080DE284	&ROMPALETTEANIMEFRAME	efxExcaliburBGCOL3PaletteAnimeFrame	{U}
080DE2E2	&ROMPALETTEANIMEFRAME	efxGespenstBGCOL2PaletteAnimeFrame	{U}
080DE792	&ROMPALETTEANIMEFRAME	efxMaohFlashBGCOLPaletteAnimeFrame	{U}
080DECBA	&ROMPALETTEANIMEFRAME	efxDrzDrakbreathBGCOLPaletteAnimeFrame	{U}
080DEEC2	&ROMPALETTEANIMEFRAME	efxCrimsonEyeBGFinish1PaletteAnimeFrame	{U}
080DF188	&ROMPALETTEANIMEFRAME	efxChillEffectBGCOLPaletteAnimeFrame	{U}
080DF26A	&ROMPALETTEANIMEFRAME	efxPierceCriticalEffectBGCOLPaletteAnimeFrame	{U}
080DF386	&ROMPALETTEANIMEFRAME	efxMagfcastBG1PaletteAnimeFrame	{U}
080DF39C	&ROMPALETTEANIMEFRAME	efxMagfcastBG2PaletteAnimeFrame	{U}
080DF644	&ROMPALETTEANIMEFRAME	efxOpFireBGPaletteAnimeFrame	{U}
080DF6A8	&ROMPALETTEANIMEFRAME	efxOpThunderBGPaletteAnimeFrame	{U}
080DF6C6	&ROMPALETTEANIMEFRAME	efxOpThunderBGCOLPaletteAnimeFrame	{U}
080DF730	&ROMPALETTEANIMEFRAME	efxopLiveBGPaletteAnimeFrame	{U}
080DF748	&ROMPALETTEANIMEFRAME	efxopLiveBGCOLPaletteAnimeFrame	{U}
080DF7CE	&ROMPALETTEANIMEFRAME	efxopLightningBGPaletteAnimeFrame	{U}
080DF898	&ROMPALETTEANIMEFRAME	efxopMistyrainBGPaletteAnimeFrame	{U}
08725AD0	&PALETTE	efxFirebreathBGCOLPalette	{U}
08725DAC	&PALETTE	efxDrzDrakbreathBGCOLPalette	{U}
086700D4	&PALETTE16	efxLiveSomePalette	{U}
0803190C	Arena	Selection of opponents	{U}
08031858	Arena	Selection of opponents	{J}
08037CF8	When clearing towers and ruins	After the display of results	{U}
08085c7c	When clearing towers and ruins	Light production	LowLevel	{U}
08087F3C	When clearing towers and ruins	Light production	{J}
08037D90	When clearing towers and ruins	After the display of results	{J}
08087F48	When clearing towers and ruins	Light production	LowLevel	{J}
08037888	ExecTrapForDropUnit_Sub	{J}
08032104	ExecTrapForDropUnit	{J}
080377F0	ExecTrapForDropUnit_Sub	{U}
080321B8	ExecTrapForDropUnit	{U}
0203AA86	AIScript Result1	{J}
0203AA87	AIScript Result2	{J}
0203AA8A	AIScript Result1	{U}
0203AA8B	AIScript Result2	{U}
08A9A9E0	Something TSA		27	{J}
080BBF18	Display a FIN image		{J}
0802EC8C	Use_MBarrierStaff	{U}
0802EBC4	Use_MBarrierStaff	{J}

@NEW_TARGET_SELECTION_STRUCT@00	pointer	Constructor
@NEW_TARGET_SELECTION_STRUCT@04	pointer	Destructor
@NEW_TARGET_SELECTION_STRUCT@08	pointer	idk1
@NEW_TARGET_SELECTION_STRUCT@0C	pointer	OnChange
@NEW_TARGET_SELECTION_STRUCT@10	pointer	idk2
@NEW_TARGET_SELECTION_STRUCT@14	pointer	OnSelection
@NEW_TARGET_SELECTION_STRUCT@18	pointer	OnPressB
@NEW_TARGET_SELECTION_STRUCT@1C	pointer	idk3

085C5718	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	01	{J}
085C5738	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	02	{J}
085C5758	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	03	ForRestoreStaff	{J}
085C5778	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	04	ForHeal	{J}
085C5798	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	05	{J}
085C57B8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	06	ForMineAndLightRune	{J}
085C57D8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	07	ForRescueStaff	{J}
085C57F8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	08	Steal	{J}
085C5818	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	09	Summon	{J}
085C5838	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	10	Pick	{J}
085C5858	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	11	Support	{J}
085C5878	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	12	Talk	{J}
085C5898	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	13	ForOffensiveStaff	{J}
085C58B8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	14	Trade2	{J}
085C58D8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	15	{J}
085C58F8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	16	{J}
085C5918	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	17	{J}
085C5938	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	18	Drop	{J}
085C5958	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	19	Rescue	{J}

0859D238	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	01	{U}
0859D258	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	02	{U}
0859D278	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	03	ForRestoreStaff	{U}
0859D298	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	04	ForHeal	{U}
0859D2B8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	05	{U}
0859D2D8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	06	ForMineAndLightRune	{U}
0859D2F8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	07	ForRescueStaff	{U}
0859D318	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	08	Steal	{U}
0859D338	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	09	Summon	{U}
0859D358	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	10	Pick	{U}
0859D378	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	11	Support	{U}
0859D398	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	12	Talk	{U}
0859D3B8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	13	ForOffensiveStaff	{U}
0859D3D8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	14	Trade2	{U}
0859D3F8	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	15	{U}
0859D418	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	16	{U}
0859D438	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	17	{U}
0859D458	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	18	Drop	{U}
0859D478	@NEW_TARGET_SELECTION_STRUCT	NewTargetSelectionStruct	19	Rescue	{U}
08051B74	LoadHPBarImage	{J}
080A0DD8	CallSupply1	{J}
080A0DF8	CallSupply2	{J}
08050E40	LoadHPBarImage	{U}
0809EB38	CallSupply1	{U}
0809EB58	CallSupply2	{U}
08A92410	&LZ77	Some TSA data		1	{J}
080B6B7C	SetGameOption	r0=OptionIndex	r1=OptionValue	{J}
080B1F64	SetGameOption	r0=OptionIndex	r1=OptionValue	{U}
080B6A00	GetGameOption	RET=OptionValue	r0=OptionIndex	{J}
080B1DE8	GetGameOption	RET=OptionValue	r0=OptionIndex	{U}
08075424	StartEkrTriArmorKnight	{U}
08075538	StartEkrTriArmorKnightOBJ	{U}
0807785C	StartEkrTriArmorKnight	{J}
08077970	StartEkrTriArmorKnightOBJ	{J}
080A8AF0	SaveMenu_LoadNextChapterName	{U}
080AD508	SaveMenu_LoadNextChapterName	{J}
080c2030	Worldmap_GetNextChapterID	{J}
080BD224	Worldmap_GetNextChapterID	{U}
080C572C	IsExtraMap_WorldmapSkirmishes	{J}
080989d4	PrepScreen_RightUP_LoadChapterOBJ	{J}
08098a94	PrepScreen_RightUP_LoadTowerOBJ	{J}
08098b54	PrepScreen_RightUP_LoadRuinsOBJ	{J}
08098c14	PrepScreen_RightUP_LoadExtraOBJ	{J}
080C0960	IsExtraMap_WorldmapSkirmishes	{U}
080966F0	PrepScreen_RightUP_LoadChapterOBJ	{U}
080967B0	PrepScreen_RightUP_LoadTowerOBJ	{U}
08096870	PrepScreen_RightUP_LoadRuinsOBJ	{U}
08096930	PrepScreen_RightUP_LoadExtraOBJ	{U}
08A942C6	:08A942D3	PrepScreen_RightUP_ChapterOBJ_Data	{J}
08A942D4	:08A942E1	PrepScreen_RightUP_TowerOBJ_Data	{J}
08A942E2	:08A942EF	PrepScreen_RightUP_RuinsOBJ_Data	{J}
08A942F0	:08A942FD	PrepScreen_RightUP_ExtraOBJ_Data	{J}
08A18582	:08A1858F	PrepScreen_RightUP_ChapterOBJ_Data	{U}
08A18590	:08A1859D	PrepScreen_RightUP_TowerOBJ_Data	{U}
08A1859E	:08A185AB	PrepScreen_RightUP_RuinsOBJ_Data	{U}
08A185AC	:08A185B9	PrepScreen_RightUP_ExtraOBJ_Data	{U}
08089354	Called when you have an R-text bubble open and you move the cursor UP	{U}
08089384	Called when R-text is open and moving DOWN	{U}
080893B4	Called when R-text is open and moving LEFT	{U}
080893E4	Called when R-text is open and moving RIGHT	{U}
0808B5E0	Called when you have an R-text bubble open and you move the cursor UP	{J}
0808B610	Called when R-text is open and moving DOWN	{J}
0808B640	Called when R-text is open and moving LEFT	{J}
0808B670	Called when R-text is open and moving RIGHT	{J}
080A8890	LoadSoundRoomEnableList	{J}
080A88E8	SaveSoundRoomEnableList_Overwrite	{J}
080A894C	SaveSoundRoomEnableList	r1=SongID	{J}
080A3E4C	LoadSoundRoomEnableList	{U}
080A3EA4	SaveSoundRoomEnableList_Overwrite	{U}
080A3F08	SaveSoundRoomEnableList	r1=SongID	{U}
08A13020	:08A13043	Move Sound: Walk	{J}
08A13044	:08A13087	Move Sound: Armor	{J}
08A13088	:08A130B5	Move Sound: Tarvos horse	{J}
08A130B6	:08A130E1	Move Sound: Gargoyle	{J}
08A130E2	:08A13139	Move Sound: Pegasus	{J}
08A1313A	:08A1315B	Move Sound: Zombie	{J}
08A1315C	:08A1317D	Move Sound: Skeleton	{J}
08A1317E	:08A131A9	Move Sound: Bigl	{J}
08A131AA	:08A131C1	Move Sound: Bael	{J}
08A131C2	:08A131EF	Move Sound: Mauthedoog	{J}
08A131F0	:08A13255   Move Sound: Gorgon	{J}
08A13256	:08A13289	Move Sound: fleet	{J}
08A1328A	:08A132AF	Move Sound: Myrrh	{J}
089A2998	:089A29BB	Move Sound: Walk	{U}
089A29BC	:089A29FF	Move Sound: Armor	{U}
089A2A00	:089A2A2D	Move Sound: Tarvos horse	{U}
089A2A2E	:089A2A59	Move Sound: Gargoyle	{U}
089A2A5A	:089A2AB1	Move Sound: Pegasus	{U}
089A2AB2	:089A2AD3	Move Sound: Zombie	{U}
089A2AD4	:089A2AF5	Move Sound: Skeleton	{U}
089A2AF6	:089A2B21	Move Sound: Bigl	{U}
089A2B22	:089A2B39	Move Sound: Bael	{U}
089A2B3A	:089A2B67	Move Sound: Mauthedoog	{U}
089A2B68	:089A2BCD   Move Sound: Gorgon	{U}
089A2BCE	:089A2C01	Move Sound: fleet	{U}
089A2C02	:089A2C27	Move Sound: Myrrh	{U}
03006CB0	:030078AF	ipatix High Quality Sound Mixer 2 getting somewhat dangerously close to the stack)
03007510	:030078AF	Improved Sound Mixer	new mixing buffer
0203AE00	:0203AEC7	Hp bars with cached warning	by circles and Tequila (included in Skill System)	{U}
//02026A90	:02026AAF	IconRework (or CIconDisplay)	{U}
//02026E30	AutoNewline	Amount of space used is variable, since it copies textIDs there for processing	 Location can be changed in installer	event	{U}
//203AAC0	ArenaLimits	Amount of space used is also variable, since it copies user defined text strings there (but only a couple sentences, so far less than AutoNewline)	 Location can also be changed in installer	event	{U}
080BB4AC	LoadEDCharactersDataTo0x30_0x34	{J}
080B696C	LoadEDCharactersDataTo0x30_0x34	{U}
080BB58C	GetCharacterSupportA	r0=unit:UNIT	{J}
080B6A4C	GetCharacterSupportA	r0=unit:UNIT	{U}
080BB5C0	IsAlreadyIntroducedAtPairedEnd	{J}
080B6A80	IsAlreadyIntroducedAtPairedEnd	{U}
08017d84	StoreUnitStats	{J}
0807D074	GenerateSummonedCharacter	{J}
0807AD1C	GenerateSummonedCharacter	{U}
0203AB40    :0203AB44	Skill animation display Use as work memory for skill animation display {J}	
0203AB48    :0203AD3C	Extended convoy Use in patch to expand convoy 250 (250 * 2 \u003d 500 bytes) {J}	
08074A4C	IsHealStaffBGM	{J}
08072570	IsHealStaffBGM	{U}
08014BF8	Fade out music at the beginning of the clear turn list	{J}
08014BD0	Fade out music at the beginning of the clear turn list	{U}
0203AB40    :0203AB43	(Old) Skill animation display Use as work memory for skill animation display {J}	
08014328	SomeDrawNumber	{J}
08014270	SomeDrawNumber	{U}
0802F370	Use_PureWater	{J}
0802F450	Use_PureWater	{U}
0802F3AC	Use_TorchItem	{J}
0802F48C	Use_TorchItem	{U}
08003B90	Another Print idk	{J}
08079c04	Direction when defeating demon king	{J}
080777E0	Direction when defeating demon king	{U}
0803F47C	Execute conversation event from enemy AI	{J}
0803F4EC	Execute conversation event from enemy AI	{U}
08079BB4	New_Procs_ekrDragonTunk	{J}
08077790	New_Procs_ekrDragonTunk	{U}
08088868	Level adjustment for units leaving the party		{J}
0808659C	Level adjustment for units leaving the party		{U}
080DCCC6	:080DCCDF	Menu TSA when exchanging items		{J}
080D7F92	:080D7FAB	Menu TSA when exchanging items		{U}
0801F3D8	ShowBrokenWallEffect	{J}
0801F780	ShowBrokenWallEffect	{U}
080B4144	SoundRoom_DrawScreen_With_BackgoundImage	{J}
080AF524	SoundRoom_DrawScreen_With_BackgoundImage	{U}
080B7398	Start ColFadeIn	{J}
080B2780	Start ColFadeIn	{U}
080DC940	:080DC946	DATA UnitAdditionalBlinkingIcons	Blue,Red,Green	{J}
080D7C0C	:80D7C12	DATA UnitAdditionalBlinkingIcons	Blue,Red,Green	{U}
08013174	DrawStatScreenBar_GenenicBuffer_To_VRAM	{J}
08088cfc	DrawStatScreenBar_Make_GenenicBuffer	{J}
080130BC	DrawStatScreenBar_GenenicBuffer_To_VRAM	{U}
08086A40	DrawStatScreenBar_Make_GenenicBuffer	{U}
08078B08	Show_map_emotion_UpdateLoop	{U}
0807AF1C	Show_map_emotion_UpdateLoop	{J}
0805999C	Forcibly overwrite the palette of the archer's battle animation	{U}
0805A740	Forcibly overwrite the palette of the archer's battle animation	{J}
08005CA4	DisplayBgFaceCore	r0=bgOut	r1=portrait	r2=tileId	r3=palId	{U}
08005BA8	DisplayBgFaceCore	r0=bgOut	r1=portrait	r2=tileId	r3=palId	{J}
080B4E1C	Sound Room	Draw a sound waveform		{J}
080B4D94	Sound Room	Draw sound waveform LOW		{J}
080b4e58	Sound Room	RANDOM MODE Time display		{J}
080B4CA0	Sound Room	Display of song title		{J}
080B0204	Sound Room	Draw a sound waveform		{U}
080B017C	Sound Room	Draw sound waveform LOW		{U}
080B0240	Sound Room	RANDOM MODE Time display		{U}
080B0088	Sound Room	Display of song title		{U}

08A9E3A8	&OAMREGS	Sound Room	Control	PlayButton	OAM	{J}
08A9E3B6	&OAMREGS	Sound Room	Control	StopButton	OAM	{J}
08A9E3C4	&OAMREGS	Sound Room	Control	RandomMode Button	OAM	{J}
08A9E406	&OAMREGS	Sound Room	RANDOMMODE	Seek bar knob at playback position	OAM	{J}
08A9E3F2	&OAMREGS	Sound Room	RANDOMMODE	Seek bar at playback position	OAM	{J}
08A9E3D2	&OAMREGS	Sound Room	RANDOMMODE	RANDOM MODE Display	OAM	{J}
085B8D2C	&OAMREGS	Sound Room	SongName	Background	OAM	{J}
085B8D24	&OAMREGS	Sound Room	SongName	Name	OAM	{J}
08A21440	&OAMREGS	Sound Room	Control	PlayButton	OAM	{U}
08A2144E	&OAMREGS	Sound Room	Control	StopButton	OAM	{U}
08A2145C	&OAMREGS	Sound Room	Control	RandomMode Button	OAM	{U}
08A2148A	&OAMREGS	Sound Room	RANDOMMODE	Seek bar knob at playback position	OAM	{U}
08A2149E	&OAMREGS	Sound Room	RANDOMMODE	Seek bar at playback position	OAM	{U}
08A2146A	&OAMREGS	Sound Room	RANDOMMODE	RANDOM MODE Display	OAM	{U}
08590F94	&OAMREGS	Sound Room	SongName	Background	OAM	{U}
08590F8C	&OAMREGS	Sound Room	SongName	Name	OAM	{U}
0808BFE0	MakeHelpDialog_WeaponDetail	{J}
0808b55c	Determine the type of weapon	{J}
0808B438	HelpDialog_CalcStringWidthAndHeight	{J}
08089CD4	MakeHelpDialog_WeaponDetail	{U}
080892D0	Determine the type of weapon	{U}
02020988	gGenericTSABuffer
080999E4	drawing	Rotating arrow	{J}
08097700	drawing	Rotating arrow	{U}
08042e1c	CheckGameLinkArenaBit	{J}
080A83D0	CopyMiniMapTerrainChips	{U}
080ACDE8	CopyMiniMapTerrainChips	{J}
0802F92C	ExecJunaFruits	{J}
0802F8C4	DecrementLevel_JunaFruits	{J}
0802F9E0	ExecJunaFruits	{U}
0802F978	DecrementLevel_JunaFruits	{U}
0808ec60	Drawing of terrain avoidance rate, etc	{J}
08A933D8	&HEADERTSA	Tile that will be FillTileRect	Terrain avoid rate, etc	{J}
080131f0	GetTerrainTypeID	{J}
0808C964	Drawing of terrain avoidance rate, etc	{U}
08A1768C	&HEADERTSA	Tile that will be FillTileRect	Terrain avoid rate, etc	{U}
08013138	GetTerrainTypeID	{U}
08028C0C	ItemEffect_ErrorMessage	{U}
08028BB8	ItemEffect_ErrorMessage	{J}
03004940	SetSubjectMap_Array	{J}
08095970	IsFormationMenuEnable	{U}
08097C50	IsFormationMenuEnable	{J}
020145c8	:020165c8	SomeBGBuffer	{U}
020145C8	:020165C8	SomeBGBuffer	{J}
08077EE8	DrawBattleBG_Low	{J}
08077F0C	DrawBattleBG	{J}
08075AB4	DrawBattleBG_Low	{U}
08075AD8	DrawBattleBG	{U}
08057888	New_6C_ekrUnitKakudai	{J}
08075A08	Determining level-up status	{J}
08081694	MapAnimLevelUp_Lower level up dialog	{J}
08053E94	StartEfxDeadAlpha	Flashing effect on death	{J}
08053F7C	StartEfxDeadDragonAlpha	{J}
080578FC	ekrUnitKakudai_InitBattleUnits	{J}
08057AF4	ekrUnitKakudai_ZoomInEffect	{J}
08057CA0	ekrUnitKakudai_NOP	{J}

//https://discord.com/channels/144670830150811649/725478895226191892/850481060751999016
08012E84	GetValueFromEasingFunction	r0=rate function	r1=start x	r2=end x	r3=current t	sp0=end t	{J}
08012DCC	GetValueFromEasingFunction	r0=rate function	r1=start x	r2=end x	r3=current t	sp0=end t	{U}

08057424	StartEkrBaseKaiten	Glowing rotating floor	{J}
08057318	ekrBattleEnding_FadeGrayToNormal	{J}
08057298	ekrBattleEnding_RedrawUnits	{J}
08057210	ekrBattleEnding_ReDrawMapSomething	{J}
080571B0	ekrBattleEnding_ZoomOutEffect	{J}
0805740C	ekrBattleEnding_Destructor	{J}
08056F28	ekrBattleStarting_InitsBattleUnits	{J}
08056E88	ekrBattleStarting_InitsBattleScreen	{J}
08056D7C	ekrBattleStarting_HideMapOtherUnits	{J}
08056C78	ekrBattleStarting_InitBattle	{J}
08057000	ekrBattleStarting_BattleBG_FadeIn_Palette	{J}
08056900	New_6C_ekrUnitKakudai	{U}
0807352C	Determining level-up status	{U}
0807F354	MapAnimLevelUp_Lower level up dialog	{U}
080531A4	StartEfxDeadAlpha	Flashing effect on death	{U}
0805328C	StartEfxDeadDragonAlpha	{U}
08056390	ekrBattleEnding_FadeGrayToNormal	{U}
08056310	ekrBattleEnding_RedrawUnits	{U}
08056288	ekrBattleEnding_ReDrawMapSomething	{U}
08056228	ekrBattleEnding_ZoomOutEffect	{U}
08056484	ekrBattleEnding_Destructor	{U}
08056974	ekrUnitKakudai_InitBattleUnits	{U}
08056B70	ekrUnitKakudai_ZoomInEffect	{U}
08056D18	ekrUnitKakudai_NOP	{U}
08055FA0	ekrBattleStarting_InitsBattleUnits	{U}
08055F00	ekrBattleStarting_InitsBattleScreen	{U}
08055DF4	ekrBattleStarting_HideMapOtherUnits	{U}
08055CF0	ekrBattleStarting_InitBattle	{U}
08056078	ekrBattleStarting_BattleBG_FadeIn_Palette	{U}
0805649C	StartEkrBaseKaiten	Glowing rotating floor	{U}
08073f94	SomePlaySound_After	{J}
080727e4	IsBattleByDragon	{J}
08071AB0	SomePlaySound_After	{U}
08070234	IsBattleByDragon	{U}
080756FC	StartEfxClasschgCLONE	{J}
08073220	StartEfxClasschgCLONE	{U}
08099A2C	StartMenuScroll	{J}
080B1F40	StartDrawBlueBarInPrepScreenMenu	{J}
08AAA658	&HEADERTSA	Sound Room	Control window	{J}
08AAA738	&HEADERTSA	Sound Room	Song list window	{J}
080b40f0	Sound Room	Achievement rate display	{J}
08097748	StartMenuScroll	{U}
080AD4A0	StartDrawBlueBarInPrepScreenMenu	{U}
08A2C4C8	&HEADERTSA	Sound Room	Control window	{U}
08A2C5A8	&HEADERTSA	Sound Room	Song list window	{U}
080af4d0	Sound Room	Achievement rate display	{U}
080A7D70	IsEnableExtraMenuSupportViewer	{J}
080A82B4	IsEnableExtraMenuSupportViewerLow	{J}
080A7D6C	IsEnableExtraMenuSoundRoom	{J}
080A7D34	IsEnableExtraMenuNetworkArena	{J}
080A7E30	IsEnableExtraMenuFreemap	{J}
080A332C	IsEnableExtraMenuSupportViewer	{U}
080A3870	IsEnableExtraMenuSupportViewerLow	{U}
080A3328	IsEnableExtraMenuSoundRoom	{U}
080A32F0	IsEnableExtraMenuNetworkArena	{U}
080A33EC	IsEnableExtraMenuFreemap	{U}
08095240	PrepMenu_PressStart_To_Battle	{U}
089EE97C	&EVENT	An event when you leave a tower or ruins		{U}
08037CA0	If you destroy 200 enemies in a tower or ruins, turn on the flag to join Riev and Hayden		{U}

030017A0	@DUNGEON	gDungeonState	{U}
030017ac	@DUNGEON	gBeforeDungeonState	{U}
030017B8	gDungeonSomething00	{U}
030017BC	gDungeonSomething04	{U}
030017C0	gDungeonSomething08	{U}
030017C4	gDungeonType	00=Tower 01=Ruins	{U}

03001798	@DUNGEON	gDungeonState	{J}
030017A4	@DUNGEON	gBeforeDungeonState	{J}
030017B0	gDungeonSomething00	{J}
030017B4	gDungeonSomething04	{J}
030017B8	gDungeonSomething08	{J}
030017BC	gDungeonType	00=Tower 01=Ruins	{J}

@DUNGEON@00	short	Exps
@DUNGEON@02	byte	DeployUnits
@DUNGEON@03	byte	ClearTurns
@DUNGEON@04	short	Unk4
@DUNGEON@06	short	DefeatsCount
@DUNGEON@08	byte	Unk8
@DUNGEON@09	byte	Unk9
@DUNGEON@0A	byte	UnkA
@DUNGEON@0B	byte	UnkB
08037E4C	SaveBeforeDungeonState	{U}
08037E64	LoadBeforeDungeonState	{U}
08037E08	SaveDungeonState	{U}
08037E30	LoadDungeonState	{U}
08A60AB4	&EVENT	An event when you leave a tower or ruins		{J}
08037D38	If you destroy 200 enemies in a tower or ruins, turn on the flag to join Riev and Hayden		{J}
08037F34	SaveDungeonState	{J}
08037F5C	LoadDungeonState	{J}
08037F78	SaveBeforeDungeonState	{J}
08037F90	LoadBeforeDungeonState	{J}
080BBA28	GetWorldMapNodeName	{U}
080AA768	GetWorldmapNodeNameForSaveMenuRtextData	{U}
08089DE8	MakeTextForSaveMenuRtextData	{U}
080c086c	GetWorldMapNodeName	{J}
080AF248	GetWorldmapNodeNameForSaveMenuRtextData	{J}
0808C0F8	MakeTextForSaveMenuRtextData	{J}
0203E78C	gChapterTitleGrahicsWorkBuffer	{U}
0203E788	gChapterTitleGrahicsWorkBuffer	{J}
080DEF00	&CSTRING	END	{J}
08048BDC	Debug_Display_END_String	{J}
08032D40	LoadArrowSystemImages	{J}
08032E28	LoadArrowSystemImages	{U}
0803ACF8	IsDoNotTragetUnitIDInList	{U}
0803AD18	IsDoNotTragetUnitIDInList	{J}
080a2108	WorldmapItemManage_GetText_Sell_Cancel	{J}
080A29A8	CreateWorldmapItemSell	{J}
0809C0F8	CreateWorldmapItemSell_Wrap	{J}
080A25C8	WorldmapItemSell_ItemMenu_OnDraw_Sub	{J}
080A26C0	WorldmapItemSell_ItemMenu_OnDraw_Main	{J}
080A2660	WorldmapItemSell_YesNoDialog_OnCancel	{J}
080A280C	WorldmapItemSell_Show_YesNoDialog	{J}
08073F60	StopMusicPlayerInfo0	{J}
0809FE68	WorldmapItemManage_GetText_Sell_Cancel	{U}
080A070C	CreateWorldmapItemSell	{U}
08099E18	CreateWorldmapItemSell_Wrap	{U}
080A032C	WorldmapItemSell_ItemMenu_OnDraw_Sub	{U}
080A0424	WorldmapItemSell_ItemMenu_OnDraw_Main	{U}
080A03C4	WorldmapItemSell_YesNoDialog_OnCancel	{U}
080A0570	WorldmapItemSell_Show_YesNoDialog	{U}
08071A7C	StopMusicPlayerInfo0	{U}
08004c64	DrawUiBar__	{J}
08004D5C	DrawUiBar__	{U}
08012cec	StartEarthquake	{J}
08012C34	StartEarthquake	{U}
08012D40	EndEarthquake	{J}
08012C88	EndEarthquake	{U}
080727C4	IsBattleByDemonKing	{J}
080799A8	Start_ekrDragonTunkFace	{J}
08054364	Start_efxQuakePure	{J}
08054404	Start_efxHitQuakePure	{J}
0807A548	Start_efxSelfThunderBG	{J}
0807A468	Start_efxSelfThunder	{J}
08070214	IsBattleByDemonKing	{U}
08077584	Start_ekrDragonTunkFace	{U}
08053678	Start_efxQuakePure	{U}
08053718	Start_efxHitQuakePure	{U}
08078124	Start_efxSelfThunderBG	{U}
08078044	Start_efxSelfThunder	{U}
0800E574	StartDialogueBoxPossitonBySlotB	{J}
0800E4E8	StartDialogueBoxBottomByCGScene	{J}
08090CAC	SetDialogueBoxSomeStyleMaybe	{J}
0800e31c	StartDialogueBoxPossitonBySlotB	{U}
0800E290	StartDialogueBoxBottomByCGScene	{U}
0808e9d8	SetDialogueBoxSomeStyleMaybe	{U}
080A8DF0	GetGameClearTimeByEachChapter	{J}
080A43AC	GetGameClearTimeByEachChapter	{U}
08000D14	ConvertFrameSecToSecStrng	{J}
08000D64	ConvertFrameSecToSecStrng	{U}
080BA8E0	ASMC_ExecuteSuppendSave	{J}
080B5D5C	ASMC_ExecuteSuppendSave	{U}
0801A278	PrepareBlankTile	{U}
08019F48	PrepareBlankTile	{J}
08630928	&LZ77	ELFIRE_TSA_1	{J}
08630AD8	&LZ77	ELFIRE_TSA_2	{J}
08614EE0	&LZ77	CriticalBG_TSA_1	{J}
08615380	&LZ77	CriticalBG_TSA_2	{J}
085FAC50	&LZ77	PierceCriticalBG_TSA_1	{J}
085FAF10	&LZ77	PierceCriticalBG_TSA_2	{J}
086158BC	&LZ77	SRankWeaponEffectBG_TSA	{J}
080E8934	&LZ77	Something's TSA	29	{J}
080E8A48	&LZ77	Something's TSA	30	{J}
080E8B6C	&LZ77	Something's TSA	31	{J}
080E8C44	&LZ77	Something's TSA	32	{J}
080E8D60	&LZ77	Something's TSA	33	{J}
080E8E84	&LZ77	Something's TSA	34	{J}
085E982C	&LZ77	Something's TSA	35	{J}
0861BE44	&LZ77	MagfcastBG_TSA_1	{J}
0861BEE0	&LZ77	MagfcastBG_TSA_2	{J}
0861BF7C	&LZ77	MagfcastBG_TSA_3	{J}
0861C01C	&LZ77	MagfcastBG_TSA_4	{J}
0861C0C0	&LZ77	MagfcastBG_TSA_5	{J}
0861C174	&LZ77	MagfcastBG_TSA_6	{J}
08698E90	&LZ77	Something's TSA	36	{J}
086991F0	&LZ77	Something's TSA	37	{J}
08699544	&LZ77	Something's TSA	38	{J}
08699854	&LZ77	Something's TSA	39	{J}
08699B38	&LZ77	Something's TSA	40	{J}
08699E08	&LZ77	Something's TSA	41	{J}
0869A0A0	&LZ77	Something's TSA	42	{J}
0869A338	&LZ77	Something's TSA	43	{J}
0869A564	&LZ77	Something's TSA	44	{J}
0869A818	&LZ77	Something's TSA	45	{J}
0869AAD8	&LZ77	Something's TSA	46	{J}
0869AE08	&LZ77	Something's TSA	47	{J}
0869B158	&LZ77	Something's TSA	48	{J}
0869B4D0	&LZ77	Something's TSA	49	{J}
0869B858	&LZ77	Something's TSA	50	{J}
086E945C	&LZ77	Something's TSA	51	{J}
086E96D0	&LZ77	Something's TSA	52	{J}
086E9948	&LZ77	Something's TSA	53	{J}
086E9BC0	&LZ77	Something's TSA	54	{J}
087526C8	&LZ77	FirebreathBG_TSA_1	{J}
08761324	&LZ77	Something's TSA	55	{J}
0877B080	&LZ77	Something's TSA	56	{J}
0877B4DC	&LZ77	Something's TSA	57	{J}

08603D50	&LZ77	ELFIRE_TSA_1	{U}
08603F00	&LZ77	ELFIRE_TSA_2	{U}
085E8308	&LZ77	CriticalBG_TSA_1	{U}
085E87A8	&LZ77	CriticalBG_TSA_2	{U}
085D0A20	&LZ77	PierceCriticalBG_TSA_1	{U}
085D0CE0	&LZ77	PierceCriticalBG_TSA_2	{U}
085E8CE4	&LZ77	SRankWeaponEffectBG_TSA	{U}
080E3554	&LZ77	Something's TSA	29	{U}
080E3668	&LZ77	Something's TSA	30	{U}
080E378C	&LZ77	Something's TSA	31	{U}
080E3864	&LZ77	Something's TSA	32	{U}
080E3980	&LZ77	Something's TSA	33	{U}
080E3AA4	&LZ77	Something's TSA	34	{U}
085BF5FC	&LZ77	Something's TSA	35	{U}
085EF26C	&LZ77	MagfcastBG_TSA_1	{U}
085EF308	&LZ77	MagfcastBG_TSA_2	{U}
085EF3A4	&LZ77	MagfcastBG_TSA_3	{U}
085EF444	&LZ77	MagfcastBG_TSA_4	{U}
085EF4E8	&LZ77	MagfcastBG_TSA_5	{U}
085EF59C	&LZ77	MagfcastBG_TSA_6	{U}
0866C2B8	&LZ77	Something's TSA	36	{U}
0866C618	&LZ77	Something's TSA	37	{U}
0866C96C	&LZ77	Something's TSA	38	{U}
0866CC7C	&LZ77	Something's TSA	39	{U}
0866CF60	&LZ77	Something's TSA	40	{U}
0866D230	&LZ77	Something's TSA	41	{U}
0866D4C8	&LZ77	Something's TSA	42	{U}
0866D760	&LZ77	Something's TSA	43	{U}
0866D98C	&LZ77	Something's TSA	44	{U}
0866DC40	&LZ77	Something's TSA	45	{U}
0866DF00	&LZ77	Something's TSA	46	{U}
0866E230	&LZ77	Something's TSA	47	{U}
0866E580	&LZ77	Something's TSA	48	{U}
0866E8F8	&LZ77	Something's TSA	49	{U}
0866EC80	&LZ77	Something's TSA	50	{U}
086BC884	&LZ77	Something's TSA	51	{U}
086BCD70	&LZ77	Something's TSA	52	{U}
086BCFE8	&LZ77	Something's TSA	53	{U}
086BCAF8	&LZ77	Something's TSA	54	{U}
08725AF0	&LZ77	FirebreathBG_TSA_1	{U}
08732368	&LZ77	Something's TSA	55	{U}
08745B74	&LZ77	Something's TSA	56	{U}
08745FD0	&LZ77	Something's TSA	57	{U}
08083F38	StartTourchStaffMapAnim	{J}
0807FEEC	StartProcForTourchStaffMapAnim	{J}

0807DBA8	StartProcForTourchStaffMapAnim	{U}
08014958	memset_short	r0=DestPtr	r1=Count	r2=FillValue	{J}
08014930	memset_short	r0=DestPtr	r1=Count	r2=FillValue	{U}
08076fc8	DrawStatusUP_ValueMain	{J}
08081330	DrawStatusUP_Value_Number	r0=Unknown	r1=Unknown	r2=GrowValue	{J}
08074B90	DrawStatusUP_ValueMain	{U}
0807EFF0	DrawStatusUP_Value_Number	r0=Unknown	r1=Unknown	r2=GrowValue	{U}
080abfe0	SaveMenu_DrawDifficultyHintText	{U}
080A8C2C	SaveMenu_Init	{U}
080A8CD4	SaveMenu_LoadBackGround	{U}
080A8F04	SaveMenu_LoadExtraMenuGraphics	{U}
080AC3E0	SaveMenu_StartNewGameDifficultySelect	{U}
080AA458	SaveMenu_Check_ValidDifficultySelected	{U}
080AD5B4	SaveMenu_Something_LCD_Registers	{U}
080AA30C	SaveMenu_Setup_Graphics_DifficultySelect	{U}
080AA1EC	SaveMenu_Setup_IORegisters_DifficultySelect	{U}
080B0A94	SaveMenu_DrawDifficultyHintText	{J}
080AD644	SaveMenu_Init	{J}
080AD6EC	SaveMenu_LoadBackGround	{J}
080AD91C	SaveMenu_LoadExtraMenuGraphics	{J}
080B0E88	SaveMenu_StartNewGameDifficultySelect	{J}
080AEF3C	SaveMenu_Check_ValidDifficultySelected	{J}
080AEDF0	SaveMenu_Setup_Graphics_DifficultySelect	{J}
080AECD0	SaveMenu_Setup_IORegisters_DifficultySelect	{J}
080025C0	RestoreMapBGM	{J}
08002670	RestoreMapBGM	{U}
08058FE8	OverraideEmptyMagicEffectBy_WarpRescueTorchUnLock	{J}
080581A0	OverraideEmptyMagicEffectBy_WarpRescueTorchUnLock	{U}
080AF2CC	SaveSlot_Display_PlayTime	{J}
080AA7EC	SaveSlot_Display_PlayTime	{U}
0808C0BC	SaveMemu_RButton_DrawLabel	{J}
0808C40C	StartDrawDialogProcs	{J}
080af224	GetHeroLevelForSaveMenuRtextData	{J}
080AD368	MakeDialogDataForSaveMenuRtextData	{J}
08090710	ChapterStatusScreen_DrawGoldAmountAndTurns	{J}
0809020C	ChapterStatusScreen_MakeData	{J}
08090780	ChapterStatusScreen_DrawMain	{J}
08089DB0	SaveMemu_RButton_DrawLabel	{U}
0808A0FC	StartDrawDialogProcs	{U}
080AA744	GetHeroLevelForSaveMenuRtextData	{U}
080A8950	MakeDialogDataForSaveMenuRtextData	{U}
0808E43C	ChapterStatusScreen_DrawGoldAmountAndTurns	{U}
0808DF24	ChapterStatusScreen_MakeData	{U}
0808E4AC	ChapterStatusScreen_DrawMain	{U}
08077E84	LoadBattleBG_ImgToVRAM	{J}
08075A50	LoadBattleBG_ImgToVRAM	{U}
0203E0FA	CurrentBattleBG	{J}
0203E0FE	CurrentBattleBG	{U}
0804CCEC	StartMoveUnitDeathBlend1	{J}
0804BF4C	StartMoveUnitDeathBlend1	{U}
080944C4	DrawColumnByUnitMenu	{J}
080921CC	DrawColumnByUnitMenu	{U}
08078960	Start_ekrDragonTunkBegin	{J}
08076540	Start_ekrDragonTunkBegin	{U}
08079ED0	Start_ekrWhiteINOUT	{J}
08070568	Start_ekrWhiteINOUT	{U}
08079984	Start_ekrDragonTunkBG_Base	{J}
08077560	Start_ekrDragonTunkBG_Base	{U}
08079AFC	LoadDemonKingTSATogSomeTSABuffer	{J}
080776D8	LoadDemonKingTSATogSomeTSABuffer	{U}
08077CD4	Start_efxTriangleQUAKE	{J}
0807589C	Start_efxTriangleQUAKE	{U}
0807293C	Start_ekrDragonQuake	{J}
0807038C	Start_ekrDragonQuake	{U}
0806FA04	Start_efxFlashFX	{J}
080737a4	FadeInPalette	r0=PaletteAddress	r1=StartPaletteCount	r2=EndPaletteCount	r3=CangeValue	{J}
08012954	Start_EVENT18_FadeColorBG	{J}
0806D6E8	Start_efxFlashFX	{U}
080712B0	FadeInPalette	r0=PaletteAddress	r1=StartPaletteCount	r2=EndPaletteCount	r3=CangeValue	{U}
08012890	Start_EVENT18_FadeColorBG	{U}
08077F9C	PlaySound_SE_WeaponBroke	{J}
08077F8C	PlaySound_SE_Show_Dialog_GetItem	{J}
08075B68	PlaySound_SE_WeaponBroke	{U}
08075B58	PlaySound_SE_Show_Dialog_GetItem	{U}
08009840	Get_OP_ClassReel_LotteryTableShift	{J}
080096D8	Get_MapIDToChapterID_For_OP_ClassReel_LotteryTableShift	{J}
08009950	Get_OP_ClassReel_LotteryTableShift	{U}
080097e8	Get_MapIDToChapterID_For_OP_ClassReel_LotteryTableShift	{U}
0807223c	LoadDragonZombieTSATogSomeTSABuffer	{J}
08023eac	IsAdjacentForSupply	{J}
0806FC8C	LoadDragonZombieTSATogSomeTSABuffer	{U}
08023EF0	IsAdjacentForSupply	{U}
020111CC	Buffer_ReorderPlayerUnitsBasedOnDeployment
08035804	ExecFortSelfHealMotion	{U}
08035904	ExecFortSelfHealMotion	{J}
0809CDBC	DrawCountOfPickupUnits_PrepScreen	{J}
0809CCC4	DrawPickupUnitsList_PrepScreen	{J}
0809AAF0)	DrawCountOfPickupUnits_PrepScreen	{U}
0809A9F8)	DrawPickupUnitsList_PrepScreen	{U}
08037cd8	InitializeDungeonState	{J}
08037C40	InitializeDungeonState	{U}
08028668	GetAttributeIconID	{J}
080286D4	GetAttributeIconID	{U}
080BA310	RunProcsArenaAfter	{J}
080B578C	RunProcsArenaAfter	{U}
080BA720	PlayVictoryCheersByArena	{J}
080B5B9C	PlayVictoryCheersByArena	{U}
080DFF70	:080E0008	KEEPEMPTY	1	Related to critical	{J}
080DAF60	:080DAFF8	KEEPEMPTY	1	Related to critical	{U}
08A1EB2C	:08A1EB45	KEEPEMPTY	2	{J}
089AE4A4	:089AE4BD	KEEPEMPTY	2	{U}
08A1F998	:08A1F9E7	KEEPEMPTY	3	{J}
089AF310	:089AF35F	KEEPEMPTY	3	{U}
08AC1BEC	:08AC1BFD	KEEPEMPTY	4	{J}
08A3E22C	:08A3E23D	KEEPEMPTY	4	{U}
08BB8EA0	:08BB8EEF	KEEPEMPTY	5	{J}
085C2BA4	:085C2C54	KEEPEMPTY	6	NPC UNIT RAM	{J}
0859A724	:0859A7D4	KEEPEMPTY	6	NPC UNIT RAM	{U}
0808EB0C	ParseTextCommandSetName0x8023	{U}
08090DE0	ParseTextCommandSetName0x8023	{J}
081B258C	:081B2C80	Staff role is entered in ASCII Not used.	{J}
@SAVEMENURTEXTDATA@01	byte	HeroLevel
@SAVEMENURTEXTDATA@02	byte	WorldmapNodeID
0203EF66	gSaveMenuRTextData.CurrentWorldmapNodeID	{U}
0203EF62	gSaveMenuRTextData.CurrentWorldmapNodeID	{J}
080A7A0C	GetMiniMapTypeFromCoordinateXY	{U}
080A7BF8	CalcGraphicsFromMiniMapTypeFromCoordinateXY	{U}
0809AAF0	DrawCountOfPickupUnits_PrepScreen	{U}
0809A9F8	DrawPickupUnitsList_PrepScreen	{U}
0806EC28	StartEfxNormalEffectBG	{J}
0806C904	StartEfxNormalEffectBG	{U}
0806EABC	StartEfxCriticalEffectBG	{J}
0806C798	StartEfxCriticalEffectBG	{U}
080B0354	Add item to Start Menu Main	{J}
080AB89C	Add item to Start Menu Main	{U}
080b032c	Add one item to the start menu	{J}
080AB874	Add one item to the start menu	{U}
0805CF64	StartEfxTeonoSE	{J}
0805CEA0	StartEfxTeonoOBJ2	{J}
0805CD78	StartEfxTeonoOBJ	{J}
0805C1C8	StartEfxTeonoSE	{U}
0805C104	StartEfxTeonoOBJ2	{U}
0805BFDC	StartEfxTeonoOBJ	{U}

08002574	StartSongVolumeTransitionA	{U}
08002730	SongVolumeTransitionB	{U}
08007A58	StartGpFaceProcs	{U}
08013800	NewMapPaletteBightnessFade	{U}
08021DA4	StartWarpIN	{U}
08021F08	StartWhiteCircularFade	{U}
08031154	StartGameGfxUnblocker	{U}
08030F48	ReloadMap	{U}
08035770	StartBottomHelpTextIfNotRunning	{U}
08042FFC	StartHold	{U}
08048A6C	StartLinkArenaPointsBoxLoader	{U}
0804C208	StartSioWarpFx	{U}
08052C7C	StartEfxNoDamageYure	{U}
08053F4C	StartEfxFlashBG_1	{U}
08053F8C	StartEfxFlashBG_2	{U}
08053FC4	StartEfxFlashBG_3	{U}
08054030	StartEfxWhiteOUT	{U}
08054134	StartEfxWhiteIN	{U}
08054238	StartEfxBlackOUT	{U}
0805433C	StartEfxBlackIN	{U}
080548E0	StartEfxFlashUnitEffect	{U}
08055A40	StartEfxSPDQuake	{U}
080560D8	StartEkrBattleEnding	{U}
08056F20	StartEkrBaseAppear	{U}
0805B4E8	StartEfxTwobaiRST	{U}
0805B554	StartEfxDummyRST	{U}
0805B5E0	StartEfxRestWIN	{U}
0805BA1C	StartEfxALPHA	{U}
0805BB24	StartEfxCircleWIN	{U}
0805C44C	StartSpellAnimJavelin_2	{U}
0805C4A8	StartSpellAnimJavelin_3	{U}
0805C504	StartSpellAnimJavelin_4	{U}
0805C560	StartSpellAnimJavelin_5	{U}
0805C5BC	StartSpellAnimJavelin_6	{U}
0805C618	StartSpellAnimJavelin_7	{U}
0805C674	StartSpellAnimJavelin_8	{U}
0805C6D0	StartSpellAnimJavelin_9	{U}
0805C72C	StartSpellAnimJavelin_A	{U}
0805C788	StartSpellAnimJavelin_B	{U}
0805C88C	StartEfxTeyariOBJ	{U}
0805CA64	StartEfxSongBG	{U}
0805CB40	StartEfxSongOBJ	{U}
0805CD0C	StartEfxShooter	{U}
0805CE1C	StartEfxShooterOBJ	{U}
0805CEC8	StartEfxHurtmut	{U}
0805CFC0	StartEfxHurtmutOBJ	{U}
0805D14C	StartEfxFirebreathOBJ	{U}
0805D260	StartEfxFirebreathBG	{U}
0805D2EC	StartEfxFirebreathBGCOL	{U}
0805D444	StartEfxIcebreathOBJ	{U}
0805D59C	StartEfxDarkbreathBG	{U}
0805D644	StartEfxDarkbreathBGCOL	{U}
0805D6CC	StartEfxDarkbreathOBJ	{U}
0805DC64	StartEfxFireBG	{U}
0805DD1C	StartEfxFireOBJ	{U}
0805E230	StartEfxFimbulvetrBGTR	{U}
0805E318	StartEfxFimbulvetrBG	{U}
0805E430	StartEfxFimbulvetrOBJ	{U}
0805E4C4	StartEfxFimbulvetrOBJ2	{U}
0805E53C	StartEfxFimbulvetrOBJ2Fall	{U}
0805E754	StartEfxThunderstorm	{U}
0805E850	StartEfxThunderstormBG	{U}
0805E900	StartEfxThunderstormOBJ	{U}
0805E98C	StartEfxThunderstormCOLOR	{U}
0805EAAC	StartEfxThunderstormDARK	{U}
0805EB98	StartEfxAlacalibur	{U}
0805ECD4	StartEfxAlacaliburBG	{U}
0805ED98	StartEfxAlacaliburBGCOL	{U}
0805EE24	StartEfxAlacaliburOBJ	{U}
0805EED8	StartEfxMistyrain	{U}
0805F004	StartEfxMistyrainBG_1	{U}
0805F0B0	StartEfxMistyrainBG_2	{U}
0805F1A4	StartEfxMistyrainOBJ	{U}
0805F1E8	StartEfxMistyrainOBJ2	{U}
0805F53C	StartEfxResireBG2	{U}
0805F8B4	StartEfxLightning	{U}
0805F9A8	StartEfxLightningBG	{U}
0805FD5C	StartEfxPurgeOBJRND	{U}
0805FDFC	StartEfxPurgeOBJ	{U}
0805FFB0	StartEfxDevineBG_1	{U}
08060034	StartEfxDevineBG_2	{U}
080600B8	StartEfxDevineBG_3	{U}
080601E0	StartEfxDevineOBJ	{U}
0806028C	StartEfxHazymoon	{U}
08060790	StartEfxHazymoonOBJ3	{U}
08060838	StartEfxHazymoonOBJ3RND	{U}
08060A9C	StartEfxFenrirBG	{U}
08060B7C	StartEfxFenrirBGCOL	{U}
08060C18	StartEfxFenrirOBJ	{U}
08060CAC	StartEfxFenrirBG2_1	{U}
08060D3C	StartEfxFenrirBG2_2	{U}
08060E90	StartEfxFenrirOBJ2	{U}
08060F24	StartEfxFenrirOBJ2Chiri	{U}
08061420	StartEfxReblow	{U}
08061594	StartEfxLiveBG_1	{U}
08061650	StartEfxLiveBG_2	{U}
08061774	StartEfxLiveBGCOL_1	{U}
080617E4	StartEfxLiveBGCOL_2	{U}
0806189C	StartEfxLiveALPHA	{U}
0806196C	StartEfxLiveOBJ	{U}
080619CC	StartEfxReserveOBJ	{U}
08061ACC	StartEfxReblowOBJ	{U}
08061C18	StartEfxReserve_1	{U}
08061C48	StartEfxReserve_2	{U}
08061D28	StartEfxReserveBG	{U}
08061DF8	StartEfxReserveBGCOL	{U}
08061E8C	StartEfxReserveBG2	{U}
08062058	StartEfxReserveBGCOL2	{U}
080620EC	StartEfxRest	{U}
080622A0	StartEfxRestBG	{U}
08062358	StartEfxRestOBJ	{U}
08062524	StartEfxSilenceBG	{U}
08062608	StartEfxSilenceOBJ	{U}
080627B4	StartEfxSleepBG	{U}
08062898	StartEfxSleepOBJ	{U}
080628F0	StartEfxSleepOBJ2	{U}
08062944	StartEfxSleepSE	{U}
08062AF4	StartEfxHammarneBG	{U}
08062BAC	StartEfxHammarneOBJ	{U}
08062D30	StartEfxBerserkBG	{U}
08062EAC	StartEfxBerserkCLONE	{U}
08062F4C	StartEfxBerserkOBJ	{U}
08063214	StartEfxMshield	{U}
0806331C	StartEfxMshieldBG	{U}
080633D0	StartEfxMshieldOBJ	{U}
08063428	StartEfxMshieldOBJ2	{U}
08063590	StartEfxShineBG	{U}
0806364C	StartEfxShineBG2	{U}
0806376C	StartEfxShineBGCOL	{U}
080637F8	StartEfxShineOBJRND	{U}
080638F0	StartEfxShineOBJ	{U}
08063B6C	StartEfxLunaBG	{U}
08063C20	StartEfxLunaSCR	{U}
08063CFC	StartEfxLunaSCR2	{U}
08063D64	StartEfxLunaBG2	{U}
08063EA0	StartEfxLunaBGCOL	{U}
08063F3C	StartEfxLunaBG3	{U}
08064024	StartEfxLunaOBJ	{U}
0806428C	StartEfxLunaRST	{U}
08064308	StartEfxExcalibur	{U}
080644E0	StartEfxExcaliburBG	{U}
0806466C	StartEfxExcaliburBGCOL	{U}
080646FC	StartEfxExcaliburSCR	{U}
080647D0	StartEfxExcaliburSCR2	{U}
08064838	StartEfxExcaliburBG2	{U}
08064958	StartEfxExcaliburBGCOL2	{U}
080649E4	StartEfxExcaliburBG3	{U}
08064B04	StartEfxExcaliburBGCOL3	{U}
08064B90	StartEfxExcaliburOBJ	{U}
08064C28	StartEfxExcaliburBG0	{U}
08064D00	StartEfxGespenstBG4	{U}
08064DE4	StartEfxGespenstBGCOL2	{U}
08065008	StartEfxOuraBG_1	{U}
0806509C	StartEfxOuraBG_2	{U}
08065130	StartEfxOuraBG_3	{U}
0806521C	StartEfxOuraBG2	{U}
0806533C	StartEfxOuraBGCOL	{U}
080653CC	StartEfxOuraBG3	{U}
08065498	StartEfxSuperdruidBG3	{U}
080655C4	StartEfxSuperdruidOBJ2	{U}
08065634	StartEfxDancepara_1	{U}
08065670	StartEfxDancepara_2	{U}
080656AC	StartEfxDancepara_3	{U}
080656E8	StartEfxDancepara_4	{U}
08066060	StartEfxIvaldiOBJUprise	{U}
08066258	StartEfxIvaldiOBJ1	{U}
08066390	StartEfxIvaldiOBJ2	{U}
08066470	StartEfxIvaldiWOUT	{U}
08066514	StartEfxMaohFlash	{U}
080666D0	StartEfxMaohFlashBG1	{U}
080667E0	StartEfxMaohFlashBG2	{U}
08066914	StartEfxMaohFlashBG3	{U}
08066A0C	StartEfxMaohFlashBG4	{U}
08066B14	StartEfxMaohFlashWOUT	{U}
08066BD4	StartEfxMaohFlashBGCOL	{U}
08066CB8	StartEfxMaohFlashEyeROBJ2	{U}
08066DB0	StartEfxMaohFlashEyeLOBJ2	{U}
08066EC8	StartEfxMaohFlashEyeOBJ1	{U}
08066FC4	StartEfxMaohFlashEyeFire1OBJ1	{U}
080670DC	StartEfxMaohFlashEyeFire2OBJ1	{U}
080671F4	StartEfxMaohFlashThunderOBJ	{U}
08067400	StartEfxMaohFlashThunderOBJ2	{U}
080675D4	StartEfxStoneBG	{U}
080676E4	StartEfxStoneOBJ	{U}
0806788C	StartEfxEvilEyeBG	{U}
08067984	StartEfxEvilEyeBG2	{U}
08067AA0	StartEfxEvilEyeOBJ	{U}
08067DC4	StartEfxNaglfarBG	{U}
08067E98	StartEfxNaglfarBG2	{U}
08067F64	StartEfxNaglfarBG3	{U}
08068028	StartEfxNaglfarBG4	{U}
080680EC	StartEfxNaglfarOBJ	{U}
0806823C	StartEfxNaglfarOBJ2	{U}
08068314	StartEfxNaglfarOBJRockGyre	{U}
08068614	StartEfxNaglfarBlack	{U}
080687E4	StartEfxDrzDrakbreath	{U}
080688C0	StartEfxDrzDrakbreathOBJ	{U}
080689D4	StartEfxDrzDrakbreathBG	{U}
08068A60	StartEfxDrzDrakbreathBGCOL	{U}
08068B80	StartEfxDarkGrado	{U}
08068D78	StartEfxDarkGradoMapFadeOut	{U}
080692B0	StartEfxDarkGradoBG01	{U}
08069488	StartEfxDarkGradoBG02	{U}
08069878	StartEfxDarkGradoOBJ01piece	{U}
08069AC4	StartEfxDarkGradoOBJ01	{U}
08069B68	StartEfxDarkGradoOBJ02piece	{U}
08069C18	StartEfxDarkGradoOBJ02piece	{U}
08069E88	StartEfxDarkGradoOBJ02	{U}
0806A068	StartEfxCrimsonEyeBGFinish1	{U}
0806A138	StartEfxCrimsonEyeOBJFinishPiece	{U}
0806A3CC	StartEfxCrimsonEyeOBJFinish	{U}
0806A3F4	StartEfxGorgonBGFinish	{U}
0806A4CC	StartEfxCrimsonEyeBG	{U}
0806ABCC	StartEfxCrimsonEyeOBJ	{U}
0806AEF4	StartEfxDarkLongMons	{U}
0806B134	StartEfxDarkLongMonsBG01	{U}
0806B1E8	StartEfxDarkLongMonsBG02	{U}
0806B2C0	StartEfxDarkLongMonsOBJ	{U}
0806B4F8	StartEfxGorgon	{U}
0806B7A8	StartEfxGorgonBGDirt	{U}
0806B89C	StartEfxGorgonBGTwister	{U}
0806BC98	StartEfxGorgonOBJTwisterPiece	{U}
0806BEEC	StartEfxGorgonOBJTwister	{U}
0806C0B8	StartEfxGorgonBGFinish	{U}
0806CA38	StartEfxPierceCriticalEffectBG	{U}
0806CAB0	StartEfxPierceCriticalEffectBGCOL	{U}
0806CB1C	StartEfxPierceNormalEffect	{U}
0806CB7C	StartEfxPierceNormalEffectBG	{U}
0806CC60	StartEfxYushaSpinShield	{U}
0806CE30	StartEfxHurtmutEff00	{U}
0806CE80	StartEfxHurtmutEff00OBJ	{U}
0806CF80	StartEfxHurtmutEff01OBJ	{U}
0806D080	StartEfxMagfcast	{U}
0806D1B4	StartEfxMagfcastBG	{U}
0806D320	StartEfxSunakemuri	{U}
0806D35C	StartEfxSunakemuriOBJ	{U}
0806D570	StartEfxLokmsuna	{U}
0806D5A8	StartEfxLokmsunaOBJ	{U}
0806D65C	StartEfxKingPika	{U}
0806D764	StartEfxSongOBJ	{U}
0806D828	StartEfxDanceOBJ	{U}
0806D8D0	StartEfxSpecalEffect	{U}
0806D98C	StartEfxSRankWeaponEffect	{U}
0806DA1C	StartEfxSRankWeaponEffectBG	{U}
0806DA90	StartEfxSRankWeaponEffectSCR	{U}
0806DB34	StartEfxSRankWeaponEffectSCR2	{U}
0806DB9C	StartEfxMagdhisEffect	{U}
0806DC08	StartEfxMagdhisEffectBG	{U}
0806E128	StartEfxChillEffectBGCOL	{U}
0806EB7C	StartEfxOpFire	{U}
0806EBBC	StartEfxOpFireBG	{U}
0806EC68	StartEfxOpFireOBJ	{U}
0806ED0C	StartEfxOpThunder	{U}
0806ED54	StartEfxOpThunderBG	{U}
0806EE34	StartEfxOpThunderBGCOL	{U}
0806EEA8	StartEfxOpThunderOBJ	{U}
0806EF48	StartEfxopLive	{U}
0806EFB8	StartEfxopLiveBG	{U}
0806F058	StartEfxopLiveBGCOL	{U}
0806F0CC	StartEfxopLiveALPHA	{U}
0806F184	StartEfxopLiveOBJ	{U}
0806F210	StartEfxopLightning	{U}
0806F248	StartEfxopLightningBG	{U}
0806F304	StartEfxopMistyrainBG_1	{U}
0806F38C	StartEfxopMistyrainBG_2	{U}
0806F450	StartEfxopMistyrainOBJ	{U}
0806F47C	StartEfxopMistyrainOBJ2	{U}
0806F5BC	StartEfxopMistyrain	{U}
0806F648	StartEfxopMyrrh	{U}
0806F6B4	StartEfxopEvilEye	{U}
0806F704	StartEfxopEvilEye_NoNameProc	{U}
0806F844	StartEfxopStoneBG	{U}
0806F894	StartEfxopStoneBG_NoNameProc	{U}
08072DD8	StartEfxClasschgBG_1	{U}
08072E1C	StartEfxClasschgBG_2	{U}
08072ED8	StartEfxClasschgBGSE00	{U}
08072F58	StartEfxClasschgBGSE01	{U}
08072F84	StartEfxClasschgOBJGain	{U}
08072FE8	StartEfxClasschgOBJDrop	{U}
0807304C	StartEfxClasschgOBJDiffusion	{U}
080730C4	StartEfxClasschgFIN	{U}
080732A8	StartEfxBlackInOutUnit	{U}
08073388	StartEfxWhiteInOutUnit	{U}
08073468	StartEfxClasschgRST	{U}
08074580	StartEfxPartsofScroll	{U}
0807461C	StartEfxPartsofScroll2	{U}
080748C4	StartEfxLvupBG	{U}
08074964	StartEfxLvupBG2	{U}
080749F4	StartEfxLvupOBJ2	{U}
08074A60	StartEfxLvupBGCOL	{U}
08074D58	StartEobjLvup	{U}
08075350	StartEkrTriPegasusKnightOBJ	{U}
08075718	StartEkrTriArmorKnightOBJ2	{U}
08076470	StartEkrHenseiEndPROC	{U}
08076910	StartEkrDragonBaseHide	{U}
080769A8	StartEkrDragonBaseAppear	{U}
08076AA4	StartEkrDragonBodyAnime	{U}
080772C0	StartEkrDragonBodyBlack	{U}
08077AAC	StartEkrWhiteINOUT	{U}
0807E760	StartUnlockEffect	{U}
080AB534	StartSaveDrawCursor	{U}
080ABC00	StartSaveBgUp	{U}
080AC698	StartSaveMenuCursol	{U}
080AE360	StartFadeIn_2	{U}
080AE388	StartFadeOut_2	{U}
080AE3B0	StartFadeIn_3	{U}
080AE3D4	StartFadeOut_3	{U}
080AE440	StartFadeIn_4	{U}
080AE468	StartFadeOut_4	{U}
080B2F3C	Startopinfoenter	{U}
080B305C	Startopinfoview	{U}
080B325C	Startopinfoicon	{U}
080B40D0	Startopinfogaugedraw	{U}
080BB3E8	StartGmapUnitFade	{U}
080BB9A4	StartGmapScreen2	{U}
080BF210	StartWMapMoveCursor	{U}
080BF370	StartWMapScrollManage	{U}
080BF6C0	StartWMapPalFade	{U}
080BFAEC	StartWMapBaseEntry	{U}
080BFCC8	StartGmapMuEntry	{U}
080C04F4	StartGmapLineFade	{U}
080C07D4	StartGmapTmConfront	{U}
080C168C	StartGmapSogu	{U}
080C1A74	StartGmapTimeMons	{U}
080C1F18	StartGmapRMUpdate2	{U}
080C26BC	StartGmapRMBaPalAnim_1	{U}
080C2E04	StartGmapRMBaPalAnim_2	{U}
080C2FC0	StartGmapRMBorder	{U}
080C3378	StartGmapAutoMu_1	{U}
080C33D4	StartGmapAutoMu_2	{U}
080C400C	StartGmapBaseMenu	{U}

08013990	Make6C_ccramify_end	Starts a new ccramify_end 6C, which presumably cleans stuff up and returns to te previous game state. This doesn't seem to trigger on autopromotion.	{J}
080024C4	StartSongVolumeTransitionA	{J}
08002680	SongVolumeTransitionB	{J}
0800795C	StartGpFaceProcs	{J}
080138B8	NewMapPaletteBightnessFade	{J}
08021A94	StartWarpIN	{J}
08021D68	StartWhiteCircularFade	{J}
080310A0	StartGameGfxUnblocker	{J}
08030E94	ReloadMap	{J}
08035870	StartBottomHelpTextIfNotRunning	{J}
08042F80	StartHold	{J}
0804987C	StartLinkArenaPointsBoxLoader	{J}
0804CFA8	StartSioWarpFx	{J}
0805396C	StartEfxNoDamageYure	{J}
08054C34	StartEfxFlashBG_1	{J}
08054C74	StartEfxFlashBG_2	{J}
08054CAC	StartEfxFlashBG_3	{J}
08054D18	StartEfxWhiteOUT	{J}
08054E1C	StartEfxWhiteIN	{J}
08054D18	StartEfxBlackOUT	{J}
08054E1C	StartEfxBlackIN	{J}
080555C8	StartEfxFlashUnitEffect	{J}
080569E4	StartEfxSPDQuake	{J}
08057060	StartEkrBattleEnding	{J}
08057EA8	StartEkrBaseAppear	{J}
0805C28C	StartEfxTwobaiRST	{J}
0805C2F8	StartEfxDummyRST	{J}
0805C384	StartEfxRestWIN	{J}
0805C7CC	StartEfxALPHA	{J}
0805C8D4	StartEfxCircleWIN	{J}
0805D1E8	StartSpellAnimJavelin_2	{J}
0805D244	StartSpellAnimJavelin_3	{J}
0805D2A0	StartSpellAnimJavelin_4	{J}
0805D2FC	StartSpellAnimJavelin_5	{J}
0805D358	StartSpellAnimJavelin_6	{J}
0805D3B4	StartSpellAnimJavelin_7	{J}
0805D410	StartSpellAnimJavelin_8	{J}
0805D46C	StartSpellAnimJavelin_9	{J}
0805D4C8	StartSpellAnimJavelin_A	{J}
0805D524	StartSpellAnimJavelin_B	{J}
0805D628	StartEfxTeyariOBJ	{J}
0805D800	StartEfxSongBG	{J}
0805D8DC	StartEfxSongOBJ	{J}
0805DAA8	StartEfxShooter	{J}
0805DBB8	StartEfxShooterOBJ	{J}
0805DFC8	StartEfxHurtmut	{J}
0805E0C0	StartEfxHurtmutOBJ	{J}
0805E24C	StartEfxFirebreathOBJ	{J}
0805E360	StartEfxFirebreathBG	{J}
0805E3EC	StartEfxFirebreathBGCOL	{J}
0805E544	StartEfxIcebreathOBJ	{J}
0805E69C	StartEfxDarkbreathBG	{J}
0805DF40	StartEfxDarkbreathBGCOL	{J}
0805E7CC	StartEfxDarkbreathOBJ	{J}
0805ED64	StartEfxFireBG	{J}
0805EE1C	StartEfxFireOBJ	{J}
0805F330	StartEfxFimbulvetrBGTR	{J}
0805F330	StartEfxFimbulvetrBG	{J}
0805F530	StartEfxFimbulvetrOBJ	{J}
0805F5C4	StartEfxFimbulvetrOBJ2	{J}
0805F63C	StartEfxFimbulvetrOBJ2Fall	{J}
0805F854	StartEfxThunderstorm	{J}
0805F950	StartEfxThunderstormBG	{J}
0805FA00	StartEfxThunderstormOBJ	{J}
0805FA8C	StartEfxThunderstormCOLOR	{J}
0805FBAC	StartEfxThunderstormDARK	{J}
0805FC98	StartEfxAlacalibur	{J}
0805FDD4	StartEfxAlacaliburBG	{J}
0805FE98	StartEfxAlacaliburBGCOL	{J}
0805CD78	StartEfxAlacaliburOBJ	{J}
0805FFD8	StartEfxMistyrain	{J}
080601B0	StartEfxMistyrainBG_2	{J}
080602A4	StartEfxMistyrainOBJ	{J}
080602E8	StartEfxMistyrainOBJ2	{J}
0806063C	StartEfxResireBG2	{J}
080609B4	StartEfxLightning	{J}
08060AA8	StartEfxLightningBG	{J}
08060E5C	StartEfxPurgeOBJRND	{J}
08060EFC	StartEfxPurgeOBJ	{J}
0805F330	StartEfxDevineBG_1	{J}
0805F330	StartEfxDevineBG_2	{J}
0805F330	StartEfxDevineBG_3	{J}
080612E0	StartEfxDevineOBJ	{J}
0806138C	StartEfxHazymoon	{J}
08061890	StartEfxHazymoonOBJ3	{J}
08061938	StartEfxHazymoonOBJ3RND	{J}
08061B9C	StartEfxFenrirBG	{J}
08061C7C	StartEfxFenrirBGCOL	{J}
08061D18	StartEfxFenrirOBJ	{J}
08061DAC	StartEfxFenrirBG2_1	{J}
08061E3C	StartEfxFenrirBG2_2	{J}
08061F90	StartEfxFenrirOBJ2	{J}
08062024	StartEfxFenrirOBJ2Chiri	{J}
08062520	StartEfxReblow	{J}
08062694	StartEfxLiveBG_1	{J}
08062750	StartEfxLiveBG_2	{J}
08062874	StartEfxLiveBGCOL_1	{J}
08062874	StartEfxLiveBGCOL_2	{J}
0806299C	StartEfxLiveALPHA	{J}
08062A6C	StartEfxLiveOBJ	{J}
08062ACC	StartEfxReserveOBJ	{J}
08062BCC	StartEfxReblowOBJ	{J}
08062D18	StartEfxReserve_1	{J}
08062D48	StartEfxReserve_2	{J}
08062E28	StartEfxReserveBG	{J}
08062EF8	StartEfxReserveBGCOL	{J}
08062F8C	StartEfxReserveBG2	{J}
08062EF8	StartEfxReserveBGCOL2	{J}
080631EC	StartEfxRest	{J}
080633A0	StartEfxRestBG	{J}
08063458	StartEfxRestOBJ	{J}
08063624	StartEfxSilenceBG	{J}
08063708	StartEfxSilenceOBJ	{J}
08063624	StartEfxSleepBG	{J}
08063998	StartEfxSleepOBJ	{J}
080639F0	StartEfxSleepOBJ2	{J}
08063A44	StartEfxSleepSE	{J}
08063BF4	StartEfxHammarneBG	{J}
08063CAC	StartEfxHammarneOBJ	{J}
08063E30	StartEfxBerserkBG	{J}
08063FAC	StartEfxBerserkCLONE	{J}
0806404C	StartEfxBerserkOBJ	{J}
08064314	StartEfxMshield	{J}
0806441C	StartEfxMshieldBG	{J}
080644D0	StartEfxMshieldOBJ	{J}
08064528	StartEfxMshieldOBJ2	{J}
08064690	StartEfxShineBG	{J}
0806474C	StartEfxShineBG2	{J}
0806486C	StartEfxShineBGCOL	{J}
080648F8	StartEfxShineOBJRND	{J}
080649F0	StartEfxShineOBJ	{J}
0806441C	StartEfxLunaBG	{J}
08064D20	StartEfxLunaSCR	{J}
08064DFC	StartEfxLunaSCR2	{J}
08064E64	StartEfxLunaBG2	{J}
08061C7C	StartEfxLunaBGCOL	{J}
08065124	StartEfxLunaOBJ	{J}
08065398	StartEfxLunaRST	{J}
08065414	StartEfxExcalibur	{J}
080655EC	StartEfxExcaliburBG	{J}
08065778	StartEfxExcaliburBGCOL	{J}
08065808	StartEfxExcaliburSCR	{J}
080658DC	StartEfxExcaliburSCR2	{J}
08065944	StartEfxExcaliburBG2	{J}
0805FE98	StartEfxExcaliburBGCOL2	{J}
08065944	StartEfxExcaliburBG3	{J}
08065C10	StartEfxExcaliburBGCOL3	{J}
08065C9C	StartEfxExcaliburOBJ	{J}
08065D34	StartEfxExcaliburBG0	{J}
08066234	StartEfxGespenstBG4	{J}
08066318	StartEfxGespenstBGCOL2	{J}
08065FF0	StartEfxOuraBG_1	{J}
08065FF0	StartEfxOuraBG_2	{J}
08065FF0	StartEfxOuraBG_3	{J}
080668CC	StartEfxOuraBG2	{J}
080669EC	StartEfxOuraBGCOL	{J}
08066A7C	StartEfxOuraBG3	{J}
08067708	StartEfxSuperdruidBG3	{J}
08067984	StartEfxSuperdruidOBJ2	{J}
080679F4	StartEfxDancepara_1	{J}
08067A30	StartEfxDancepara_2	{J}
08067A6C	StartEfxDancepara_3	{J}
08067AA8	StartEfxDancepara_4	{J}
08068408	StartEfxIvaldiOBJUprise	{J}
08068600	StartEfxIvaldiOBJ1	{J}
08068818	StartEfxIvaldiWOUT	{J}
080688BC	StartEfxMaohFlash	{J}
08068A78	StartEfxMaohFlashBG1	{J}
08068B84	StartEfxMaohFlashBG2	{J}
08068A78	StartEfxMaohFlashBG3	{J}
08068A78	StartEfxMaohFlashBG4	{J}
08068EB0	StartEfxMaohFlashWOUT	{J}
08068F70	StartEfxMaohFlashBGCOL	{J}
08069054	StartEfxMaohFlashEyeROBJ2	{J}
08066DB0	StartEfxMaohFlashEyeLOBJ2	{J}
08069148	StartEfxMaohFlashEyeOBJ1	{J}
08069354	StartEfxMaohFlashEyeFire1OBJ1	{J}
08069464	StartEfxMaohFlashEyeFire2OBJ1	{J}
08069574	StartEfxMaohFlashThunderOBJ	{J}
08069728	StartEfxMaohFlashThunderOBJ2	{J}
08069904	StartEfxStoneBG	{J}
08069A14	StartEfxStoneOBJ	{J}
08069BBC	StartEfxEvilEyeBG	{J}
08069CB4	StartEfxEvilEyeBG2	{J}
08069DD0	StartEfxEvilEyeOBJ	{J}
0806A0F4	StartEfxNaglfarBG	{J}
0806A1C8	StartEfxNaglfarBG2	{J}
0806A294	StartEfxNaglfarBG3	{J}
0806A294	StartEfxNaglfarBG4	{J}
0806A41C	StartEfxNaglfarOBJ	{J}
0806A564	StartEfxNaglfarOBJ2	{J}
0806A63C	StartEfxNaglfarOBJRockGyre	{J}
0806A93C	StartEfxNaglfarBlack	{J}
0806AB0C	StartEfxDrzDrakbreath	{J}
0806ABE8	StartEfxDrzDrakbreathOBJ	{J}
0806ACFC	StartEfxDrzDrakbreathBG	{J}
0806AD88	StartEfxDrzDrakbreathBGCOL	{J}
0806AEA8	StartEfxDarkGrado	{J}
0806B0A0	StartEfxDarkGradoMapFadeOut	{J}
0806B5D8	StartEfxDarkGradoBG01	{J}
0806B7B0	StartEfxDarkGradoBG02	{J}
0806BDE8	StartEfxDarkGradoOBJ01	{J}
0806BE8C	StartEfxDarkGradoOBJ02piece	{J}
0806BF3C	StartEfxDarkGradoOBJ02piece	{J}
0806C1AC	StartEfxDarkGradoOBJ02	{J}
0806C38C	StartEfxCrimsonEyeBGFinish1	{J}
0806C45C	StartEfxCrimsonEyeOBJFinishPiece	{J}
0806C6F0	StartEfxCrimsonEyeOBJFinish	{J}
0806C718	StartEfxGorgonBGFinish	{J}
0806C7F0	StartEfxCrimsonEyeBG	{J}
0806CEF0	StartEfxCrimsonEyeOBJ	{J}
0806D218	StartEfxDarkLongMons	{J}
0806D458	StartEfxDarkLongMonsBG01	{J}
0806D50C	StartEfxDarkLongMonsBG02	{J}
0806D5E4	StartEfxDarkLongMonsOBJ	{J}
0806D81C	StartEfxGorgon	{J}
0806DACC	StartEfxGorgonBGDirt	{J}
0806B7B0	StartEfxGorgonBGTwister	{J}
0806DFBC	StartEfxGorgonOBJTwisterPiece	{J}
0806E210	StartEfxGorgonOBJTwister	{J}
0806C718	StartEfxGorgonBGFinish	{J}
0806ED5C	StartEfxPierceCriticalEffectBG	{J}
0806EDD4	StartEfxPierceCriticalEffectBGCOL	{J}
0806EE40	StartEfxPierceNormalEffect	{J}
0806EC28	StartEfxPierceNormalEffectBG	{J}
0806EF84	StartEfxYushaSpinShield	{J}
0806F154	StartEfxHurtmutEff00	{J}
0806F1A4	StartEfxHurtmutEff00OBJ	{J}
0806F1A4	StartEfxHurtmutEff01OBJ	{J}
0806F3A4	StartEfxMagfcast	{J}
0806F4D8	StartEfxMagfcastBG	{J}
0806F63C	StartEfxSunakemuri	{J}
0806F678	StartEfxSunakemuriOBJ	{J}
0806F88C	StartEfxLokmsuna	{J}
0806F8C4	StartEfxLokmsunaOBJ	{J}
0806F978	StartEfxKingPika	{J}
0806FA80	StartEfxSongOBJ	{J}
0806FB44	StartEfxDanceOBJ	{J}
0806FBEC	StartEfxSpecalEffect	{J}
0806FCA8	StartEfxSRankWeaponEffect	{J}
0806FD38	StartEfxSRankWeaponEffectBG	{J}
0806FDAC	StartEfxSRankWeaponEffectSCR	{J}
0806FE4C	StartEfxSRankWeaponEffectSCR2	{J}
0806FEB4	StartEfxMagdhisEffect	{J}
0806FF20	StartEfxMagdhisEffectBG	{J}
0806EB34	StartEfxChillEffectBGCOL	{J}
0807112C	StartEfxOpFire	{J}
0807116C	StartEfxOpFireBG	{J}
08071218	StartEfxOpFireOBJ	{J}
080712BC	StartEfxOpThunder	{J}
08071304	StartEfxOpThunderBG	{J}
080713E4	StartEfxOpThunderBGCOL	{J}
08071458	StartEfxOpThunderOBJ	{J}
080714F8	StartEfxopLive	{J}
08071568	StartEfxopLiveBG	{J}
08071608	StartEfxopLiveBGCOL	{J}
0807167C	StartEfxopLiveALPHA	{J}
08071734	StartEfxopLiveOBJ	{J}
080717C0	StartEfxopLightning	{J}
080717F8	StartEfxopLightningBG	{J}
080718B4	StartEfxopMistyrainBG_1	{J}
0807193C	StartEfxopMistyrainBG_2	{J}
08071A00	StartEfxopMistyrainOBJ	{J}
08071A2C	StartEfxopMistyrainOBJ2	{J}
08071B6C	StartEfxopMistyrain	{J}
08071BF8	StartEfxopMyrrh	{J}
08071C64	StartEfxopEvilEye	{J}
08071CB4	StartEfxopEvilEye_NoNameProc	{J}
08071DF4	StartEfxopStoneBG	{J}
08071E44	StartEfxopStoneBG_NoNameProc	{J}
080752B4	StartEfxClasschgBG_1	{J}
080752F8	StartEfxClasschgBG_2	{J}
080753B4	StartEfxClasschgBGSE00	{J}
08075434	StartEfxClasschgBGSE01	{J}
08075460	StartEfxClasschgOBJGain	{J}
080754C4	StartEfxClasschgOBJDrop	{J}
08075528	StartEfxClasschgOBJDiffusion	{J}
080755A0	StartEfxClasschgFIN	{J}
08075784	StartEfxBlackInOutUnit	{J}
08075784	StartEfxWhiteInOutUnit	{J}
08075944	StartEfxClasschgRST	{J}
080769BC	StartEfxPartsofScroll	{J}
08076A58	StartEfxPartsofScroll2	{J}
08076CFC	StartEfxLvupBG	{J}
08076D9C	StartEfxLvupBG2	{J}
08076E2C	StartEfxLvupOBJ2	{J}
08076E98	StartEfxLvupBGCOL	{J}
08077190	StartEobjLvup	{J}
08077788	StartEkrTriPegasusKnightOBJ	{J}
08077B50	StartEkrTriArmorKnightOBJ2	{J}
08078890	StartEkrHenseiEndPROC	{J}
08078D30	StartEkrDragonBaseHide	{J}
08078DC8	StartEkrDragonBaseAppear	{J}
08078EC4	StartEkrDragonBodyAnime	{J}
080796E4	StartEkrDragonBodyBlack	{J}
08072B10	StartEkrWhiteINOUT	{J}
08080AA0	StartUnlockEffect	{J}
080AFFF0	StartSaveDrawCursor	{J}
080B06B4	StartSaveBgUp	{J}
080B1138	StartSaveMenuCursol	{J}
080B2DDC	StartFadeIn_2	{J}
080B2E04	StartFadeOut_2	{J}
080B2E2C	StartFadeIn_3	{J}
080B2E50	StartFadeOut_3	{J}
080B2EBC	StartFadeIn_4	{J}
080B2EE4	StartFadeOut_4	{J}
080B7B2C	Startopinfoenter	{J}
080B7C4C	Startopinfoview	{J}
080B7E4C	Startopinfoicon	{J}
080B8C64	Startopinfogaugedraw	{J}
080C0218	StartGmapUnitFade	{J}
080C07E8	StartGmapScreen2	{J}
080C3FFC	StartWMapMoveCursor	{J}
080C415C	StartWMapScrollManage	{J}
080C44A4	StartWMapPalFade	{J}
080C48D0	WMapBaseEntry	{J}
080C4AAC	StartGmapMuEntry	{J}
080C52D8	StartGmapLineFade	{J}
080C55A4	StartGmapTmConfront	{J}
080C6448	StartGmapSogu	{J}
080C6830	StartGmapTimeMons	{J}
080C6CD0	StartGmapRMUpdate2	{J}
080C7474	StartGmapRMBaPalAnim_1	{J}
080C7474	StartGmapRMBaPalAnim_2	{J}
080C7D78	StartGmapRMBorder	{J}
080C8130	StartGmapAutoMu_1	{J}
080C818C	StartGmapAutoMu_2	{J}
080C8DC4	StartGmapBaseMenu	{J}
08067914	efxSuperdruidOBJ2	{J}
0805b00c	IsCritcalHitByCireAIStruct	{J}
0805a268	IsCritcalHitByCireAIStruct	{U}
08055CEC	TerminateEfxSpellCast	{J}
0805501C	TerminateEfxSpellCast	{U}
08007C00	NewTextBluArrowAndButtonChecker2	{J}
08021210	StartGameOverBGEffect	{J}
08090A1C	StartADJUSTFROMXI	{J}
08099D84	StartSallyCir	{J}
080B0664	StartSqMask	{J}
080B7344	StartColFadeOut	{J}
080C7BBC	StartGmapRMBaPalAnim_2	{J}
080D2358	StartccramifyEvent	{J}
080C7498	DeleteStartGmapRMBaPalAnim_1	{J}
080C74A8	IsExistStartGmapRMBaPalAnim_1	{J}
08007D04	NewTextBluArrowAndButtonChecker2	{U}
08021518	StartGameOverBGEffect	{U}
0808E748	StartADJUSTFROMXI	{U}
08097AAC	StartSallyCir	{U}
080ABBB0	StartSqMask	{U}
080B272C	StartColFadeOut	{U}
080CD668	StartccramifyEvent	{U}
080C26E0	DeleteStartGmapRMBaPalAnim_1	{U}
080C26F0	IsExistStartGmapRMBaPalAnim_1	{U}
0808C8E0	DrawTextDialogBox	{J}
0808CBBC	PlaySongID0x2E7	{J}
0808DE84	DeleteAllTextDialogBox	{J}
0808A5D0	DrawTextDialogBox	{U}
0808A8AC	PlaySongID0x2E7	{U}
0808BB74	DeleteAllTextDialogBox	{U}
0808CD14	ReStartTextDialogueBox1	{J}
0808CD7C	ReStartTextDialogueBox2	{J}
0808DE54	StartTextDialogBoxYeild	{J}
0808DE68	IsNotExistTextDialogBoxYeild	{J}
0808AA04	ReStartTextDialogueBox1	{U}
0808AA6C	ReStartTextDialogueBox2	{U}
0808BB44	StartTextDialogBoxYeild	{U}
0808BB58	IsNotExistTextDialogBoxYeild	{U}
0806EBA0	StartEfxNormalEffect	{J}
0806C87C	StartEfxNormalEffect	{U}
085BE7F4	&LZ77	Something TSA	58	{U}
087270B4	&LZ77	Something TSA	59	{U}
08727510	&LZ77	Something TSA	60	{U}
085E8A24	&LZ77	Something TSA	58	{J}
08753C8C	&LZ77	Something TSA	59	{J}
087540E8	&LZ77	Something TSA	60	{J}
0808CC84	ShowTutorialTextDialogBoxWithAnimation	{J}
0808CCAC	ShowComplateTutorialTextDialogBoxWithAnimation	{J}
0808CCD0	HideTutorialTextDialogBoxWithAnimation	{J}
0808CD00	ClearCallback_AnimationTutorialTextDialogBox	{J}
0808CF1C	Restart_AnimationTutorialTextDialogBox	{J}
0808cbf4	AnimationTutorialTextDialogBox	{J}
0808d00c	AnimationTutorialTextDialogBox_Sub	{J}
0808A974	ShowTutorialTextDialogBoxWithAnimation	{U}
0808A99C	ShowComplateTutorialTextDialogBoxWithAnimation	{U}
0808A9C0	HideTutorialTextDialogBoxWithAnimation	{U}
0808A9F0	ClearCallback_AnimationTutorialTextDialogBox	{U}
0808AC0C	Restart_AnimationTutorialTextDialogBox	{U}
0808A8E4	AnimationTutorialTextDialogBox	{U}
0808ACFC	AnimationTutorialTextDialogBox_Sub	{U}
080C3770	Draw red flag for the next destination on the Worldmap MiniMap	{U}
080C3A64	Draw Worldmap MiniMap	{U}
080C8528	Draw red flag for the next destination on the Worldmap MiniMap	{J}
080C881C	Draw Worldmap MiniMap	{J}
08098720	AtMenu_UnLockGame	{J}
0809643C	AtMenu_UnLockGame	{U}
08098768	CallHasConvoyAccess	{J}
08096484	CallHasConvoyAccess	{U}
080B8F44	OnHoverCursolBuyInShop	{J}
080B8E90	OnHoverCursolSellInShop	{J}
080B43BC	OnHoverCursolBuyInShop	{U}
080B4308	OnHoverCursolSellInShop	{U}
0801183C	CreateNotifyEventCommandPopup	{J}
08011750	CreateNotifyEventCommandPopup	{U}
030005C8	:030005E8	PopupWorkForCreateNotifyEventCommandPopup	{J}
030005D0	:030005F0	PopupWorkForCreateNotifyEventCommandPopup	{U}
08022200	StartAnimationHitotachi	FE8JONLY	Animation to cut with a sword.	{J}
03001CE0	RAM area used for LOAD2 target in "Instruction to LOAD2 something set in RAM area"	Size unknown.	Since it is sizeof20, there should be at least 40 bytes	{J}
03001CE8	RAM area used for LOAD2 target in "Instruction to LOAD2 something set in RAM area"	Size unknown.	Since it is sizeof20, there should be at least 40 bytes	{U}
08088A6C	Instruction to LOAD2 something set in the RAM area	03001CE0 is used in FE8J	{J}
0808679C	Instruction to LOAD2 something set in the RAM area	03001CE8 is used in FE8U	{U}
08A1CC54	:08A1CE1B	Data such as palettes used to display level-up items	{J}
089AC5CC	:089AC793	Data such as palettes used to display level-up items	{U}
08A1DEF0	&LZ77	Numbers for red status.	Probably unused.	{J}
089AD868	&LZ77	Numbers for red status.	Probably unused.	{U}
080A8914	CheckSoundRoomEnableList	r0=0	r1=SongID	{J}
080A3ED0	CheckSoundRoomEnableList	r0=0	r1=SongID	{U}
08AC033C	:08AC0393	Comprehensive evaluation calculation value.	{J}
080D3C44	GuideOnKeyDown	{J}
080CEF48	GuideOnKeyDown	{U}
08078730	IsBattleStatsInPromotionMode	{J}
08076310	IsBattleStatsInPromotionMode	{U}
080BBA1C	StartEndingBattleDisplay	{J}
080B6F14	StartEndingBattleDisplay	{U}
080360B8	A process that deals poison damage at the beginning of the turn.	{J}
08035FB8	A process that deals poison damage at the beginning of the turn.	{U}
080831DC	StartDrawSummonMagicCircleByUnitCoord	Draw summon magic square at unit position	r0=CurrentProcs r1=@Unit	{J}
08080E9C	StartDrawSummonMagicCircleByUnitCoord	Draw summon magic square at unit position	r0=CurrentProcs r1=@Unit	{U}
08078730	IsBattleStatsInPromotionMode	{J}
08076310	IsBattleStatsInPromotionMode	{U}
080A971C	Set the game cleared flag	Immplement part	{J}
08009E50	Set the game cleared flag	Proxy called from GAMECTRL	{J}
080A4CD8	Set the game cleared flag	Immplement part	{U}
08009EFC	Set the game cleared flag	Proxy called from GAMECTRL	{U}
080BB328	LoadEDCharactersBackgoundImages	{J}
080BBEE8	StartEndingBattleDisplay_Text	{J}
080BBF08	EndEndingBattleDisplay_Text	{J}
080BB350	EndingBattleDisplay_FadeInDarkToNormal	{J}
080BBD60	StartEndingBattleDisplay_Pair	{J}
080B67E8	LoadEDCharactersBackgoundImages	{U}
080B742C	StartEndingBattleDisplay_Text	{U}
080b744c	EndEndingBattleDisplay_Text	{U}
080B6810	EndingBattleDisplay_FadeInDarkToNormal	{U}
080B72A4	StartEndingBattleDisplay_Pair	{U}
080BB1F8	EndingBattleDisplay_GetUnitTitleName	{J}
080bb460	EndingBattleDisplay_InitTextFonts	{J}
080bb7e8	EndingBattleDisplay_GetBWLData	{J}
080BB740	StartEndingBattleDisplay_Text_Proxy	{J}
080B6920	EndingBattleDisplay_InitTextFonts	{U}
080B6CA8	EndingBattleDisplay_GetBWLData	{U}
080B6C00	StartEndingBattleDisplay_Text_Proxy	{U}

03003B48	:03003C03	In area where ARM funcs get copied. Unreferenced function.
03003F48	:0300414F	In area where ARM funcs get copied. Past end of meaningful data.
0300428C	:0300495F	In area where Interrupt handler gets copied. Past end of meaningful data.
030067A8	End of static IWRAM. May collide with stack.
02026AD0	:02026E2F	Using IconRework/CIconDisplay	Used by vanilla icon display system.	{U}
02026E30	:02028E57	Not Using debug printing	Unused unless digging up leftover debug stuff.	{U}
02040000	:02040C00	End of EWRAM. May collide with unit loading buffer (sizes of 0xC00 and less should leave enough room for 50+ units).	{U}
0203AAA4	:0203C623	During link arena	May be only in real link games, in which case it may as well be considered always free.	{U}
03005AD0	:30060FF	SomeSoundBuffer1	{J}
03006100	:300672F	SomeSoundBuffer2	{J}


020027DC	sWeatherEffect	{U}
02002ADC	sGradientEffect	{U}
02004BE0	gMUGfxBuffer	{U}
0203A9FC	gpUnitInfoWindowProcs	{U}
0203E0F0	gBoolBattleIsLinkArena_maybe	{U}
0203E104	gBattleAnimUnitEnabledLookup	{U}
0203E10C	gStoredBattleAnimId21Ptr	{U}
0203E1E0	gBoolBattleIsScripted_maybe	{U}
0203E7AC	gText_HelpBox	{U}
03000600	gSomeUnitWordArray	{U}
03000800	gSomeUtilityTextHandle	{U}
03001DA0	gGoldBoxText	{U}
03002C60	SoundMainRAM_Buffer	{U}
03004160	IntrMainRam	{U}
030049B0	gMapFloodSquareBufA	{U}
03004C00	gStatGainSimUnit	{U}
03004C50	gMapFloodSquareBufB	{U}
03005410	gSoundInfo	{U}
03006480	gMPlayJumpTable	{U}
03006510	gCgbChans	{U}
03006710	gMPlayMemAccArea	{U}
08000004	RomHeaderNintendoLogo	{U}
080000C0	crt0	{U}
080D7C4C	gTextRyoukai	{U}
080D7C64	gTextIgopureidekimasen	{U}
080D7C7C	gTextKuriazumifairudeha	{U}
080D7C94	gTextShimasuka	{U}
080D7CA0	gTextFairuwokuriazumini	{U}
080D7CBC	gTextFairushokika	{U}
080D7CD0	gTextTesaikai	{U}
080D7CDC	gTextDokodemosaikai	{U}
080D7CEC	gTextRiriisuentori	{U}
080D7D00	gTextTechuudan	{U}
080D7D0C	gTextOyasuminasai	{U}
080D7D20	gTextKuriazumi	{U}
080D7D30	gTextShuukaisuu	{U}
080D7D3C	gTextSakuteki	{U}
080D7D44	gTextTenki	{U}
080D7D4C	gTextDebujouhou	{U}
080D7D58	gTextMappu	{U}
080D7D64	gTextIie	{U}
080D7D6C	gTextHai	{U}
080D7D74	gTextSuteru	{U}
080D7D7C	gTextKoukan	{U}
080D7D84	gTextSoubi	{U}
080D7D8C	gTextTsukau	{U}
080D7D94	gTextTaiki	{U}
080D7D9C	gTextYuusoutai	{U}
080D7DA8	gTextKoukan2	{U}
080D7DB0	gTextMochimono	{U}
080D7DBC	gTextHikiwatashi	{U}
080D7DC8	gTextHikiuke	{U}
080D7DD4	gTextOrosu	{U}
080D7DE0	gTextKyuushutsu	{U}
080D7DE8	gTextTougijou	{U}
080D7DF4	gTextHimitsuten	{U}
080D7E00	gTextDouguya	{U}
080D7E0C	gTextBukiya	{U}
080D7E18	gTextTobira	{U}
080D7E20	gTextTakarabako	{U}
080D7E28	gTextHoumon	{U}
080D7E30	gTextShien	{U}
080D7E38	gTextHanasu	{U}
080D7E40	gTextKagihiraku	{U}
080D7E4C	gTextYobima	{U}
080D7E54	gTextShoukan	{U}
080D7E5C	gTextNusumu	{U}
080D7E64	gTextOdoru	{U}
080D7E6C	gTextKanaderu	{U}
080D7E78	gTextOriru	{U}
080D7E84	gTextNoru	{U}
080D7E8C	gTextTsue	{U}
080D7E94	gTextKougeki	{U}
080D7E9C	gTextSeiatsu	{U}
080D7EA4	gTextShuuryou	{U}
080D7EAC	gTextChuudan	{U}
080D7EB4	gTextTaikyaku	{U}
080D7EBC	gTextSettei	{U}
080D7EC4	gTextSenki	{U}
080D7ECC	gTextJisho	{U}
080D7ED4	gTextJoukyou	{U}
080D7EDC	gTextButai	{U}
085877DC	__mprec_tens	{U}
085878A4	__mprec_bigtens	{U}
085878CC	__mprec_tinytens	{U}
08587988	ProcScr_DelaySong	{U}
08B1FA20	_impure_ptr	{U}
08B1FA24	__mb_cur_max	{U}
08B1FA38	__malloc_av_	{U}
08B1FE44	__malloc_top_pad	{U}
08B1FE48	__malloc_sbrk_base	{U}
08B1FE4C	__malloc_max_sbrked_mem	{U}
08B1FE50	__malloc_max_total_mem	{U}
08B1FE54	__malloc_current_mallinfo	{U}
08C00000	banim_number	{U}
08EE0000	banim_terrain_head	{U}
08EF8000	banim_pal_head	{U}
08000FC4	GetBgTilemapOffset	{U}
0800106C	SetBgBpp	{U}
08001308	SetNextVCount	{U}
08001414	ClearKeySt	{U}
08001C5C	SetHealthSafetySkipEnable	{U}
08001ED0	SetBlendTargetA	{U}
08001F0C	SetBlendTargetB	{U}
08001F64	SetBlendBackdropB	{U}
08001FD0	DisableBgSync	{U}
080021E4	PutUnkSprite	{U}
0800270C	MakeBgmOverridePersist	{U}
08002950	IsMusicProc2Running	{U}
08003454	Proc_Lock	{U}
08003460	Proc_Release	{U}
08003530	BeginFindProc	{U}
08003540	NextFindProc	{U}
080035EC	CountActiveIcons	{U}
0800384C	DebugPutFmt	{U}
080038B4	DebugPrintFmt	{U}
08003E00	ClearTextPart	{U}
08003E40	Text_GetChrOffset	{U}
08003FAC	GetStringTextBox	{U}
080040C0	Text_DrawNumberLeftAlign	{U}
080045FC	DrawSpriteTextBackground	{U}
08004924	StartTextPrint	{U}
0800496C	IsTextPrinting	{U}
08004974	EndTextPrinting	{U}
080049E0	PutTextPart	{U}
08004BB4	PutNumberTwoChr	{U}
08004C1C	SpecialCharTest	{U}
08004C68	PutTime	{U}
08004D7C	PutNumber2Digit	{U}
08004DB8	PutNumber2DigitSmall	{U}
08004DF8	PutNumber2DigitExt	{U}
08004EE8	BsoCreate2	{U}
08005370	PutSpriteAffine	{U}
080059CC	UnpackFaceChibiSprGraphics	{U}
08005AD4	FaceChibiSpr_OnIdle	{U}
08005B04	StartFaceChibiStr	{U}
08005B68	EndFaceChibiSpr	{U}
08005B78	PutFace80x72_Standard	{U}
08005BCC	PutFace80x72_Raised	{U}
08005E98	PutFace80x72	{U}
08005ECC	EndFacePtr	{U}
08005ED8	EndFaceIn8Frames	{U}
08005EF0	StartFaceFadeIn	{U}
08006A50	StartTalkMsgExt	{U}
08006A8C	SetTalkLines	{U}
08008250	Dialogue_ClearLines	{U}
08008A0C	SetDialoguePromptResult	{U}
0800B7E0	Spline_800B7E0	{U}
0800B84C	Spline_800B84C	{U}
0800CCEC	nullsub_32	{U}
0800D49C	SetEventTriggerState	{U}
0800D594	GetEventCounter	{U}
08011D10	ChangeAiForCharacter	{U}
08012E94	nullsub_28	{U}
08012E98	StringEquals	{U}
08013F58	StartSafeFadeInBlack	{U}
08013FC4	StartSafeFadeOutBlack	{U}
08014098	StartSafeFade	{U}
080141B0	BlackenScreen	{U}
080154C8	MapMain_UpdateTraps	{U}
080195BC	InitChapterPreviewMap	{U}
08019B88	nullsub_8	{U}
0801A570	MapFloodCoreStep_unused	{U}
0801B9EC	Return2or3BySecondParity	{U}
0801BA1C	Return3or2BySecondParity	{U}
0801BA50	Get23	{U}
0801BA54	DummyFunction	{U}
0801BA78	SetNewKeyStatusWith16	{U}
0801BA84	DummyFunction2	{U}
0801BA88	DebugPrintWithProc	{U}
0801BAEC	DebugPrint	{U}
0801BB1C	StartDebugMenu	{U}
0801BCCC	EndMenuAndClear	{U}
0801C05C	DebugMenuInit	{U}
0801C0FC	DebugContinueMenuInit	{U}
0801C198	DebugContinueMenuEnd	{U}
0801C65C	DebugMenuMapIdleCore	{U}
0801D6FC	PlayerPhase_ReloadGameGfx	{U}
0801E1DC	MenuCommand_SendItemToConvoy	{U}
0801E250	SendToConvoyMenu_Selected2	{U}
08022860	ItemMenu_ButtonBPressed	{U}
08022CA4	UnknownMenu_IsAvailable	{U}
08022CF0	UnknownMenu_Selected	{U}
08022D34	UnknownMenu_Draw	{U}
08022D84	AttackWeaponSelect_ItemOnSwitchIn	{U}
08022DD8	AttackWeaponSelect_ItemOnSwitchOut	{U}
080232A4	DanceSelectOnSelect	{U}
080234F0	ItemSubMenuEnd	{U}
08023918	BallistaRangeMenu_BallistaUsability	{U}
08023950	BallistaRangeMenu_Draw	{U}
080239A0	BallistaRangeMenu_Select	{U}
08024588	ConvoyMenu_HelpBox	{U}
080245E0	ItemMenu_HelpBox	{U}
08024618	BallistaRangeMenuHelpBox	{U}
0802464C	HealSelectOnInit	{U}
080247F4	DanceSelectOnInit	{U}
08024814	DanceSelectOnChange	{U}
08024A88	ItemMenu_Is1stCommandAvailable	{U}
08024AAC	ItemMenu_Draw1stCommand	{U}
08024AF0	ItemMenu_Select1stCommand	{U}
08024B1C	ItemMenu_AreOtherCommandsAvailable	{U}
08024B54	ItemMenu_DrawOtherCommands	{U}
08024B9C	ItemMenu_SelectOtherCommands	{U}
08024BD0	ItemMenu_SwitchIn	{U}
08024BF8	ItemMenuHelpBox	{U}
08025610	MakeTargetsForTalk	{U}
080266BC	ResetUnitSpritesB	{U}
08027B0C	IsUnitSpriteHoverEnabledAt	{U}
08027B60	PutUnitSprite	{U}
08027C48	PutUnitSpriteForJid	{U}
08027E4C	PutUnitSpriteExt	{U}
080282DC	UnitGainSupportLevel	{U}
080286EC	GetSupportLevelUiChar	{U}
08028710	GetAffinityName	{U}
080287A4	HaveCharactersMaxSupport	{U}
0802909C	CanUnitUseBindingBladeToHeal	{U}
08029544	SetItemUseAction	{U}
08029A38	RepairMenuItemOnChange	{U}
08029A4C	RepairMenuItemIsAvailable	{U}
08029A84	RepairMenuItemDraw	{U}
08029AE0	RepairMenuItemSelect	{U}
08029C04	RestoreSelectOnInit	{U}
08029C10	RestoreSelectOnChange	{U}
08029C34	DoUseBarrierStaff	{U}
08029C70	BarrierSelectOnInit	{U}
08029C7C	BarrierSelectOnChange	{U}
08029CDC	AttackStaffSelectOnInit	{U}
08029CE8	AttackStaffSelectOnChange	{U}
0802A108	DoesUnitHoldItemCC	{U}
0802E8A8	GenerateDisplayedTrapDamageTargets	{U}
0802F664	UnitPromote	{U}
08030240	FlamesWeatherNone_Init	{U}
08030258	FlamesWeatherSnow_Init	{U}
08030390	FlamesWeatherRain_Init	{U}
08030474	FlamesWeatherSandStorm_Init	{U}
08030540	FlamesWeatherSnowStorm_Init	{U}
08030674	FlamesWeatherBlueHSync	{U}
080306CC	FlamesWeatherBlue_Init	{U}
08030714	FlamesWeatherHBlank	{U}
08030758	ApplyFlamesWeatherGradient	{U}
080307D8	FlamesWeatherInitGradient	{U}
08030868	FlamesWeatherInitParticles	{U}
080308CC	WeatherInit_Flames	{U}
080309F0	FlamesWeatherCloudsOffsetGraphicsEffect	{U}
08030A58	FlamesWeatherClouds_Init	{U}
08030C24	DisableTilesetPaletteAnim	{U}
080310F8	RefreshBMapDisplay_FromBattle	{U}
080314D4	DeclareCompletedPlaythrough	{U}
0803A0F4	CpPerform_PerformEscape	{U}
0803E470	AiTryGetNearestHealPoint	{U}
0803ECC4	AiTryDanceOrStealInPlace	{U}
0803ECF0	AiTryActionAfterMove	{U}
08041090	AiUpdateNoMoveFlag	{U}
08044B2C	NameSelect_8044B2C	{U}
0804E138	UnpackUiBarPalette	{U}
0804E168	UnpackUiFrameBuffered	{U}
0804E80C	DisplayUiHand_unused	{U}
0804E848	DisplayFrozenUiHand	{U}
0804E86C	GetUiHandPrevDisplayX	{U}
0804E878	GetUiHandPrevDisplayY	{U}
0804E8A8	DrawUiItemHover	{U}
0804E90C	ClearUiItemHover	{U}
0804EA8C	UnpackUnkUiFrame	{U}
0804EAB8	DisplayUiHandExt	{U}
0804EB2C	DisplayFrozenUiHandExt	{U}
0804EB7C	LoadUiFrameGraphicsTo	{U}
0804EBD8	StartOrphanMenuAt	{U}
0804EBF4	StartOrphanMenuAdjustedExt	{U}
0804EC58	StartOrphanMenuAtExt	{U}
0804EC74	StartOrphanMenuExt	{U}
0804F454	MenuCancelSelect	{U}
0804F458	MenuStdHelpBox	{U}
0804F5FC	MenuFrozen	{U}
0804F82C	SyncMenuBgs	{U}
0804F84C	ClearMenuBgs	{U}
0804F890	HasMenuChangedItem	{U}
08055FE8	ekrBattleStarting_8055FE8	{U}
08056024	ekrBattleStarting_8056024	{U}
080560F0	ekrBattleEnding_80560F0	{U}
08056170	ekrBattleEnding_8056170	{U}
080561C8	ekrBattleEnding_80561C8	{U}
080581EC	InitBattleAnimHitArrays	{U}
08058B24	DoesBattleAnimSideTakeAction	{U}
08078524	MU_8078524	{U}
0807C0DC	MapAnimExpBar_FillInit	{U}
08081DE0	MapAnim_TargetShow	{U}
0808371C	StartSupportTalk	{U}
08083764	StartSupportViewerTalk	{U}
08084748	GetSupportTalkInfoForCharacters	{U}
08086DD8	SetLastStatScreenUid	{U}
08086DE4	SetStatScreenConfig	{U}
08087EB8	DisplayPageNameSprite	{U}
08087FE0	PageNameCtrl_OnIdle	{U}
08088C14	HbRedirect_SSSupports	{U}
08088C48	UpdateHelpBoxDisplay	{U}
08088DE0	ShowTextHelpBox	{U}
08088E14	ShowSilentTextHelpBox	{U}
08088E60	ShowItemHelpBox	{U}
08088F68	StartHelpBox	{U}
08089018	MoveableHelpBox_OnEnd	{U}
0808903C	EndHelpBox	{U}
0808929C	SetHelpBoxInitPosition	{U}
080892C0	ResetHelpBoxInitSize	{U}
08089454	StartLockingHelpBox_Unused	{U}
080894AC	StartHelpPromptSprite_Unused	{U}
080894E0	ShowRIsInfo	{U}
0808953C	StartHelpPromptSprite_Unused2	{U}
08089570	HideRIsInfo	{U}
08089588	MoveHelpPromptSprite	{U}
080895A8	GetLastHelpBoxInfo	{U}
08089980	DisplayHelpBoxObj	{U}
08089C40	DrawHelpBoxWeaponStatLabels	{U}
08089D50	DrawHelpBoxStaffStatLabels	{U}
08089E58	HelpBoxTextScroll_OnLoop	{U}
0808A118	ClearHelpBoxText	{U}
0808DC74	SioLinkError	{U}
0809A66C	PrepScreenUnitSelectDisplaySprites	{U}
080A3724	SGM_SetSupportLevelKnown	{U}
080A44C8	BWL_AddBattle	{U}
080A4534	BWL_AddWin	{U}
080A4594	BWL_AddLoss	{U}
080A4958	BWL_GetTotalLosses	{U}
080A4978	BWL_GetTotalLevelsGained	{U}
080A49C8	BWL_GetExpGained	{U}
080A49FC	BWL_GetFavoritismValue	{U}
080B4B7C	ShopFadeIn	{U}
080B4BB0	ShopFadeOut	{U}
080B4E24	StartUiGoldBox	{U}
080B4E88	InitGoldBoxText	{U}
080B4ED4	DisplayGoldBoxText	{U}
080B4F90	ShopProc_DisplayItems	{U}
080B52A4	GoldBox_OnLoop	{U}
080B52CC	InitShopScreenGfx	{U}
080B53BC	UnpackUiVArrowGfx	{U}
080B53F8	DisplayUiVArrow	{U}
080BAFA4	GmUnitCnt_SetDisplayed	{U}
080BB47C	EndGmUnitFade	{U}
080BB48C	FindGmUnitFade	{U}
080BB744	GetGmIconScreenCoords	{U}
080BC81C	GmDataInit	{U}
080BC898	GmPathsInit	{U}
080BC970	RefreshGmNodeLinksExt	{U}
080BCA0C	RefreshGmNodeLinks	{U}
080BDDC4	GmMu_ShowUnit	{U}
080BDE3C	GmMu_HideUnit	{U}
080BE054	GmMu_PauseMovement	{U}
080BE068	GmMu_ResumeMovement	{U}
080BE35C	GmMu_SetPosition	{U}
080BE3C8	GmMu_SetNode	{U}
080BE40C	GmMu_StartFadeIn	{U}
080BE42C	GmMu_StartFadeOut	{U}
080BE44C	GmUnitFadeExists	{U}
080BF2AC	GmScrollManage_OnEnd	{U}
080BF2D0	GmScrollManage_OnInit	{U}
080BF2D8	GmScrollManage_OnLoop	{U}
080BF3F4	FindGmScrollManage	{U}
080BF404	StartGmScroll	{U}
080BF4A8	EndGmScroll	{U}
080BF554	ShowGmUnit	{U}
080BF570	HideGmUnit	{U}
080BF730	GmPalFadeActive	{U}
080BF748	EndGmPalFade	{U}
080BF788	StartGmPalFade_	{U}
080BFB24	EndGmBaseEntry	{U}
080BFB34	GmBaseEntryExists	{U}
080C0240	GmMuEntryStartShow	{U}
080C02A4	GmMuEntryStartHide	{U}
080C0548	nullsub_47	{U}
080C3124	GmAutoMu_OnEnd	{U}
080C343C	EndGmAutoMuFor	{U}
080C3484	GmAutoMuActiveFor	{U}
080CDF4C	IsGuideLocked	{U}
080D0274	m4aSongNumStartOrContinue	{U}
080D02FC	m4aSongNumContinue	{U}
080D0368	m4aMPlayAllContinue	{U}
080D1CC0	_sprintf_r	{U}
080D3EB0	fflush	{U}
080D5C78	_close_r	{U}
080D5CA4	__errno	{U}
080D5D34	_read_r	{U}


020027DC	sWeatherEffect	{J}
02002ADC	sGradientEffect	{J}
02004BE0	gMUGfxBuffer	{J}
0203A9F8	gpUnitInfoWindowProcs	{J}
0203E100	gBattleAnimUnitEnabledLookup	{J}
0203E7A8	gText_HelpBox	{J}
030005F8	gSomeUnitWordArray	{J}
030007F8	gSomeUtilityTextHandle	{J}
03001D48	gGoldBoxText	{J}
03002C08	SoundMainRAM_Buffer	{J}
03004100	IntrMainRam	{J}
03004950	gMapFloodSquareBufA	{J}
03004BA0	gStatGainSimUnit	{J}
03004BF0	gMapFloodSquareBufB	{J}
03005400	gSoundInfo	{J}
03006500	gCgbChans	{J}
08000004	RomHeaderNintendoLogo	{J}
080000C0	crt0	{J}
080DC980	gTextRyoukai	{J}
080DC998	gTextIgopureidekimasen	{J}
080DC9B0	gTextKuriazumifairudeha	{J}
080DC9C8	gTextShimasuka	{J}
080DC9D4	gTextFairuwokuriazumini	{J}
080DC9F0	gTextFairushokika	{J}
080DCA04	gTextTesaikai	{J}
080DCA10	gTextDokodemosaikai	{J}
080DCA20	gTextRiriisuentori	{J}
080DCA34	gTextTechuudan	{J}
080DCA40	gTextOyasuminasai	{J}
080DCA54	gTextKuriazumi	{J}
080DCA64	gTextShuukaisuu	{J}
080DCA70	gTextSakuteki	{J}
080DCA78	gTextTenki	{J}
080DCA80	gTextDebujouhou	{J}
080DCA8C	gTextMappu	{J}
080DCA98	gTextIie	{J}
080DCAA0	gTextHai	{J}
080DCAA8	gTextSuteru	{J}
080DCAB0	gTextKoukan	{J}
080DCAB8	gTextSoubi	{J}
080DCAC0	gTextTsukau	{J}
080DCAC8	gTextTaiki	{J}
080DCAD0	gTextYuusoutai	{J}
080DCADC	gTextKoukan2	{J}
080DCAE4	gTextMochimono	{J}
080DCAF0	gTextHikiwatashi	{J}
080DCAFC	gTextHikiuke	{J}
080DCB08	gTextOrosu	{J}
080DCB14	gTextKyuushutsu	{J}
080DCB1C	gTextTougijou	{J}
080DCB28	gTextHimitsuten	{J}
080DCB34	gTextDouguya	{J}
080DCB40	gTextBukiya	{J}
080DCB4C	gTextTobira	{J}
080DCB54	gTextTakarabako	{J}
080DCB5C	gTextHoumon	{J}
080DCB64	gTextShien	{J}
080DCB6C	gTextHanasu	{J}
080DCB74	gTextKagihiraku	{J}
080DCB80	gTextYobima	{J}
080DCB88	gTextShoukan	{J}
080DCB90	gTextNusumu	{J}
080DCB98	gTextOdoru	{J}
080DCBA0	gTextKanaderu	{J}
080DCBAC	gTextOriru	{J}
080DCBB8	gTextNoru	{J}
080DCBC0	gTextTsue	{J}
080DCBC8	gTextKougeki	{J}
080DCBD0	gTextSeiatsu	{J}
080DCBD8	gTextShuuryou	{J}
080DCBE0	gTextChuudan	{J}
080DCBE8	gTextTaikyaku	{J}
080DCBF0	gTextSettei	{J}
080DCBF8	gTextSenki	{J}
080DCC00	gTextJisho	{J}
080DCC08	gTextJoukyou	{J}
080DCC10	gTextButai	{J}
0857748C	__mprec_tens	{J}
08577554	__mprec_bigtens	{J}
0857757C	__mprec_tinytens	{J}
08577638	ProcScr_DelaySong	{J}
08BB8A74	_impure_ptr	{J}
08BB8A78	__mb_cur_max	{J}
08BB8A8C	__malloc_av_	{J}
08BB8E98	__malloc_top_pad	{J}
080DFF70	__malloc_max_sbrked_mem	{J}
080DFF70	__malloc_max_total_mem	{J}
080DFF70	__malloc_current_mallinfo	{J}
08C00000	banim_number	{J}
08EE0000	banim_terrain_head	{J}
08EF8000	banim_pal_head	{J}
08000F74	GetBgTilemapOffset	{J}
0800101C	SetBgBpp	{J}
080012B8	SetNextVCount	{J}
080013D0	ClearKeySt	{J}
08001E20	SetBlendTargetA	{J}
08001E5C	SetBlendTargetB	{J}
08001EB4	SetBlendBackdropB	{J}
08001F20	DisableBgSync	{J}
08002134	PutUnkSprite	{J}
0800265C	MakeBgmOverridePersist	{J}
080028A0	IsMusicProc2Running	{J}
080033A0	Proc_Lock	{J}
080033AC	Proc_Release	{J}
0800347C	BeginFindProc	{J}
0800348C	NextFindProc	{J}
08003538	CountActiveIcons	{J}
08003798	DebugPutFmt	{J}
08003800	DebugPrintFmt	{J}
08003D30	ClearTextPart	{J}
08003D70	Text_GetChrOffset	{J}
08003EC8	GetStringTextBox	{J}
08003FEC	Text_DrawNumberLeftAlign	{J}
08004504	DrawSpriteTextBackground	{J}
0800482C	StartTextPrint	{J}
08004874	IsTextPrinting	{J}
0800487C	EndTextPrinting	{J}
080048E8	PutTextPart	{J}
08004ABC	PutNumberTwoChr	{J}
08004B24	SpecialCharTest	{J}
08004B70	PutTime	{J}
08004C84	PutNumber2Digit	{J}
08004CC0	PutNumber2DigitSmall	{J}
08004D00	PutNumber2DigitExt	{J}
08004DF0	BsoCreate2	{J}
08002100	PutSpriteAffine	{J}
080058D0	UnpackFaceChibiSprGraphics	{J}
080059D8	FaceChibiSpr_OnIdle	{J}
08005A08	StartFaceChibiStr	{J}
08005A6C	EndFaceChibiSpr	{J}
08005A7C	PutFace80x72_Standard	{J}
08005AD0	PutFace80x72_Raised	{J}
08005D9C	PutFace80x72	{J}
08005DD0	EndFacePtr	{J}
08005DDC	EndFaceIn8Frames	{J}
08005DF4	StartFaceFadeIn	{J}
08006954	StartTalkMsgExt	{J}
08006990	SetTalkLines	{J}
0800814C	Dialogue_ClearLines	{J}
08008908	SetDialoguePromptResult	{J}
0800BAD0	Spline_800B7E0	{J}
0800BB3C	Spline_800B84C	{J}
0800CFB0	nullsub_32	{J}
0800D760	SetEventTriggerState	{J}

08011DF4	ChangeAiForCharacter	{J}
08012F4C	nullsub_28	{J}
08012F50	StringEquals	{J}
08014010	StartSafeFadeInBlack	{J}
0801407C	StartSafeFadeOutBlack	{J}
08014150	StartSafeFade	{J}
08014268	BlackenScreen	{J}
080154EC	MapMain_UpdateTraps	{J}
08019294	InitChapterPreviewMap	{J}
08019860	nullsub_8	{J}
0801A23C	MapFloodCoreStep_unused	{J}
0801B6B8	Return2or3BySecondParity	{J}
0801B6E8	Return3or2BySecondParity	{J}
0801B71C	Get23	{J}
0801B720	DummyFunction	{J}
0801B744	SetNewKeyStatusWith16	{J}
0801B750	DummyFunction2	{J}
0801B754	DebugPrintWithProc	{J}
0801B7B8	DebugPrint	{J}
0801B7E8	StartDebugMenu	{J}
0801B998	EndMenuAndClear	{J}
0801BCEC	DebugMenuInit	{J}
0801BD8C	DebugContinueMenuInit	{J}
0801BE28	DebugContinueMenuEnd	{J}
0801C2C4	DebugMenuMapIdleCore	{J}
0801D360	PlayerPhase_ReloadGameGfx	{J}
0801DE38	MenuCommand_SendItemToConvoy	{J}
0801DEAC	SendToConvoyMenu_Selected2	{J}
08022828	ItemMenu_ButtonBPressed	{J}
08022C6C	UnknownMenu_IsAvailable	{J}
08022CB8	UnknownMenu_Selected	{J}
08022CFC	UnknownMenu_Draw	{J}
08022D4C	AttackWeaponSelect_ItemOnSwitchIn	{J}
08022DA0	AttackWeaponSelect_ItemOnSwitchOut	{J}
0802326C	DanceSelectOnSelect	{J}
080234B4	ItemSubMenuEnd	{J}
080238DC	BallistaRangeMenu_BallistaUsability	{J}
08023914	BallistaRangeMenu_Draw	{J}
08023964	BallistaRangeMenu_Select	{J}
08024538	ConvoyMenu_HelpBox	{J}
08024590	ItemMenu_HelpBox	{J}
080245C8	BallistaRangeMenuHelpBox	{J}
080245FC	HealSelectOnInit	{J}
0802462C	DanceSelectOnInit	{J}
080247C4	DanceSelectOnChange	{J}
08024A38	ItemMenu_Is1stCommandAvailable	{J}
08024A5C	ItemMenu_Draw1stCommand	{J}
08024AA0	ItemMenu_Select1stCommand	{J}
08024ACC	ItemMenu_AreOtherCommandsAvailable	{J}
08024B04	ItemMenu_DrawOtherCommands	{J}
08024B4C	ItemMenu_SelectOtherCommands	{J}
08024B80	ItemMenu_SwitchIn	{J}
08024BA8	ItemMenuHelpBox	{J}
08025364	MakeTargetsForTalk	{J}
08026660	ResetUnitSpritesB	{J}
08027AA0	IsUnitSpriteHoverEnabledAt	{J}
08027AF4	PutUnitSprite	{J}
08027BDC	PutUnitSpriteForJid	{J}
08027DE0	PutUnitSpriteExt	{J}
08028270	UnitGainSupportLevel	{J}
08028680	GetSupportLevelUiChar	{J}
080286A4	GetAffinityName	{J}
08028738	HaveCharactersMaxSupport	{J}
08029044	CanUnitUseBindingBladeToHeal	{J}
080294ec	SetItemUseAction	{J}
080299C4	RepairMenuItemOnChange	{J}
080299D8	RepairMenuItemIsAvailable	{J}
08029A10	RepairMenuItemDraw	{J}
08029A6C	RepairMenuItemSelect	{J}
08029B90	RestoreSelectOnInit	{J}
08029B9C	RestoreSelectOnChange	{J}
08029B18	DoUseBarrierStaff	{J}
08029B90	BarrierSelectOnInit	{J}
08029B9C	BarrierSelectOnChange	{J}
08029C68	AttackStaffSelectOnInit	{J}
08029C74	AttackStaffSelectOnChange	{J}
0802A094	DoesUnitHoldItemCC	{J}
0802E7E0	GenerateDisplayedTrapDamageTargets	{J}
0802F584	UnitPromote	{J}
08030190	FlamesWeatherNone_Init	{J}
080301A8	FlamesWeatherSnow_Init	{J}
080302E0	FlamesWeatherRain_Init	{J}
080303C4	FlamesWeatherSandStorm_Init	{J}
08030490	FlamesWeatherSnowStorm_Init	{J}
080305C4	FlamesWeatherBlueHSync	{J}
0803061C	FlamesWeatherBlue_Init	{J}
08030664	FlamesWeatherHBlank	{J}
080306A8	ApplyFlamesWeatherGradient	{J}
08030728	FlamesWeatherInitGradient	{J}
080307B8	FlamesWeatherInitParticles	{J}
0803081C	WeatherInit_Flames	{J}
08030940	FlamesWeatherCloudsOffsetGraphicsEffect	{J}
080309A8	FlamesWeatherClouds_Init	{J}
08030B74	DisableTilesetPaletteAnim	{J}
08031044	RefreshBMapDisplay_FromBattle	{J}
08031420	DeclareCompletedPlaythrough	{J}
0803A16C	CpPerform_PerformEscape	{J}
0803E400	AiTryGetNearestHealPoint	{J}
0803EC54	AiTryDanceOrStealInPlace	{J}
0803EC80	AiTryActionAfterMove	{J}
08041010	AiUpdateNoMoveFlag	{J}
08044AC8	NameSelect_8044B2C	{J}
0804EEBC	UnpackUiBarPalette	{J}
0804EEEC	UnpackUiFrameBuffered	{J}
0804F598	DisplayUiHand_unused	{J}
0804F5D4	DisplayFrozenUiHand	{J}
0804F5F8	GetUiHandPrevDisplayX	{J}
0804F604	GetUiHandPrevDisplayY	{J}
0804F634	DrawUiItemHover	{J}
0804F698	ClearUiItemHover	{J}
0804F818	UnpackUnkUiFrame	{J}
0804F844	DisplayUiHandExt	{J}
0804F8B8	DisplayFrozenUiHandExt	{J}
0804F908	LoadUiFrameGraphicsTo	{J}
0804F964	StartOrphanMenuAt	{J}
0804F980	StartOrphanMenuAdjustedExt	{J}
0804F9E4	StartOrphanMenuAtExt	{J}
0804FA00	StartOrphanMenuExt	{J}
080501C8	MenuCancelSelect	{J}
080501CC	MenuStdHelpBox	{J}
08050370	MenuFrozen	{J}
080505A0	SyncMenuBgs	{J}
080505C0	ClearMenuBgs	{J}
08050604	HasMenuChangedItem	{J}
08056F70	ekrBattleStarting_8055FE8	{J}
08057078	ekrBattleEnding_80560F0	{J}
080570F8	ekrBattleEnding_8056170	{J}
08057150	ekrBattleEnding_80561C8	{J}
08059034	InitBattleAnimHitArrays	{J}
08059954	DoesBattleAnimSideTakeAction	{J}
0807A948	MU_8078524	{J}
0807E420	MapAnimExpBar_FillInit	{J}
08084038	MapAnim_TargetShow	{J}
08085A54	StartSupportTalk	{J}
08085A9C	StartSupportViewerTalk	{J}
08086A14	GetSupportTalkInfoForCharacters	{J}
08089078	EndBG3Slider	{J}
08089088	GetSomeUnitId	{J}
08089094	SetLastStatScreenUid	{J}
080890A0	SetStatScreenConfig	{J}
0808A144	DisplayPageNameSprite	{J}
0808A26C	PageNameCtrl_OnIdle	{J}
0808AEA0	HbRedirect_SSSupports	{J}
0808AED4	UpdateHelpBoxDisplay	{J}
0808B06C	ShowTextHelpBox	{J}
0808B0A0	ShowSilentTextHelpBox	{J}
0808B0EC	ShowItemHelpBox	{J}
0808B1F4	StartHelpBox	{J}
0808B2A4	MoveableHelpBox_OnEnd	{J}
0808B2C8	EndHelpBox	{J}
0808B528	SetHelpBoxInitPosition	{J}
0808B54C	ResetHelpBoxInitSize	{J}
0808B6C4	StartLockingHelpBox_Unused	{J}
0808B71C	StartHelpPromptSprite_Unused	{J}
0808B750	ShowRIsInfo	{J}
0808B7AC	StartHelpPromptSprite_Unused2	{J}
0808B7E0	HideRIsInfo	{J}
0808B7F8	MoveHelpPromptSprite	{J}
0808b818	GetLastHelpBoxInfo	{J}
0808BC90	DisplayHelpBoxObj	{J}
0808BF4C	DrawHelpBoxWeaponStatLabels	{J}
0808C05C	DrawHelpBoxStaffStatLabels	{J}
0808C168	HelpBoxTextScroll_OnLoop	{J}
0808C428	ClearHelpBoxText	{J}
0808FF5C	SioLinkError	{J}
0809C938	PrepScreenUnitSelectDisplaySprites	{J}
080A8168	SGM_SetSupportLevelKnown	{J}
080A8F0C	BWL_AddBattle	{J}
080A8F78	BWL_AddWin	{J}
080A8FD8	BWL_AddLoss	{J}
080A939C	BWL_GetTotalLosses	{J}
080A93BC	BWL_GetTotalLevelsGained	{J}
080A940C	BWL_GetExpGained	{J}
080A9440	BWL_GetFavoritismValue	{J}
080B9704	ShopFadeIn	{J}
080B9738	ShopFadeOut	{J}
080B99AC	StartUiGoldBox	{J}
080B9A10	InitGoldBoxText	{J}
080B9A5C	DisplayGoldBoxText	{J}
080B9B18	ShopProc_DisplayItems	{J}
080B9E28	GoldBox_OnLoop	{J}
080B9E50	InitShopScreenGfx	{J}
080B9F40	UnpackUiVArrowGfx	{J}
080B9F7C	DisplayUiVArrow	{J}
080BAFA4	GmUnitCnt_SetDisplayed	{J}
080C02AC	EndGmUnitFade	{J}
080C02BC	FindGmUnitFade	{J}
080BB744	GetGmIconScreenCoords	{J}
080C165C	GmDataInit	{J}
080C16D8	GmPathsInit	{J}
080C17B0	RefreshGmNodeLinksExt	{J}
080C184C	RefreshGmNodeLinks	{J}
080C2BAC	GmMu_ShowUnit	{J}
080C2C24	GmMu_HideUnit	{J}
080C2E3C	GmMu_PauseMovement	{J}
080C2E50	GmMu_ResumeMovement	{J}
080C3144	GmMu_SetPosition	{J}
080C31B4	GmMu_SetNode	{J}
080C31F8	GmMu_StartFadeIn	{J}
080C31F8	GmMu_StartFadeOut	{J}
080C3238	GmUnitFadeExists	{J}
080C4098	GmScrollManage_OnEnd	{J}
080C40BC	GmScrollManage_OnInit	{J}
080C40C4	GmScrollManage_OnLoop	{J}
080C41E0	FindGmScrollManage	{J}
080C41F0	StartGmScroll	{J}
080C428C	EndGmScroll	{J}
080C4338	ShowGmUnit	{J}
080C4354	HideGmUnit	{J}
080C4514	GmPalFadeActive	{J}
080C452C	EndGmPalFade	{J}
080C456C	StartGmPalFade_	{J}
080C4908	EndGmBaseEntry	{J}
080C4918	GmBaseEntryExists	{J}
080C5024	GmMuEntryStartShow	{J}
080C5088	GmMuEntryStartHide	{J}
080C532C	nullsub_47	{J}
080C7EDC	GmAutoMu_OnEnd	{J}
080C81F4	EndGmAutoMuFor	{J}
080C823C	GmAutoMuActiveFor	{J}
080d2c48	IsGuideLocked	{J}
080D4F20	m4aSongNumStartOrContinue	{J}
080D4FF4	m4aSongNumContinue	{J}
080D5060	m4aMPlayAllContinue	{J}
080D8AEC	fflush	{J}
080DA8B4	_close_r	{J}
080DA8E0	__errno	{J}
080DA970	_read_r	{J}
080A886C	InitializeSoundRoomEnableList	{J}
080A3E28	InitializeSoundRoomEnableList	{U}
08013A98	StartApplyDamagePaletteToTarget	{J}
080139E0	StartApplyDamagePaletteToTarget	{U}
08013A40	EndApplyDamagePaletteToTarget	{J}
08013988	EndApplyDamagePaletteToTarget	{U}
0203FBB8	:0203FFFF	Debuffs VBA/make	{U}
080B3D00	Play the next song on the sound room random playback screen.	{J}
080B3D60	Play the previous song on the sound room random playback screen.	{J}
080B3B84	Sound Room Generate a playlist for random playback.	{J}
02021388	:02021407	Playlist for random playback in the sound room.	{J}
080AF0E0	Play the next song on the sound room random playback screen.	{U}
080AF140	Play the previous song on the sound room random playback screen.	{U}
080AEF64	Sound Room Generate a playlist for random playback.	{U}
02021388	:02021407	Playlist for random playback in the sound room.	{U}
0202BCB8	gCurrentRealCameraPos	{J}
080357E4	UpdateMapGraphicsIfUnitHP0AndFog	{U}
080358E4	UpdateMapGraphicsIfUnitHP0AndFog	{U}
0807B5DC	BeginPoisonMapAnim	{U}
0807D924	BeginPoisonMapAnim	{J}
0807B7F0	BeginMapAnimDance	{U}
0807DB38	BeginMapAnimDance	{J}
0807B634	BeginHatchFromEggsMapAnim	{U}
0807D97C	BeginHatchFromEggsMapAnim	{J}
0803584C	ExecPoison	{U}
080358C0	ExecHatchFromEggs	{U}
0803594C	ExecPoison	{J}
080359C0	ExecHatchFromEggs	{J}
0809A320	SortPrepScreenItemList	{J}
08098048	SortPrepScreenItemList	{U}
080267DC	ppStandingMapSpriteTable	{J}
08026838	ppStandingMapSpriteTable	{U}
0800D474	BattleEventEngineExists	{J}
0800D48C	DeleteEventEngines	{J}
080AC610	CalcGraphicsFromMiniMapTypeFromCoordinateXY	{J}
080ac424	GetMiniMapTypeFromCoordinateXY	{J}
0801DADC	CheckIfValidForLPressCursor	{U}
0801DB4C	SetCursorToNextUnitOfCurrentlySelectedUnit	{U}
0801D740	CheckIfValidForLPressCursor	{J}
0801D7B0	SetCursorToNextUnitOfCurrentlySelectedUnit	{J}
08036E0C	BKSEL_LoadPalette_Low	Read the battle prediction palette address	{J}
08036e4c	BKSEL_LoadPalette	{J}
0807E114	Get the map animation affiliation palette.	{J}
08036D0C	BKSEL_LoadPalette_Low	Read the battle prediction palette address	{U}
08036D4C	BKSEL_LoadPalette	{U}
0807BDD0	Get the map animation affiliation palette.	{U}
080B46B4	SoundRoomDestructor	{J}
080AFA94	SoundRoomDestructor	{U}
0802f304	ExecElixirSelfHeal	{J}
0802f3f0	ExecAntitoxin	{J}
0802f9e0	ExecLightRune	{J}
0802fb0c	ExecRingItem	{J}
0802f08c	ExecFortify	{J}
0802f104	ExecNightmare	{J}
0802f430	ExecChestKey	{J}
0802F3E4	ExecElixirSelfHeal	{U}
0802F4D0	ExecAntitoxin	{U}
0802FA90	ExecLightRune	{U}
0802FBBC	ExecRingItem	{U}
0802F1D8	ExecNightmare	{U}
0802F510	ExecChestKey	{U}
080913d8	OnChangeAnimationSoloEachUnit	{U}
080936B0	OnChangeAnimationSoloEachUnit	{J}
08AB0B48	:08AB0FDB	Promotion's red font and ClassReel's English font data	{J}
08A2FCE4	:08A301AF	Promotion's red font and ClassReel's English font data	{U}
080B75EC	OpInfo Fade out of music at the end of class reel	{J}
08056BC0	FireStartBattleEnding	{J}
02017724	BattleEndingState	{J}
0808FDF0	CheckSoftResetKeyCommand	{J}
03000055	IsTextDialogAWait	{J}
0300005D	IsTextDialogAWait	{U}
08A94270	:08A942C6	Data for fade-out black	{J}
08A1852C	:08A18582	Data for fade-out black	{U}
08090B48	AddSortedUnitList	{U}
08092E20	AddSortedUnitList	{J}
0807E574	StartBattleDebugProcs	{J}
0807C230	StartBattleDebugProcs	{U}
08AC2898	StartWorldMapMiniMapProcs	{J}
08072E74	StartBattleManaketeTransform	{J}
08A3EED4	StartWorldMapMiniMapProcs	{U}
080708CC	StartBattleManaketeTransform	{U}
08220D18	:08221CD8	Unused instrument table 1.	{U}
08223BF8	:08223E38	Unused instrument table 2.	{U}
082109C8	:08211988	Unused instrument table 1.	{J}
082138A8	:08214084	Unused instrument table 2.	{J}
088BC5E8	:088BC60F	Move units with unused units.	1	{U}
088BCCC8	:088BCD03	Unused unit placement.	1	{U}
088C179C	:088C17D3	Move units with unused units.	2	{U}
088C1D30	:088C1DCF	Unused unit placement.	2	{U}
088C9C40	:088C9CAF	Move units with unused units.	3	{U}
088CA250	:088CA463	Unused unit placement.	3	{U}
088CA60C	:088CA63B	Move units with unused units.	4	{U}
088CAEAC	:088CAF87	Unused unit placement.	4	{U}
088CB020	:088CB057	Move units with unused units.	5	{U}
088CB574	:088CB613	Unused unit placement.	5	{U}
088D1448	:088D164F	Unused unit placement.	6	enemy.	{U}
08910B48	:08910B6F	Move units with unused units.	1	{J}
08911200	:0891123B	Unused unit placement.	1	{J}
08915C84	:08915CBB	Move units with unused units.	2	{J}
08916218	:089162B7	Unused unit placement.	2	{J}
0891E0A8	:0891E117	Move units with unused units.	3	{J}
0891E6A4	:0891E8D3	Unused unit placement.	3	{J}
0891EA60	:0891EA8F	Move units with unused units.	4	{J}
0891F300	:0891F3DB	Unused unit placement.	4	{J}
0891F474	:0891F4AB	Move units with unused units.	5	{J}
0891F9C8	:0891FA57	Unused unit placement.	5	{J}
0892589C	:08925AA3	Unused unit placement.	6	enemy.	{J}
086792A4	:08679B03	Unknown	Unused data.	1	{U}
0867EA48	:0867EE03	Unknown	Unused data.	2	{U}
087A8CD0	:087A8F64	Part of the background of magical motion such as resire.	{J}
0875879C	:08758A30	Part of the background of magical motion such as resire.	{U}
08083308	GetTrapPointer	GetCurrentChapterBallistaePtr	{U}
08083320	GetTrapAdditionalHardModePointer	GetCurrentChapterBallistae2Ptr	{U}
081F56A4	:081F56AB	Save data header 1 AGB-FE9.	{J}
081F5784	:081F578B	Save data header 2 AGB-FE9.	{J}
08205C9C	:08205CA3	Save data header 1 AGB-FE9.	{U}
08205D7C	:08205D83	Save data header 1 AGB-FE9.	{U}
080B987C	Displaying the status screen of the world map.	{U}
08A748B4	:08A74914	Status screen page name Image related data.	{J}
08AC1CB8	:08AC1E24	Worldmap scroll related data.	{J}
08A3E2F8	:08A3E464	Worldmap scroll related data.	{U}
085FF1C0	:085FF1C8	EfxDummy01000000FrameControl	{J}
085FF1B4	:085FF1C0	EfxDummy01000000FrameData	{J}
085D4F90	:085D4F98	EfxDummy01000000FrameControl	{U}
085D4F84	:085D4F90	EfxDummy01000000FrameData	{U}
081F5BE8	Used for "survival evaluation" of strategy evaluation.	{J}
0805B3B0	SetupEkrUnitMainMini_OPClassReel	{J}
080B8A88	Start_opinfoDrawBattleAnime	r0=this	r1=OPClassReelDataPointer	{J}
080B8A48	Cleanup_opinfoDrawBattleAnime	{J}
080B83A8	Preparation_opinfoDrawBattleAnime	{J}
080B87FC	DrawMain_opinfoDrawBattleAnime	{J}
0203AAA0	:0203C61F	During link arena	May be only in real link games, in which case it may as well be considered always free.	{J}
0805A60C	SetupEkrUnitMainMini_OPClassReel	{J}
080B3EDC	Start_opinfoDrawBattleAnime	r0=this	r1=OPClassReelDataPointer	{U}
080B3E9C	Cleanup_opinfoDrawBattleAnime	{U}
080B37FC	DrawMain_opinfoDrawBattleAnime	{U}
080B3C50	Preparation_opinfoDrawBattleAnime	{U}
080891AC	HelpDialog_CalcStringWidthAndHeight	{U}
0802DA94	OnOpen_TradeMenu_HelpBoxControlSub	{J}
0802DB3C	MainLoop_TradeMenu_HelpBoxControlSub	{J}
0802DC10	OnClose_TradeMenu_HelpBoxControlSub	{J}
0802DB5C	OnOpen_TradeMenu_HelpBoxControlSub	{U}
0802DC04	MainLoop_TradeMenu_HelpBoxControlSub	{U}
0802DCD8	OnClose_TradeMenu_HelpBoxControlSub	{U}
0801D344	PlayerPhase_FinishAction	{U}
0801D51C	GetUnitSelectionValueThing	{U}
0801FDAC	ChapterIntro_KeyListen_Init	{U}
0801FDBC	ChapterIntro_KeyListen_Loop	{U}
0801FE14	PutScreenFogEffect	{U}
0801FEE8	PutScreenFogEffectOverlayed	{U}
0203E764	sStatScreenInfo	{U}
0203E784	sLastHbi	{U}
03001E38	gMPlayTrack_BGM1	{U}
030020B8	gMPlayTrack_BGM2	{U}
03002338	gMPlayTrack_SE1_SYS1	{U}
030023D8	gMPlayTrack_SE2_SYS2	{U}
03002478	gMPlayTrack_SE3_BMP1	{U}
030025B8	gMPlayTrack_SE4_BMP2	{U}
030026F8	gMPlayTrack_SE5_BMP3	{U}
03002888	gMPlayTrack_SE6_BMP4	{U}
030029C8	gMPlayTrack_SE7_EVT	{U}
03002A68	verifySramFast_Work	{U}
03002B08	readSramFast_Work	{U}
03002B8C	monitor_stdin	{U}
03002B90	monitor_stdout	{U}
03002B94	monitor_stderr	{U}
03002B98	openfiles	{U}
080001CC	foundInterrupt	{U}
08000560	lt_bitTable	{U}
08001D00	ExecBothHBlankHandlers	{U}
080033DC	PrintProcessName	{U}
08003418	PrintProcessTree	{U}
0801A7F4	RevertMovementScript	{U}
080207F4	ChapterIntro_LightBurst_Init	{U}
08020808	ChapterIntro_LightBurst_Loop	{U}
080208F8	ChapterIntro_InitBLDCNT	{U}
08020B30	ChapterIntro_InitMapDisplay	{U}
08020C2C	ChapterIntro_BeginFadeToMap	{U}
08020CA4	ChapterIntro_LoopFadeToMap	{U}
08020DBC	ChapterIntro_BeginCloseTextMaybe	{U}
08020DE8	ChapterIntro_LoopCloseTextMaybe	{U}
08020E48	ChapterIntro_BeginFadeOut	{U}
08020EAC	ChapterIntro_LoopFadeOut	{U}
08020F00	ChapterIntro_BeginFastFadeToMap	{U}
08020FF8	ChapterIntro_LoopFastFadeToMap	{U}
08021080	ChapterIntro_SetSkipTarget	{U}
08021088	ChapterIntro_SetTimerMaybe	{U}
08021090	ChapterIntro_TickTimerMaybe	{U}
08024E40	ForEachUnitInMovement	{U}
08025514	TryAddUnitToGiveTargetList	{U}
08025594	MakeGiveTargetList	{U}
080255C8	TryAddUnitToTalkTargetList	{U}
08025B18	TryAddUnitToRefreshTargetList	{U}
08025B6C	MakeTargetListForRefresh	{U}
0802646C	TryAddToMineTargetList	{U}
08026524	TryAddToLightRuneTargetList	{U}
080285A0	InitSupportBonuses	{U}
0802873C	SetSupportLevelGained	{U}
080298D4	OnSelectPutTrap	{U}
0802D3B8	TradeMenu_HighlightUpdater_OnInit	{U}
0802D3C0	TradeMenu_HighlightUpdater_OnLoop	{U}
0802D438	TradeMenu_GetAdjustedRow	{U}
0802D58C	TradeMenu_RefreshSelectableCells	{U}
0802D5E8	TradeMenu_UpdateSelection	{U}
0802D72C	TradeMenu_ApplyItemSwap	{U}
0802DDD0	TradeMenu_TutorialHandCursor_Update	{U}
0802DE08	TradeMenu_DoubleTutorialHandCursor_Update	{U}
0802DE6C	StartTradeMenuTutorialHandCursor	{U}
0802DE80	StartDoubleTradeMenuTutorialHandCursor	{U}
0802DE94	EndTradeMenuTutorialHandCursor	{U}
0802DEA4	EndDoubleTradeMenuTutorialHandCursor	{U}
0802DEB4	TradeMenu_TutorialWait_OnInit	{U}
0802DEBC	TradeMenu_TutorialWait_OnLoop	{U}
0802DF08	TradeMenu_UpdateTutorial	{U}
0802E110	AreKeysHeld	{U}
0802E12C	TradeMenu_StartTutorialEventLock	{U}
0802E754	GenerateGasTrapTargets	{U}
0802E7D4	ShouldSkipGasTrapDisplay	{U}
0802F208	ApplyNightmareEffect	{U}
0803001C	AfterItemUse_SetTargetStatus	{U}
080315CC	RemoveItemFromConvoy	{U}
08031688	GetSupplyUnit	{U}
08032C88	GetMovementScriptFromPath	{U}
08032EB4	UpdatePathArrowWithCursor	{U}
0803306C	GetDirectionOfPathBeforeIndex	{U}
080330D4	GetDirectionOfPathAfterIndex	{U}
08033148	PointInCameraBounds	{U}
0803318C	DrawPathArrow	{U}
08033248	DrawUpdatedPathArrow	{U}
080333D4	PrepScreen_DeploySupplyUnit	{U}
0803342C	PrepScreen_RemoveSupplyUnit	{U}
080364D8	GetBattleForecastPanelSide	{U}
0803650C	InitBattleForecastIconPaletteBuffer	{U}
08036628	PutBattleForecastItemName	{U}
08036EA8	PutBattleForecastWeaponTriangleArrows	{U}
08036F4C	PutBattleForecastMultipliers	{U}
08036FE8	UpdateBattleForecastEffectivenessPalettes	{U}
0803705C	BattleForecast_LoopDisplay	{U}
080370C8	BattleForecast_OnNewBattle	{U}
0803710C	BattleForecast_LoopSlideIn	{U}
080371F0	BattleForecast_LoopSlideOut	{U}
0803738C	UpdateBattleForecastContents	{U}
080373B4	CloseBattleForecast	{U}
08037B34	ClearBallistaOccupied	{U}
08037B3C	SetBallistaOccupied	{U}
08037BAC	DungeonRecordUi_InitText	{U}
08037E7C	UpdateDungeonMapTime	{U}
08037EB0	UpdateDungeonStats	{U}
08037FCC	UpdateDungeonRecordStats	{U}
08038134	UpdateDungeonEnemiesDefeated	{U}
08038240	SetupDungeonRecordUi	{U}
08038448	DrawDungeonRecordUiLabels	{U}
080384BC	DrawNumberText	{U}
08038588	DrawNumberText_WithReset	{U}
08038698	DrawTimeText	{U}
08038900	DrawTimeText_WithReset	{U}
08038BA4	DrawDungeonRecordUiText	{U}
08038E38	DungeonRecordUi_UpdateRunningTime	{U}
08038EA8	DungeonRecordUi_KeyListenerUpdatesTime	{U}
08038ED0	DungeonRecordUi_KeyListener	{U}
08038EF0	EndDungeonRecordUi	{U}
080391D0	DungeonRecordUi_SpawnUpdateValueProc	{U}
08039200	GetCurrentDungeonValueByUiLabel	{U}
0803929C	GetRecordDungeonValueByUiLabel	{U}
08039360	DungeonRecordUi_IsNewRecordForLabel	{U}
0803958C	DungeonRecordUi_UpdateEnemiesDefeatedCount	{U}
08039690	DungeonRecordUi_GotoNextLabel	{U}
080407F0	GetSpecialItemFuncIndex	{U}
080408DC	AiSpecialItemDoorKey	{U}
08040974	AiSpecialItemLockpick	{U}
08040A78	AiSpecialItemAntitoxin	{U}
080410F8	AiDetermineNightmareEffectiveness	{U}
080411F8	AiTryUseNightmareStaff	{U}
080413CC	AiDecideNightmareStaff	{U}
08041404	AiTryDKSummon	{U}
08041584	AiDecideDKSummon	{U}
0804D3DC	ChangePreparationScreenBGM	{U}
080782A8	SelectFromWeightedArray	{U}
08086DF0	InitTexts	{U}
08087920	FindNextUnit	{U}
080879DC	PageSlide_OnLoop	{U}
08087ACC	PageSlide_OnEnd	{U}
08087AD8	StartPageSlide	{U}
08087B40	GlowBlendCtrl_OnInit	{U}
08087BA0	GlowBlendCtrl_OnLoop	{U}
08087BF0	StartGlowBlendCtrl	{U}
08087C04	EndGlowBlendCtrl	{U}
08087C34	UnitSlide_InitFadeOut	{U}
08087CC0	UnitSlide_FadeOutLoop	{U}
08087D24	UnitSlide_InitFadeIn	{U}
08087D98	UnitSlide_FadeInLoop	{U}
08087DF8	UnitSlide_SetNewUnit	{U}
08087E28	ClearSlide	{U}
08087E7C	StartUnitSlide	{U}
08087F48	PageNameCtrl_OnInit	{U}
08088014	PageNameCtrl_AnimOut	{U}
080880DC	PageNameCtrl_AnimIn	{U}
080881AC	PageNumCtrl_OnInit	{U}
080881C4	PageNumCtrl_CheckSlide	{U}
080881FC	PageNumCtrl_UpdateArrows	{U}
080882E4	PageNumCtrl_UpdatePageNum	{U}
08088354	PageNumCtrl_DisplayMuPlatform	{U}
08088384	PageNumCtrl_DisplayBlinkIcons	{U}
0808844C	StatScreen_BlackenScreen	{U}
080884B0	StatScreen_InitDisplay	{U}
0808873C	StatScreen_OnIdle	{U}
080888B4	StatScreen_OnClose	{U}
0808890C	StatScreen_ResumeFromHelp	{U}
08088CFC	HelpBox_OnOpen	{U}
08088D3C	HelpBox_OnLoop	{U}
08088D64	HelpBox_OnClose	{U}
08088DB8	HelpBox_WaitClose	{U}
08089060	HbMoveCtrl_OnInitBox	{U}
08089088	HbMoveCtrl_OnIdle	{U}
08089150	HbMoveCtrl_OnEnd	{U}
08089210	ApplyHelpBoxPosition	{U}
08089320	HbPopulate_AutoItem	{U}
08089430	HbLock_OnIdle	{U}
080A7578	Minimap_GetRoadTileIndex	{U}
080A75CC	NormalizeSeaMinimapTerrain	{U}
080A767C	NormalizeWaterMinimapTerrain	{U}
080A769C	Minimap_GetWaterTileIndex	{U}
080A7730	Minimap_GetRiverTileIndex	{U}
080A77D4	Minimap_GetCliffBoneTileIndex	{U}
080A78FC	Minimap_GetStairsTileIndex	{U}
080A7940	Minimap_GetDoorTileIndex	{U}
080A7970	Minimap_GetBridgeTileIndex	{U}
080A7E84	Minimap_HandleOpen	{U}
080A8020	Minimap_LoopRotateIn	{U}
080A81B8	Minimap_HandleClose	{U}
080A8234	Minimap_LoopRotateOut	{U}
080A85E4	Minimap_HandleDPadInput	{U}
080A86CC	Minimap_AdjustCursorOnClose	{U}
080A8708	Minimap_Idle_InputHandler	{U}
080CF4D6	SoundMain_1	{U}
080CF4F8	SoundMain_2	{U}
080CF4FA	SoundMain_3	{U}
080CF50A	SoundMain_4	{U}
080CF52A	SoundMain_5	{U}
080CF534	lt_SOUND_INFO_PTR	{U}
080CF538	lt_ID_NUMBER	{U}
080CF53C	lt_SoundMainRAM_Buffer	{U}
080CF540	lt_REG_VCOUNT	{U}
080CF544	lt_o_SoundInfo_pcmBuffer	{U}
080CF548	lt_PCM_DMA_BUF_SIZE	{U}
080CF558	SoundMainRAM_Reverb	{U}
080CF5AC	SoundMainRAM_NoReverb	{U}
080CF5BA	SoundMainRAM_NoReverb_Ok	{U}
080CF5C6	SoundMainRAM_NoReverb_Loop	{U}
080CF5E4	SoundMainRAM_ChanLoop	{U}
080CF95E	MPlayJumpTableCopy_Loop	{U}
080CFB42	m4aSoundVSync_SkipDMA1	{U}
080CFB4C	m4aSoundVSync_SkipDMA2	{U}
080CFB5C	m4aSoundVSync_Done	{U}
080D00A0	ld_r3_tp_adr_i_unchecked	{U}
080D305C	quorem	{U}
080D3F44	std	{U}
080D74C8	gUninitializedMemory	{U}
080D7EEC	sInitialParticleConfigTemplates	{U}
08205A84	sPage2TextInfo_Physical	{U}
08205AD4	sPage2TextInfo_Magical	{U}
082072D4	gFreqTable	{U}
0859B9A8	sSupportMaxExpLookup	{U}
0859D958	sObj_RainParticle1	{U}
0859D960	sObj_RainParticle2	{U}
0859D968	sRainParticleObjLookup	{U}
0859DB6C	gPathArrowOAMTable	{U}
085B6480	sStatBarPaletteLookup	{U}
085B6498	sHandHOffsetLookup	{U}
085B6550	sItemCountYOffsetLookup	{U}
085B6CB4	gLegacyUiFrameAImage	{U}
085B75A0	gLegacyUiFrameBImage	{U}
085B7E94	gLegacyUiFrameCImage	{U}
085B8754	gLegacyUiFrameDImage	{U}
085B8FF0	gUnkUiFrameImage	{U}
088D2058	gMonsterLevelWeights	{U}
089A2920	sMUFlashColorLookup	{U}
089A2B68	gMUSfxDef_Gorgon	{U}
089A2C68	sMUObjTileOffsetLookup_Default	{U}
089A2C70	sMUObjTileOffsetLookup_Other	{U}
089A2C7A	sMUBufferIdLookup	{U}
08A006FC	sSSMasterTextBatch	{U}
08A0081C	sPageSlideOffsetLut	{U}
08A008D0	sSprite_Page1Name	{U}
08A008DE	sSprite_Page2Name	{U}
08A00924	sPageNameSpriteLut	{U}
08A00930	sPageNameChrOffsetLut	{U}

0801CFA8	PlayerPhase_FinishAction	{J}
0801D180	GetUnitSelectionValueThing	{J}
0801FA38	ChapterIntro_KeyListen_Init	{J}
0801FA48	ChapterIntro_KeyListen_Loop	{J}
0801FB0C	PutScreenFogEffect	{J}
0801FBE0	PutScreenFogEffectOverlayed	{J}
0203E760	sStatScreenInfo	{J}
0203E780	sLastHbi	{J}
03001DE0	gMPlayTrack_BGM1	{J}
03002060	gMPlayTrack_BGM2	{J}
030022E0	gMPlayTrack_SE1_SYS1	{J}
03002380	gMPlayTrack_SE2_SYS2	{J}
03002420	gMPlayTrack_SE3_BMP1	{J}
03002560	gMPlayTrack_SE4_BMP2	{J}
030026A0	gMPlayTrack_SE5_BMP3	{J}
03002830	gMPlayTrack_SE6_BMP4	{J}
03002970	gMPlayTrack_SE7_EVT	{J}
03002A10	verifySramFast_Work	{J}
03002AB0	readSramFast_Work	{J}
03002B34	monitor_stdin	{J}
03002B38	monitor_stdout	{J}
03002B3C	monitor_stderr	{J}
03002B40	openfiles	{J}
080001CC	foundInterrupt	{J}
08000560	lt_bitTable	{J}
08001C50	ExecBothHBlankHandlers	{J}
08003328	PrintProcessName	{J}
08003364	PrintProcessTree	{J}
0801A4D0	RevertMovementScript	{J}
080204EC	ChapterIntro_LightBurst_Init	{J}
08020500	ChapterIntro_LightBurst_Loop	{J}
080205F0	ChapterIntro_InitBLDCNT	{J}
08020828	ChapterIntro_InitMapDisplay	{J}
08020924	ChapterIntro_BeginFadeToMap	{J}
0802099C	ChapterIntro_LoopFadeToMap	{J}
08020AB4	ChapterIntro_BeginCloseTextMaybe	{J}
08020AE0	ChapterIntro_LoopCloseTextMaybe	{J}
08020B40	ChapterIntro_BeginFadeOut	{J}
08020BA4	ChapterIntro_LoopFadeOut	{J}
08020BF8	ChapterIntro_BeginFastFadeToMap	{J}
08020CF0	ChapterIntro_LoopFastFadeToMap	{J}
08020D78	ChapterIntro_SetSkipTarget	{J}
08020D80	ChapterIntro_SetTimerMaybe	{J}
08020D88	ChapterIntro_TickTimerMaybe	{J}
08024DF0	ForEachUnitInMovement	{J}
080254C4	TryAddUnitToGiveTargetList	{J}
08025364	MakeGiveTargetList	{J}
08025578	TryAddUnitToTalkTargetList	{J}
08025ABC	TryAddUnitToRefreshTargetList	{J}
08025364	MakeTargetListForRefresh	{J}
08026410	TryAddToMineTargetList	{J}
080264C8	TryAddToLightRuneTargetList	{J}
08028534	InitSupportBonuses	{J}
080286D0	SetSupportLevelGained	{J}
08029874	OnSelectPutTrap	{J}
0802D2F0	TradeMenu_HighlightUpdater_OnInit	{J}
0802D2F8	TradeMenu_HighlightUpdater_OnLoop	{J}
0802D370	TradeMenu_GetAdjustedRow	{J}
0802D4C4	TradeMenu_RefreshSelectableCells	{J}
0802D520	TradeMenu_UpdateSelection	{J}
0802D664	TradeMenu_ApplyItemSwap	{J}
0802DD08	TradeMenu_TutorialHandCursor_Update	{J}
0802DD40	TradeMenu_DoubleTutorialHandCursor_Update	{J}
0802DDA4	StartTradeMenuTutorialHandCursor	{J}
0802DDB8	StartDoubleTradeMenuTutorialHandCursor	{J}
0802DDCC	EndTradeMenuTutorialHandCursor	{J}
0802DDDC	EndDoubleTradeMenuTutorialHandCursor	{J}
0802DDEC	TradeMenu_TutorialWait_OnInit	{J}
0802DDF4	TradeMenu_TutorialWait_OnLoop	{J}
0802DE40	TradeMenu_UpdateTutorial	{J}
0802E048	AreKeysHeld	{J}
0802E064	TradeMenu_StartTutorialEventLock	{J}
0802E68C	GenerateGasTrapTargets	{J}
0802E70C	ShouldSkipGasTrapDisplay	{J}
0802F134	ApplyNightmareEffect	{J}
0802FF6C	AfterItemUse_SetTargetStatus	{J}
08031518	RemoveItemFromConvoy	{J}
080315D4	GetSupplyUnit	{J}
08032BB0	GetMovementScriptFromPath	{J}
08032DCC	UpdatePathArrowWithCursor	{J}
08032F80	GetDirectionOfPathBeforeIndex	{J}
08032FE8	GetDirectionOfPathAfterIndex	{J}
0803305C	PointInCameraBounds	{J}
0803309C	DrawPathArrow	{J}
08033158	DrawUpdatedPathArrow	{J}
080332E4	PrepScreen_DeploySupplyUnit	{J}
0803333C	PrepScreen_RemoveSupplyUnit	{J}
080365D8	GetBattleForecastPanelSide	{J}
0803660C	InitBattleForecastIconPaletteBuffer	{J}
08036728	PutBattleForecastItemName	{J}
08036FA8	PutBattleForecastWeaponTriangleArrows	{J}
0803704C	PutBattleForecastMultipliers	{J}
080370E8	UpdateBattleForecastEffectivenessPalettes	{J}
0803715C	BattleForecast_LoopDisplay	{J}
080371C8	BattleForecast_OnNewBattle	{J}
0803720C	BattleForecast_LoopSlideIn	{J}
0803720C	BattleForecast_LoopSlideOut	{J}
0803744C	UpdateBattleForecastContents	{J}
08037474	CloseBattleForecast	{J}
08037BCC	ClearBallistaOccupied	{J}
08037BD4	SetBallistaOccupied	{J}
08037C44	DungeonRecordUi_InitText	{J}
08037FA8	UpdateDungeonMapTime	{J}
08037FDC	UpdateDungeonStats	{J}
080380F8	UpdateDungeonRecordStats	{J}
08038260	UpdateDungeonEnemiesDefeated	{J}
0803836C	SetupDungeonRecordUi	{J}
08038574	DrawDungeonRecordUiLabels	{J}
080385E8	DrawNumberText	{J}
080386AC	DrawNumberText_WithReset	{J}
08038788	DrawTimeText	{J}
080389CC	DrawTimeText_WithReset	{J}
08038C1C	DrawDungeonRecordUiText	{J}
08038EB0	DungeonRecordUi_UpdateRunningTime	{J}
08038F20	DungeonRecordUi_KeyListenerUpdatesTime	{J}
08038F48	DungeonRecordUi_KeyListener	{J}
08038F68	EndDungeonRecordUi	{J}
08039248	DungeonRecordUi_SpawnUpdateValueProc	{J}
08039278	GetCurrentDungeonValueByUiLabel	{J}
08039314	GetRecordDungeonValueByUiLabel	{J}
080393D8	DungeonRecordUi_IsNewRecordForLabel	{J}
08039604	DungeonRecordUi_UpdateEnemiesDefeatedCount	{J}
08039708	DungeonRecordUi_GotoNextLabel	{J}
08040770	GetSpecialItemFuncIndex	{J}
0804085C	AiSpecialItemDoorKey	{J}
080408F4	AiSpecialItemLockpick	{J}
080409F8	AiSpecialItemAntitoxin	{J}
08041078	AiDetermineNightmareEffectiveness	{J}
08041178	AiTryUseNightmareStaff	{J}
0804134C	AiDecideNightmareStaff	{J}
08041384	AiTryDKSummon	{J}
08041504	AiDecideDKSummon	{J}
0804E170	ChangePreparationScreenBGM	{J}
0807A6CC	SelectFromWeightedArray	{J}
080890AC	InitTexts	{J}
08089BAC	FindNextUnit	{J}
08089C68	PageSlide_OnLoop	{J}
08089D58	PageSlide_OnEnd	{J}
08089D64	StartPageSlide	{J}
08089DCC	GlowBlendCtrl_OnInit	{J}
08089E2C	GlowBlendCtrl_OnLoop	{J}
08089E7C	StartGlowBlendCtrl	{J}
08089E90	EndGlowBlendCtrl	{J}
08089EC0	UnitSlide_InitFadeOut	{J}
08089F4C	UnitSlide_FadeOutLoop	{J}
08089FB0	UnitSlide_InitFadeIn	{J}
0808A024	UnitSlide_FadeInLoop	{J}
0808A084	UnitSlide_SetNewUnit	{J}
0808A0B4	ClearSlide	{J}
0808A108	StartUnitSlide	{J}
0808A1D4	PageNameCtrl_OnInit	{J}
0808A2A0	PageNameCtrl_AnimOut	{J}
0808A368	PageNameCtrl_AnimIn	{J}
0808A438	PageNumCtrl_OnInit	{J}
0808A450	PageNumCtrl_CheckSlide	{J}
0808A488	PageNumCtrl_UpdateArrows	{J}
0808A570	PageNumCtrl_UpdatePageNum	{J}
0808A5E0	PageNumCtrl_DisplayMuPlatform	{J}
0808A610	PageNumCtrl_DisplayBlinkIcons	{J}
0808A6D8	StatScreen_BlackenScreen	{J}
0808A73C	StatScreen_InitDisplay	{J}
0808A9C8	StatScreen_OnIdle	{J}
0808AB40	StatScreen_OnClose	{J}
0808AB98	StatScreen_ResumeFromHelp	{J}
0808AF88	HelpBox_OnOpen	{J}
0808AFC8	HelpBox_OnLoop	{J}
0808AFF0	HelpBox_OnClose	{J}
0808B044	HelpBox_WaitClose	{J}
0808B2EC	HbMoveCtrl_OnInitBox	{J}
0808B314	HbMoveCtrl_OnIdle	{J}
0808B3DC	HbMoveCtrl_OnEnd	{J}
0808B49C	ApplyHelpBoxPosition	{J}
0808B5AC	HbPopulate_AutoItem	{J}
0808B6A0	HbLock_OnIdle	{J}
080ABF90	Minimap_GetRoadTileIndex	{J}
080ABFE4	NormalizeSeaMinimapTerrain	{J}
080AC094	NormalizeWaterMinimapTerrain	{J}
080AC0B4	Minimap_GetWaterTileIndex	{J}
080AC148	Minimap_GetRiverTileIndex	{J}
080AC1EC	Minimap_GetCliffBoneTileIndex	{J}
080AC314	Minimap_GetStairsTileIndex	{J}
080AC358	Minimap_GetDoorTileIndex	{J}
080AC388	Minimap_GetBridgeTileIndex	{J}
080AC89C	Minimap_HandleOpen	{J}
080ACA38	Minimap_LoopRotateIn	{J}
080ACBD0	Minimap_HandleClose	{J}
080ACC4C	Minimap_LoopRotateOut	{J}
080ACFFC	Minimap_HandleDPadInput	{J}
080AD0E4	Minimap_AdjustCursorOnClose	{J}
080AD120	Minimap_Idle_InputHandler	{J}
080D41CE	SoundMain_1	{J}
080D41F0	SoundMain_2	{J}
080D41F2	SoundMain_3	{J}
080D4202	SoundMain_4	{J}
080D4222	SoundMain_5	{J}
080D422C	lt_SOUND_INFO_PTR	{J}
080D4230	lt_ID_NUMBER	{J}
080D4234	lt_SoundMainRAM_Buffer	{J}
080D4238	lt_REG_VCOUNT	{J}
080D423C	lt_o_SoundInfo_pcmBuffer	{J}
080D4240	lt_PCM_DMA_BUF_SIZE	{J}
080D4250	SoundMainRAM_Reverb	{J}
080D42A4	SoundMainRAM_NoReverb	{J}
080D42B2	SoundMainRAM_NoReverb_Ok	{J}
080D42BE	SoundMainRAM_NoReverb_Loop	{J}
080D42DC	SoundMainRAM_ChanLoop	{J}
080D4656	MPlayJumpTableCopy_Loop	{J}
080D483A	m4aSoundVSync_SkipDMA1	{J}
080D4844	m4aSoundVSync_SkipDMA2	{J}
080D4854	m4aSoundVSync_Done	{J}
080D4D98	ld_r3_tp_adr_i_unchecked	{J}
080D7C98	quorem	{J}
080D8B80	std	{J}
080DC108	gUninitializedMemory	{J}
080DCC20	sInitialParticleConfigTemplates	{J}
081F6F84	gFreqTable	{J}
085C3E88	sSupportMaxExpLookup	{J}
085C5E38	sObj_RainParticle1	{J}
085C5E40	sObj_RainParticle2	{J}
085C5E48	sRainParticleObjLookup	{J}
085C5EC4	sProc_DelayedBMapDispResume	{J}
085C604C	gPathArrowOAMTable	{J}
085E0660	sStatBarPaletteLookup	{J}
085E0678	sHandHOffsetLookup	{J}
085E0730	sItemCountYOffsetLookup	{J}
085E0E94	gLegacyUiFrameAImage	{J}
085E0E94	gLegacyUiFrameBImage	{J}
085E0E94	gLegacyUiFrameCImage	{J}
085E2934	gLegacyUiFrameDImage	{J}
085E31D0	gUnkUiFrameImage	{J}
089264AC	gMonsterLevelWeights	{J}
08A12FA8	sMUFlashColorLookup	{J}
08A131F0	gMUSfxDef_Gorgon	{J}
08A132F0	sMUObjTileOffsetLookup_Default	{J}
08A132F0	sMUObjTileOffsetLookup_Other	{J}
08A13302	sMUBufferIdLookup	{J}
08A727B4	sSSMasterTextBatch	{J}
08A728D4	sPageSlideOffsetLut	{J}
08A72988	sSprite_Page1Name	{J}
08A72996	sSprite_Page2Name	{J}
08A729DC	sPageNameSpriteLut	{J}
08A729E8	sPageNameChrOffsetLut	{J}
080098D4	GameCtrl_GotoToClassReel	{J}
080B762C	opinfoview_draw_font	{J}
080099E4	GameCtrl_GotoToClassReel	{U}
080B2A14	opinfoview_draw_font	{U}
08083FF4	ExecMapAnimHammern	{J}
08080170	StartMapAnimHammernProcs	{J}
08083F94	ExecMapAnimRestore	{J}
08080334	StartMapAnimRestoreProcs	{J}
08083FD4	ExecMapAnimStone	{J}
08080524	StartMapAnimStoneProcs	{J}
08083F74	ExecMapAnimBeserk	{J}
080800c0	StartMapAnimBeserkProcs	{J}
0807FB1C	StartMapAnimUnusedProcs	{J}
08083D68	ExecMapAnimAntitoxin	{J}
08083D94	ExecMapAnimPureWater	{J}
0807f9cc	StartMapAnimAntitoxinPureWaterProcs	{J}
08083D28	ExecMapAnimFortify	{J}
0807f3f8	StartMapAnimFortifyProcs	{J}
08083D08	ExecMapAnimBarrier	{J}
08080978	StartMapAnimBarrierProcs	{J}
08083CE8	ExecMapAnimSilence	{J}
080807CC	StartMapAnimSilenceProcs	{J}

08081CB4	ExecMapAnimHammern	{U}
0807D7D8	StartMapAnimHammernProcs	{U}
08081C54	ExecMapAnimRestore	{U}
0807DFF4	StartMapAnimRestoreProcs	{U}
08081C94	ExecMapAnimStone	{U}
0807e1e4	StartMapAnimStoneProcs	{U}
08081C34	ExecMapAnimBeserk	{U}
0807dd80	StartMapAnimBeserkProcs	{U}
08081A28	ExecMapAnimAntitoxin	{U}
08081A54	ExecMapAnimPureWater	{U}
0807D688	StartMapAnimAntitoxinPureWaterProcs	{U}
080819E8	ExecMapAnimFortify	{U}
0807d0b4	StartMapAnimFortifyProcs	{U}
080819C8	ExecMapAnimBarrier	{U}
0807e638	StartMapAnimBarrierProcs	{U}
080819A8	ExecMapAnimSilence	{U}
0807e48c	StartMapAnimSilenceProcs	{U}
08083D48	ExecMapAnimNightmare	{J}
0807f818	StartMapAnimNightmareProcs	{J}
08081A08	ExecMapAnimNightmare	{U}
0807d4d4	StartMapAnimNightmareProcs	{U}
0807F6A4	StartMapAnimFortifySubProcs	{J}
0807D360	StartMapAnimFortifySubProcs	{U}
0808068C	StartMapAnimUnused2Procs	{J}
0807E34C	StartMapAnimUnused2Procs	{U}
08083FB4	ExecMapAnimSleep	{J}
08080414	StartMapAnimSleepProcs	{J}
08083F58	ExecMapAnimUnlock	{J}
08021C28	StartMapAnimUnused3Procs	{J}
08021510	StartMapAnimUnused4Procs	{J}
080DC7DC	:080DC810	LightRuneMapAnimSomeData	{J}
080DC810	:080DC844	MapAnimUnuse4SomeData	{J}
08021610	UnuseMapAnim5Init	{J}
0802155C	UnuseMapAnim5Init2	{J}
080216A4	StartMapAnimUnused5Procs	{J}
085C38C8	:085C390C	WarpInData1	{J}
085C390C	:085C3950	WarpInData2	{J}
08081C74	ExecMapAnimSleep	{U}
0807DFF4	StartMapAnimSleepProcs	{U}
08081C18	ExecMapAnimUnlock	{U}
08021684	StartMapAnimUnused4Procs	{U}
080D7B30	:080D7B64	LightRuneMapAnimSomeData	{U}
080D7B64	:080D7B98	MapAnimUnuse4SomeData	{U}
080215F0	UnuseMapAnim5Init	{U}
0802153C	UnuseMapAnim5Init2	{U}
08021684	StartMapAnimUnused5Procs	{U}
0859B448	:0859B48C	WarpInData1	{U}
0859B48C	:0859B4D0	WarpInData2	{U}
080220B0	StartUnuseMapAnim6Procs	Remains of FE7.	The implementation department displaying the shiny mark on the sword above Roland's altar.	{J}
085C3798	:085C37C0	UNUSEDBIN	UnsedChapterIntroProcs	{J}
085B9A28	:085B9A7C	UNUSEDBIN	They are probably Procs for debugging.	{J}
08022E2C	BkSel_ButtonBPressed	When the B button is pressed in battle prediction.	{J}
0807F114	StartMapEggHatch2Procs	{J}
