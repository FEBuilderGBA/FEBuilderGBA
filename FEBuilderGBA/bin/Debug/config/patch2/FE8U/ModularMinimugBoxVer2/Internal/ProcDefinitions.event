
#ifndef HAX_PROC_DEFINITIONS_EVENT
#define HAX_PROC_DEFINITIONS_EVENT

// proc Definitions for writing proc code

#define PROC_END										"SHORT 0x00 0 0 0"
#define PROC_SET_NAME(apsNamePointer)					"SHORT 0x01 0; POIN apsNamePointer"
#define PROC_CALL_ROUTINE(aprRoutine)					"SHORT 0x02 0; POIN aprRoutine"
#define PROC_LOOP_ROUTINE(aprRoutine)					"SHORT 0x03 0; POIN aprRoutine"
#define PROC_SET_DESTRUCTOR(aprRoutine)					"SHORT 0x04 0; POIN aprRoutine"
#define PROC_NEW_CHILD(ap6CChild)						"SHORT 0x05 0; POIN ap6CChild"
#define PROC_NEW_CHILD_BLOCKING(ap6CChild)				"SHORT 0x06 1; POIN ap6CChild"
#define PROC_NEW_MAIN_BUGGED(ap6CMain)					"SHORT 0x07 0; POIN ap6CMain"
#define PROC_WHILE_EXISTS(ap6CToCheck)					"SHORT 0x08 0; POIN ap6CToCheck"
#define PROC_END_ALL(ap6CToCheck)						"SHORT 0x09 0; POIN ap6CToCheck"
#define PROC_BREAK_ALL_LOOP(ap6CToCheck)				"SHORT 0x0A 0; POIN ap6CToCheck"
#define PROC_LABEL(aLabelId)							"SHORT 0x0B aLabelId 0 0"
#define PROC_GOTO(aLabelId)								"SHORT 0x0C aLabelId 0 0"
#define PROC_JUMP(ap6CCode)								"SHORT 0x0D 0; POIN ap6CCode"
#define PROC_SLEEP(aTime)								"SHORT 0x0E aTime 0 0"
#define PROC_SET_MARK(aMark)							"SHORT 0x0F aMark 0 0"
#define PROC_BLOCK										"SHORT 0x10 0 0 0"
#define PROC_END_IF_DUPLICATE							"SHORT 0x11 0 0 0"
#define PROC_SET_BIT4									"SHORT 0x12 0 0 0"
#define PROC_13											"SHORT 0x13 0 0 0"
#define PROC_WHILE_ROUTINE(aprRoutine)					"SHORT 0x14 0; POIN aprRoutine"
#define PROC_15											"SHORT 0x15 0 0 0"
#define PROC_CALL_ROUTINE_2(aprRoutine)					"SHORT 0x16 0; POIN aprRoutine"
#define PROC_END_DUPLICATES								"SHORT 0x17 0 0 0"
#define PROC_CALL_ROUTINE_ARG(aprRoutine, aArgument)	"SHORT 0x18 aArgument; POIN aprRoutine"
#define PROC_19											"SHORT 0x19 0 0 0"

#define PROC_YIELD "PROC_SLEEP(0)"

#endif // HAX_PROC_DEFINITIONS_EVENT