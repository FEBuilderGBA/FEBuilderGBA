#define csvmacro000(arg000,arg001) "BYTE arg000 arg001; "

SoundRoomBG_Table:
csvmacro000(0x0,0xFF)		//BG0
csvmacro000(0x1,0xFF)		//BG
csvmacro000(0x2,0xFF)		//BG
csvmacro000(0x3,0xFF)		//BG
csvmacro000(0x4,0xFF)		//BG
csvmacro000(0x5,0xFF)		//BG
csvmacro000(0x6,0xFF)		//BG
csvmacro000(0x7,0xFF)		//BG
csvmacro000(0x8,0xFF)		//BG
csvmacro000(0x9,0xFF)		//BG
csvmacro000(0xA,0xFF)		//BG
csvmacro000(0xB,0xFF)		//BG
csvmacro000(0xC,0xFF)		//BG
csvmacro000(0xD,0xFF)		//BG
csvmacro000(0xE,0xFF)		//BG
csvmacro000(0xF,0xFF)		//BG
csvmacro000(0x10,0xFF)		//BG
csvmacro000(0x11,0xFF)		//BG
csvmacro000(0x12,0xFF)		//BG
csvmacro000(0x13,0xFF)		//BG
csvmacro000(0x14,0xFF)		//BG
csvmacro000(0x15,0xFF)		//BG
csvmacro000(0x16,0xFF)		//BG
csvmacro000(0x17,0xFF)		//BG
csvmacro000(0x18,0xFF)		//BG
csvmacro000(0x19,0xFF)		//BG
csvmacro000(0x1A,0xFF)		//BG
csvmacro000(0x1B,0xFF)		//BG
csvmacro000(0x1C,0xFF)		//BG
csvmacro000(0x1D,0xFF)		//BG
csvmacro000(0x1E,0xFF)		//BG
csvmacro000(0x1F,0xFF)		//BG
csvmacro000(0x20,0xFF)		//BG
csvmacro000(0x21,0xFF)		//BG
csvmacro000(0x22,0xFF)		//BG
csvmacro000(0x23,0xFF)		//BG
csvmacro000(0x24,0xFF)		//BG
csvmacro000(0x25,0xFF)		//BG
csvmacro000(0x26,0xFF)		//BG
csvmacro000(0x27,0xFF)		//BG
csvmacro000(0x28,0xFF)		//BG
csvmacro000(0x29,0xFF)		//BG
csvmacro000(0x2A,0xFF)		//BG
csvmacro000(0x2B,0xFF)		//BG
csvmacro000(0x2C,0xFF)		//BG
csvmacro000(0x2D,0xFF)		//BG
csvmacro000(0x2E,0xFF)		//BG
csvmacro000(0x2F,0xFF)		//BG
csvmacro000(0x30,0xFF)		//BG
csvmacro000(0x31,0xFF)		//BG
csvmacro000(0x32,0xFF)		//BG
csvmacro000(0x33,0xFF)		//BG
csvmacro000(0x34,0xFF)		//BG
csvmacro000(0xFF,0x00)		//CG
csvmacro000(0xFF,0x01)		//CG
csvmacro000(0xFF,0x02)		//CG
csvmacro000(0xFF,0x03)		//CG
csvmacro000(0xFF,0x04)		//CG
csvmacro000(0xFF,0x05)		//CG
csvmacro000(0xFF,0x06)		//CG
csvmacro000(0xFF,0x07)		//CG
csvmacro000(0xFF,0x08)		//CG
csvmacro000(0xFF,0x09)		//CG

csvmacro000(0xFF,0xFF)	//term

//BG,CG
//if (BG == 0xFF) return CG
//return BG
